(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 8.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[    264439,       6513]
NotebookOptionsPosition[    122501,       3879]
NotebookOutlinePosition[    249792,       6039]
CellTagsIndexPosition[    249662,       6033]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[TextData[{
 "An Introduction to ",
 StyleBox["Mathematica,",
  FontSlant->"Italic"],
 " pt.2"
}], "Title",
 CellChangeTimes->{{3.5203376409305267`*^9, 3.5203376488893967`*^9}, {
  3.5203379422126207`*^9, 3.520337944737073*^9}, {3.520452266973649*^9, 
  3.5204522907088747`*^9}, {3.520496188067972*^9, 3.520496215434477*^9}, {
  3.520524507690027*^9, 3.520524524680627*^9}, {3.521186991347549*^9, 
  3.5211869929045763`*^9}, {3.521187168999729*^9, 3.521187172886361*^9}},
 TextAlignment->Center],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " Vernacular: The Anatomy of Expressions"
}], "Subtitle",
 CellChangeTimes->{{3.521061572494377*^9, 3.52106158438132*^9}, {
   3.52110900482513*^9, 3.521109007616037*^9}, {3.521110218154893*^9, 
   3.521110311539185*^9}, {3.521114088589637*^9, 3.521114116572743*^9}, {
   3.5211148048666973`*^9, 3.521114806280904*^9}, 3.521187165119624*^9, {
   3.5211941138538437`*^9, 3.52119411514028*^9}}],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["\[OpenCurlyDoubleQuote]Standard\[CloseCurlyDoubleQuote] vs. \
\[OpenCurlyDoubleQuote]Non-Standard\[CloseCurlyDoubleQuote]",
  FontSlant->"Italic"],
 StyleBox[" expressions",
  FontSlant->"Plain"]
}], "Section",
 CellChangeTimes->{{3.521187199410755*^9, 3.521187241435644*^9}}],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["\[OpenCurlyDoubleQuote]Standard\[CloseCurlyDoubleQuote] ",
  FontSlant->"Italic"],
 "expressions:",
 StyleBox[" ",
  FontSlant->"Italic"],
 "function[x,y,...,z]"
}], "Subsection",
 CellChangeTimes->{{3.521187289438086*^9, 3.521187296416502*^9}}],

Cell[TextData[{
 "This is the way that ",
 StyleBox["all",
  FontSlant->"Italic"],
 " expressions are handled internally by ",
 StyleBox["Mathematica,",
  FontSlant->"Italic"],
 " and \[LineSeparator]",
 StyleBox["all",
  FontSlant->"Italic"],
 " functions can be called in this way\[LongDash] \n(",
 StyleBox["even if a non-standard form is more familiar or more often used",
  FontSlant->"Italic"],
 "). \nKnowing this will help us understand how to manipulate formulae \
symbolically. "
}], "Text",
 CellChangeTimes->{{3.521187307026259*^9, 3.521187336057644*^9}}],

Cell[CellGroupData[{

Cell[TextData[{
 "In the expression \[OpenCurlyDoubleQuote]function[x,y,...,z]\
\[CloseCurlyDoubleQuote], \[OpenCurlyDoubleQuote]function\
\[CloseCurlyDoubleQuote] is called the ",
 StyleBox["Head",
  FontWeight->"Bold"]
}], "Subsubsection",
 CellChangeTimes->{3.521187354146761*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Head", "[", 
  RowBox[{"function", "[", 
   RowBox[{"x", ",", "y", ",", "z"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{
  3.5211887455439243`*^9, {3.5212009193587637`*^9, 3.521200926197204*^9}}],

Cell[BoxData["function"], "Output",
 CellChangeTimes->{3.521200926650167*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "The ",
 StyleBox["Head",
  FontWeight->"Bold"],
 " of the ",
 StyleBox["outer-most",
  FontSlant->"Italic"],
 " function of any expression is its \[OpenCurlyDoubleQuote]0th ",
 StyleBox["Part",
  FontWeight->"Bold"],
 "\[CloseCurlyDoubleQuote]:"
}], "Subsubsection",
 CellChangeTimes->{{3.521187370881825*^9, 3.52118738677487*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Part", "[", 
  RowBox[{
   RowBox[{"function", "[", 
    RowBox[{"x", ",", "y", ",", "z"}], "]"}], ",", "0"}], "]"}]], "Input",
 CellChangeTimes->{
  3.521188742640327*^9, {3.5212009352939177`*^9, 3.521200938076123*^9}}],

Cell[BoxData["function"], "Output",
 CellChangeTimes->{3.521200938523818*^9}]
}, Open  ]],

Cell["or, equivalently, ", "Text",
 CellChangeTimes->{{3.5211873941340714`*^9, 3.5211874005253468`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"function", "[", 
   RowBox[{"x", ",", "y", ",", "z"}], "]"}], "[", 
  RowBox[{"[", "0", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.521187402673696*^9, 3.521187407294116*^9}, 
   3.52118873894449*^9, {3.5212009777453623`*^9, 3.521200979708014*^9}}],

Cell[BoxData["function"], "Output",
 CellChangeTimes->{3.521200990200799*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Even ",
 StyleBox["atomic",
  FontSlant->"Italic"],
 " expressions have ",
 StyleBox["Head",
  FontWeight->"Bold"],
 "s\[LongDash]corresponding to their ",
 StyleBox["type",
  FontSlant->"Italic"],
 ":"
}], "Subsubsection",
 CellChangeTimes->{3.5211874217220488`*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Head", "[", "x", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Head", "[", "1", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Head", "[", "1.", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Head", "[", 
  RowBox[{"3", "/", "4"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Head", "[", 
  RowBox[{"1", "+", "\[ImaginaryI]"}], "]"}]}], "Input",
 CellChangeTimes->{
  3.521188752871231*^9, {3.521201017449821*^9, 3.521201065345193*^9}}],

Cell[BoxData["Symbol"], "Output",
 CellChangeTimes->{{3.521201024914212*^9, 3.521201062645447*^9}}],

Cell[BoxData["Integer"], "Output",
 CellChangeTimes->{{3.521201024914212*^9, 3.521201062647756*^9}}],

Cell[BoxData["Real"], "Output",
 CellChangeTimes->{{3.521201024914212*^9, 3.521201062649476*^9}}],

Cell[BoxData["Rational"], "Output",
 CellChangeTimes->{{3.521201024914212*^9, 3.521201062651229*^9}}],

Cell[BoxData["Complex"], "Output",
 CellChangeTimes->{{3.521201024914212*^9, 3.521201062652871*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "The \[OpenCurlyDoubleQuote]Standard\[CloseCurlyDoubleQuote] form of any \
expression can be found by calling for ",
 StyleBox["FullForm",
  FontWeight->"Bold"],
 ":"
}], "Subsubsection",
 CellChangeTimes->{{3.521187447173291*^9, 3.521187457948625*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullForm", "[", 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"x", "+", "y", "+", "z"}], ")"}], "*", "w"}], ")"}], 
   RowBox[{"q", "/", "r"}]], "]"}]], "Input",
 CellChangeTimes->{{3.521187528896926*^9, 3.521187539984125*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   RowBox[{"Power", "[", 
    RowBox[{
     RowBox[{"Times", "[", 
      RowBox[{"w", ",", 
       RowBox[{"Plus", "[", 
        RowBox[{"x", ",", "y", ",", "z"}], "]"}]}], "]"}], ",", 
     RowBox[{"Times", "[", 
      RowBox[{"q", ",", 
       RowBox[{"Power", "[", 
        RowBox[{"r", ",", 
         RowBox[{"-", "1"}]}], "]"}]}], "]"}]}], "]"}],
   ShowSpecialCharacters->False,
   ShowStringCharacters->True,
   NumberMarks->True],
  FullForm]], "Output",
 CellChangeTimes->{3.521201093692099*^9}]
}, Open  ]],

Cell[TextData[{
 "This can be converted back to a more human-readable form via ",
 StyleBox["StandardForm",
  FontWeight->"Bold"],
 ", ",
 StyleBox["InputForm",
  FontWeight->"Bold"],
 ", or ",
 StyleBox["TraditionalForm",
  FontWeight->"Bold"]
}], "Text",
 CellChangeTimes->{{3.521187478684319*^9, 3.521187513883165*^9}, {
  3.5211875732041693`*^9, 3.521187575914967*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"StandardForm", "[", 
  TagBox[
   StyleBox[
    RowBox[{"Power", "[", 
     RowBox[{
      RowBox[{"Times", "[", 
       RowBox[{"w", ",", 
        RowBox[{"Plus", "[", 
         RowBox[{"x", ",", "y", ",", "z"}], "]"}]}], "]"}], ",", 
      RowBox[{"Times", "[", 
       RowBox[{"q", ",", 
        RowBox[{"Power", "[", 
         RowBox[{"r", ",", 
          RowBox[{"-", "1"}]}], "]"}]}], "]"}]}], "]"}],
    ShowSpecialCharacters->False,
    ShowStringCharacters->True,
    NumberMarks->True],
   FullForm], "]"}], "\[IndentingNewLine]", 
 RowBox[{"TraditionalForm", "[", 
  TagBox[
   StyleBox[
    RowBox[{"Power", "[", 
     RowBox[{
      RowBox[{"Times", "[", 
       RowBox[{"w", ",", 
        RowBox[{"Plus", "[", 
         RowBox[{"x", ",", "y", ",", "z"}], "]"}]}], "]"}], ",", 
      RowBox[{"Times", "[", 
       RowBox[{"q", ",", 
        RowBox[{"Power", "[", 
         RowBox[{"r", ",", 
          RowBox[{"-", "1"}]}], "]"}]}], "]"}]}], "]"}],
    ShowSpecialCharacters->False,
    ShowStringCharacters->True,
    NumberMarks->True],
   FullForm], "]"}], "\[IndentingNewLine]", 
 RowBox[{"InputForm", "[", 
  TagBox[
   StyleBox[
    RowBox[{"Power", "[", 
     RowBox[{
      RowBox[{"Times", "[", 
       RowBox[{"w", ",", 
        RowBox[{"Plus", "[", 
         RowBox[{"x", ",", "y", ",", "z"}], "]"}]}], "]"}], ",", 
      RowBox[{"Times", "[", 
       RowBox[{"q", ",", 
        RowBox[{"Power", "[", 
         RowBox[{"r", ",", 
          RowBox[{"-", "1"}]}], "]"}]}], "]"}]}], "]"}],
    ShowSpecialCharacters->False,
    ShowStringCharacters->True,
    NumberMarks->True],
   FullForm], "]"}]}], "Input",
 CellChangeTimes->{{3.521187468048862*^9, 3.5211874873414183`*^9}, {
  3.5211875805248117`*^9, 3.5211876271573563`*^9}}],

Cell[BoxData[
 SuperscriptBox[
  RowBox[{"(", 
   RowBox[{"w", " ", 
    RowBox[{"(", 
     RowBox[{"x", "+", "y", "+", "z"}], ")"}]}], ")"}], 
  RowBox[{"q", "/", "r"}]]], "Output",
 CellChangeTimes->{3.521201165248425*^9}],

Cell[BoxData[
 FormBox[
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{"w", " ", 
     RowBox[{"(", 
      RowBox[{"x", "+", "y", "+", "z"}], ")"}]}], ")"}], 
   RowBox[{"q", "/", "r"}]], TraditionalForm]], "Output",
 CellChangeTimes->{3.521201165250372*^9}],

Cell["(w*(x + y + z))^(q/r)", "Output",
 CellChangeTimes->{3.521201165252555*^9}]
}, Open  ]],

Cell[TextData[{
 "If you\[CloseCurlyQuote]re ever worried about the order in which ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " performs its operations, use ",
 StyleBox["FullForm",
  FontWeight->"Bold"]
}], "Text",
 CellDingbat->"\[FivePointedStar]",
 CellChangeTimes->{3.521187646862134*^9}],

Cell[TextData[{
 "The nested structure of the expression is nicely illustrated by the \
function: ",
 StyleBox["TreeForm",
  FontWeight->"Bold"]
}], "Text",
 CellChangeTimes->{3.521187671292774*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TreeForm", "[", 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"x", "+", "y", "+", "z"}], ")"}], "*", "w"}], ")"}], 
   RowBox[{"q", "/", "r"}]], "]"}]], "Input"],

Cell[BoxData[
 GraphicsBox[
  TagBox[GraphicsComplexBox[{{1.382514924957592, 2.3700255856415864`}, {
    0.39500426427359775`, 1.5800170570943908`}, {0., 0.7900085285471954}, {
    0.7900085285471955, 0.7900085285471954}, {0., 0.}, {0.7900085285471955, 
    0.}, {1.580017057094391, 0.}, {2.3700255856415864`, 
    1.5800170570943908`}, {1.9750213213679888`, 0.7900085285471954}, {
    2.765029849915184, 0.7900085285471954}, {2.3700255856415864`, 0.}, {
    3.160034114188782, 0.}}, {
     {RGBColor[0.55, 0.45, 0.45], 
      LineBox[{{1, 2}, {1, 8}, {2, 3}, {2, 4}, {4, 5}, {4, 6}, {4, 7}, {8, 
       9}, {8, 10}, {10, 11}, {10, 12}}]}, {
      TagBox[
       TooltipBox[InsetBox[
         FrameBox[
          StyleBox["Power", "StandardForm", "Output",
           StripOnInput->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontSize->Scaled[0.05],
           FontColor->GrayLevel[0]],
          Background->RGBColor[1., 1., 0.871],
          FrameStyle->GrayLevel[0.5],
          StripOnInput->False], 1],
        TagBox[
         SuperscriptBox[
          RowBox[{"(", 
            RowBox[{"w", " ", 
              RowBox[{"(", 
                RowBox[{"x", "+", "y", "+", "z"}], ")"}]}], ")"}], 
          RowBox[{"q", "/", "r"}]], HoldForm]],
       Annotation[#, 
        HoldForm[($CellContext`w ($CellContext`x + $CellContext`y + \
$CellContext`z))^($CellContext`q/$CellContext`r)], "Tooltip"]& ], 
      TagBox[
       TooltipBox[InsetBox[
         FrameBox[
          StyleBox["Times", "StandardForm", "Output",
           StripOnInput->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontSize->Scaled[0.05],
           FontColor->GrayLevel[0]],
          Background->RGBColor[1., 1., 0.871],
          FrameStyle->GrayLevel[0.5],
          StripOnInput->False], 2],
        TagBox[
         RowBox[{"w", " ", 
           RowBox[{"(", 
             RowBox[{"x", "+", "y", "+", "z"}], ")"}]}], HoldForm]],
       Annotation[#, 
        HoldForm[$CellContext`w ($CellContext`x + $CellContext`y + \
$CellContext`z)], "Tooltip"]& ], 
      TagBox[
       TooltipBox[InsetBox[
         FrameBox[
          StyleBox[
           TagBox["w",
            HoldForm], "StandardForm", "Output",
           StripOnInput->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontSize->Scaled[0.05],
           FontColor->GrayLevel[0]],
          Background->RGBColor[1., 1., 0.871],
          FrameStyle->GrayLevel[0.5],
          StripOnInput->False], 3],
        TagBox["w", HoldForm]],
       Annotation[#, 
        HoldForm[$CellContext`w], "Tooltip"]& ], 
      TagBox[
       TooltipBox[InsetBox[
         FrameBox[
          StyleBox["Plus", "StandardForm", "Output",
           StripOnInput->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontSize->Scaled[0.05],
           FontColor->GrayLevel[0]],
          Background->RGBColor[1., 1., 0.871],
          FrameStyle->GrayLevel[0.5],
          StripOnInput->False], 4],
        TagBox[
         RowBox[{"x", "+", "y", "+", "z"}], HoldForm]],
       Annotation[#, 
        HoldForm[$CellContext`x + $CellContext`y + $CellContext`z], 
        "Tooltip"]& ], 
      TagBox[
       TooltipBox[InsetBox[
         FrameBox[
          StyleBox[
           TagBox["x",
            HoldForm], "StandardForm", "Output",
           StripOnInput->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontSize->Scaled[0.05],
           FontColor->GrayLevel[0]],
          Background->RGBColor[1., 1., 0.871],
          FrameStyle->GrayLevel[0.5],
          StripOnInput->False], 5],
        TagBox["x", HoldForm]],
       Annotation[#, 
        HoldForm[$CellContext`x], "Tooltip"]& ], 
      TagBox[
       TooltipBox[InsetBox[
         FrameBox[
          StyleBox[
           TagBox["y",
            HoldForm], "StandardForm", "Output",
           StripOnInput->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontSize->Scaled[0.05],
           FontColor->GrayLevel[0]],
          Background->RGBColor[1., 1., 0.871],
          FrameStyle->GrayLevel[0.5],
          StripOnInput->False], 6],
        TagBox["y", HoldForm]],
       Annotation[#, 
        HoldForm[$CellContext`y], "Tooltip"]& ], 
      TagBox[
       TooltipBox[InsetBox[
         FrameBox[
          StyleBox[
           TagBox["z",
            HoldForm], "StandardForm", "Output",
           StripOnInput->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontSize->Scaled[0.05],
           FontColor->GrayLevel[0]],
          Background->RGBColor[1., 1., 0.871],
          FrameStyle->GrayLevel[0.5],
          StripOnInput->False], 7],
        TagBox["z", HoldForm]],
       Annotation[#, 
        HoldForm[$CellContext`z], "Tooltip"]& ], 
      TagBox[
       TooltipBox[InsetBox[
         FrameBox[
          StyleBox["Times", "StandardForm", "Output",
           StripOnInput->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontSize->Scaled[0.05],
           FontColor->GrayLevel[0]],
          Background->RGBColor[1., 1., 0.871],
          FrameStyle->GrayLevel[0.5],
          StripOnInput->False], 8],
        TagBox[
         FractionBox["q", "r"], HoldForm]],
       Annotation[#, 
        HoldForm[$CellContext`q/$CellContext`r], "Tooltip"]& ], 
      TagBox[
       TooltipBox[InsetBox[
         FrameBox[
          StyleBox[
           TagBox["q",
            HoldForm], "StandardForm", "Output",
           StripOnInput->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontSize->Scaled[0.05],
           FontColor->GrayLevel[0]],
          Background->RGBColor[1., 1., 0.871],
          FrameStyle->GrayLevel[0.5],
          StripOnInput->False], 9],
        TagBox["q", HoldForm]],
       Annotation[#, 
        HoldForm[$CellContext`q], "Tooltip"]& ], 
      TagBox[
       TooltipBox[InsetBox[
         FrameBox[
          StyleBox["Power", "StandardForm", "Output",
           StripOnInput->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontSize->Scaled[0.05],
           FontColor->GrayLevel[0]],
          Background->RGBColor[1., 1., 0.871],
          FrameStyle->GrayLevel[0.5],
          StripOnInput->False], 10],
        TagBox[
         FractionBox["1", "r"], HoldForm]],
       Annotation[#, 
        HoldForm[$CellContext`r^(-1)], "Tooltip"]& ], 
      TagBox[
       TooltipBox[InsetBox[
         FrameBox[
          StyleBox[
           TagBox["r",
            HoldForm], "StandardForm", "Output",
           StripOnInput->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontSize->Scaled[0.05],
           FontColor->GrayLevel[0]],
          Background->RGBColor[1., 1., 0.871],
          FrameStyle->GrayLevel[0.5],
          StripOnInput->False], 11],
        TagBox["r", HoldForm]],
       Annotation[#, 
        HoldForm[$CellContext`r], "Tooltip"]& ], 
      TagBox[
       TooltipBox[InsetBox[
         FrameBox[
          StyleBox[
           TagBox[
            RowBox[{"-", "1"}],
            HoldForm], "StandardForm", "Output",
           StripOnInput->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontSize->Scaled[0.05],
           FontColor->GrayLevel[0]],
          Background->RGBColor[1., 1., 0.871],
          FrameStyle->GrayLevel[0.5],
          StripOnInput->False], 12],
        TagBox[
         RowBox[{"-", "1"}], HoldForm]],
       Annotation[#, 
        HoldForm[-1], "Tooltip"]& ]}}],
   Annotation[#, 
    VertexCoordinateRules -> {{1.382514924957592, 2.3700255856415864`}, {
     0.39500426427359775`, 1.5800170570943908`}, {0., 0.7900085285471954}, {
     0.7900085285471955, 0.7900085285471954}, {0., 0.}, {0.7900085285471955, 
     0.}, {1.580017057094391, 0.}, {2.3700255856415864`, 
     1.5800170570943908`}, {1.9750213213679888`, 0.7900085285471954}, {
     2.765029849915184, 0.7900085285471954}, {2.3700255856415864`, 0.}, {
     3.160034114188782, 0.}}]& ],
  AspectRatio->NCache[2 Rational[2, 11]^Rational[1, 2], 0.8528028654224418],
  FrameTicks->Automatic,
  PlotRange->All,
  PlotRangePadding->Scaled[0.1]]], "Output",
 CellChangeTimes->{3.521201122828779*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Head", "[", 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"x", "+", "y", "+", "z"}], ")"}], "*", "w"}], ")"}], 
   RowBox[{"q", "/", "r"}]], "]"}], "\[IndentingNewLine]", 
 RowBox[{"FullForm", "[", 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"x", "+", "y", "+", "z"}], ")"}], "*", "w"}], ")"}], 
   RowBox[{"q", "/", "r"}]], "]"}]}], "Input",
 CellChangeTimes->{{3.521201206813157*^9, 3.521201209245255*^9}}],

Cell[BoxData["Power"], "Output",
 CellChangeTimes->{{3.5212011979634247`*^9, 3.521201209735989*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   RowBox[{"Power", "[", 
    RowBox[{
     RowBox[{"Times", "[", 
      RowBox[{"w", ",", 
       RowBox[{"Plus", "[", 
        RowBox[{"x", ",", "y", ",", "z"}], "]"}]}], "]"}], ",", 
     RowBox[{"Times", "[", 
      RowBox[{"q", ",", 
       RowBox[{"Power", "[", 
        RowBox[{"r", ",", 
         RowBox[{"-", "1"}]}], "]"}]}], "]"}]}], "]"}],
   ShowSpecialCharacters->False,
   ShowStringCharacters->True,
   NumberMarks->True],
  FullForm]], "Output",
 CellChangeTimes->{{3.5212011979634247`*^9, 3.521201209738244*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "The number of vertices of such a tree graph is a measure of an expression\
\[CloseCurlyQuote]s complexity, and this is counted by the function ",
 StyleBox["LeafCount",
  FontWeight->"Bold"]
}], "Subsubsection",
 CellChangeTimes->{3.5211876875092707`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LeafCount", "[", 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"x", "+", "y", "+", "z"}], ")"}], "*", "w"}], ")"}], 
   RowBox[{"q", "/", "r"}]], "]"}]], "Input"],

Cell[BoxData["12"], "Output",
 CellChangeTimes->{3.5212012268002787`*^9}]
}, Open  ]],

Cell[TextData[{
 "Many functions, such as ",
 StyleBox["FullSimplify",
  FontWeight->"Bold"],
 " use ",
 StyleBox["LeafCount",
  FontWeight->"Bold"],
 " as their (principle) metric for complexity. Output with a ",
 StyleBox["LeafCount",
  FontWeight->"Bold"],
 " above a few thousand are essentially ",
 StyleBox["unreadable",
  FontSlant->"Italic"],
 ". "
}], "Text",
 CellChangeTimes->{{3.5211876981341667`*^9, 3.521187786550374*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Notice that arguments of functions are ",
 StyleBox["always",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 " enclosed within ",
 StyleBox["square brackets",
  FontWeight->"Bold"],
 ". Thus,"
}], "Subsubsection",
 CellChangeTimes->{{3.5211878040782337`*^9, 3.521187808669772*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sin", 
  RowBox[{"(", "\[Pi]", ")"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"\[Pi]", " ", "Sin"}]], "Output",
 CellChangeTimes->{3.521201291408389*^9}]
}, Open  ]],

Cell[TextData[{
 "is interpreted as ",
 StyleBox["multiplication",
  FontSlant->"Italic"],
 " of the symbol \[OpenCurlyDoubleQuote]Sin\[CloseCurlyDoubleQuote] by \
\[OpenCurlyDoubleQuote]\[Pi]\[CloseCurlyDoubleQuote] (although \
\[OpenCurlyDoubleQuote]Sin[]\[CloseCurlyDoubleQuote] is a built-in function, \
it is only defined ",
 StyleBox["when it has been given an argument",
  FontSlant->"Italic"],
 "). "
}], "Text",
 CellChangeTimes->{3.521187825272991*^9}],

Cell[TextData[{
 "We can confirm that this is indeed how ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " interprets it using ",
 StyleBox["FullForm",
  FontWeight->"Bold"],
 ":"
}], "Text",
 CellChangeTimes->{{3.521187830866819*^9, 3.521187850785366*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullForm", "[", 
  RowBox[{"Sin", 
   RowBox[{"(", "\[Pi]", ")"}]}], "]"}]], "Input"],

Cell[BoxData[
 TagBox[
  StyleBox[
   RowBox[{"Times", "[", 
    RowBox[{"Pi", ",", "Sin"}], "]"}],
   ShowSpecialCharacters->False,
   ShowStringCharacters->True,
   NumberMarks->True],
  FullForm]], "Output",
 CellChangeTimes->{3.5212013255505657`*^9, 3.521201377627046*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Sin", "[", "Sin", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"Sin", ",", "0", ",", "\[Pi]"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.5212013284072723`*^9, 3.521201340027759*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
g3RzwTxJtrbOtf/7f+B/AAObe4U=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  PlotRange->
   NCache[{{0, Pi}, {0., 0.9999999707682925}}, {{0, 3.141592653589793}, {0., 
     0.9999999707682925}}],
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{3.521201340929875*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Infix notation  \[OpenCurlyDoubleQuote]",
 StyleBox[" x \[SmallCircle] y \[SmallCircle] ... \[SmallCircle] z ",
  FontWeight->"Bold"],
 "\[OpenCurlyDoubleQuote]  : the most typical \[OpenCurlyDoubleQuote]",
 StyleBox["Non-Standard",
  FontSlant->"Italic"],
 "\[CloseCurlyDoubleQuote] form for expressions"
}], "Subsection",
 CellChangeTimes->{{3.521187906207182*^9, 3.521187923087068*^9}, {
  3.5211879576534033`*^9, 3.5211879855647287`*^9}}],

Cell["\<\
Infix notation is used to write \[OpenCurlyDoubleQuote]function[x,y,...,z]\
\[CloseCurlyDoubleQuote] in the form \[OpenCurlyDoubleQuote]x \[SmallCircle] \
y \[SmallCircle] ... \[SmallCircle] z\[CloseCurlyDoubleQuote] where \
\[OpenCurlyDoubleQuote] \[SmallCircle] \[OpenCurlyDoubleQuote] is a symbol \
associated with \[OpenCurlyDoubleQuote]function\[CloseCurlyDoubleQuote].  \
\>", "Text",
 CellChangeTimes->{{3.521187940159881*^9, 3.5211879559021883`*^9}, 
   3.5211879947742167`*^9}],

Cell["\<\
(Any function can be called in this way, but it is rarely advisable to define \
your functions in this form).\
\>", "Text",
 CellChangeTimes->{3.521188006548232*^9}],

Cell[TextData[{
 "Although ",
 StyleBox["all",
  FontSlant->"Italic"],
 " functions are treated internally by ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " (and hence can be used) in the \[OpenCurlyDoubleQuote]Standard\
\[CloseCurlyDoubleQuote] form described above, there are a few functions \
which are ",
 StyleBox["almost always ",
  FontSlant->"Italic"],
 "written by users in ",
 StyleBox["Infix",
  FontWeight->"Bold"],
 " form. Most of these should be ",
 StyleBox["very",
  FontSlant->"Italic"],
 " familiar\[LongDash]and we only make note of them here to highlight their \
",
 StyleBox["unfamiliar",
  FontSlant->"Italic"],
 " but ",
 StyleBox["standard",
  FontSlant->"Italic"],
 " forms."
}], "Text",
 CellChangeTimes->{{3.5211880113954983`*^9, 3.52118804329906*^9}}],

Cell[CellGroupData[{

Cell[TextData[{
 "Commonly ",
 StyleBox["Infix",
  FontWeight->"Bold"],
 "ed ",
 StyleBox["mathematical",
  FontSlant->"Italic"],
 " operations: "
}], "Subsubsection",
 CellChangeTimes->{3.521188058659274*^9}],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["x * y * ... * z  :: Times[x,y,...,z]",
  FontWeight->"Bold"],
 "  (\[OpenCurlyDoubleQuote]\[SpaceKey]\[CloseCurlyDoubleQuote] can be used \
interchangably with \[OpenCurlyDoubleQuote]*\[CloseCurlyDoubleQuote])"
}], "Item",
 CellChangeTimes->{3.521188071628386*^9}],

Cell[TextData[StyleBox["x + y + ... + z  :: Plus[x,y,...,z]",
 FontWeight->"Bold"]], "Item",
 CellChangeTimes->{3.5211881120111427`*^9}]
}, Open  ]],

Cell["\<\
Notice, however, that \[OpenCurlyDoubleQuote] x - y \[OpenCurlyDoubleQuote] \
is not \[OpenCurlyDoubleQuote]an Infix form of \[OpenCurlyDoubleQuote]Minus\
\[CloseCurlyDoubleQuote]\[CloseCurlyDoubleQuote] (no such function exists!)\
\>", "Text",
 CellChangeTimes->{{3.521188144457024*^9, 3.521188188935018*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"x", "-", "y"}], "\[IndentingNewLine]", 
 RowBox[{"FullForm", "[", "%", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(", 
   RowBox[{"x", "-", "y"}], ")"}], "[", 
  RowBox[{"[", 
   RowBox[{"2", ",", "1"}], "]"}], "]"}]}], "Input",
 CellChangeTimes->{
  3.521188716657745*^9, {3.521201478811047*^9, 3.5212015133231907`*^9}, {
   3.521201543687722*^9, 3.521201558870229*^9}}],

Cell[BoxData[
 RowBox[{"x", "-", "y"}]], "Output",
 CellChangeTimes->{{3.521201486353384*^9, 3.521201513725828*^9}, {
  3.52120154800517*^9, 3.521201559013801*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   RowBox[{"Plus", "[", 
    RowBox[{"x", ",", 
     RowBox[{"Times", "[", 
      RowBox[{
       RowBox[{"-", "1"}], ",", "y"}], "]"}]}], "]"}],
   ShowSpecialCharacters->False,
   ShowStringCharacters->True,
   NumberMarks->True],
  FullForm]], "Output",
 CellChangeTimes->{{3.521201486353384*^9, 3.521201513725828*^9}, {
  3.52120154800517*^9, 3.521201559017666*^9}}],

Cell[BoxData[
 RowBox[{"-", "1"}]], "Output",
 CellChangeTimes->{{3.521201486353384*^9, 3.521201513725828*^9}, {
  3.52120154800517*^9, 3.521201559021435*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Commonly ",
 StyleBox["Infix",
  FontWeight->"Bold"],
 "ed ",
 StyleBox["functorial",
  FontSlant->"Italic"],
 StyleBox[" ",
  FontWeight->"Bold"],
 "operations:"
}], "Subsubsection",
 CellChangeTimes->{3.521188212055036*^9}],

Cell[TextData[{
 StyleBox["x = y  ::  Set[x,y] ",
  FontWeight->"Bold"],
 "     (or     ",
 StyleBox["f[x] = y :: Set[f[x], y] ",
  FontWeight->"Bold"],
 "    or    ",
 StyleBox[" f[x_] = y :: Set[f[x_],y] ",
  FontWeight->"Bold"],
 ")"
}], "Item",
 CellChangeTimes->{3.521188223216556*^9, 3.521188311539962*^9}],

Cell[TextData[{
 "Like many built-in fuctions, ",
 StyleBox["Set",
  FontWeight->"Bold"],
 " can have an arbitrary number of arguments\[LongDash]\n",
 StyleBox["but it is not commutative",
  FontSlant->"Italic"],
 "! (Just as \[OpenCurlyDoubleQuote]Power[x,y]\[CloseCurlyDoubleQuote] is not \
commutative). \nThis is one main disadvantage to using Infix notation. "
}], "Text",
 CellChangeTimes->{{3.52118823371177*^9, 3.521188249997394*^9}}],

Cell["\<\
The other main `functorial\[CloseCurlyQuote] operations similarly have \
Standard forms. \
\>", "Text",
 CellChangeTimes->{3.521188260740034*^9}],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["x := y  ::  SetDelayed[x,y]    ",
  FontWeight->"Bold"],
 " (or",
 StyleBox["     f[x_] := y  ::  SetDelayed[f[x_],y]   ",
  FontWeight->"Bold"],
 "or ...)"
}], "Item",
 CellChangeTimes->{{3.521188277782847*^9, 3.521188283612719*^9}}],

Cell[TextData[{
 StyleBox["x -> y  ::  Rule[x,y",
  FontWeight->"Bold"],
 "]    (or  ",
 StyleBox[" f[x] -> y  ::  Rule[f[x],y] ",
  FontWeight->"Bold"],
 "  or   ",
 StyleBox["f[x_] -> y  ::  Rule[f[x_],y] ",
  FontWeight->"Bold"],
 ")"
}], "Item",
 CellChangeTimes->{{3.521188294326421*^9, 3.521188302004175*^9}}],

Cell[TextData[{
 StyleBox["x :> y  ::  RuleDelayed[x,y]  ",
  FontWeight->"Bold"],
 "  (or  ",
 StyleBox["f[x_] -> y  ::  RuleDelayed[f[x_],y] ",
  FontWeight->"Bold"],
 "    or  ... )"
}], "Item",
 CellChangeTimes->{{3.52118832246166*^9, 3.521188330947069*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Commonly ",
 StyleBox["Infix",
  FontWeight->"Bold"],
 "ed ",
 StyleBox["logical",
  FontSlant->"Italic"],
 " ",
 StyleBox["tests",
  FontSlant->"Italic"],
 " and ",
 StyleBox["logical operations",
  FontSlant->"Italic"]
}], "Subsubsection",
 CellChangeTimes->{{3.5211883394053783`*^9, 3.521188350947007*^9}}],

Cell[TextData[StyleBox[" x == y == ... == z  ::  Equal[x,y,...,z]",
 FontWeight->"Bold"]], "Item",
 CellChangeTimes->{3.5211883673164587`*^9}],

Cell[TextData[{
 StyleBox["Equal",
  FontWeight->"Bold"],
 " returns True or False if two things are \[OpenCurlyDoubleQuote]equal\
\[CloseCurlyDoubleQuote], and is unevaluated if the answer is unknown"
}], "Text",
 CellChangeTimes->{{3.521188375010066*^9, 3.5211883969373493`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Equal", "[", 
  RowBox[{"x", ",", "y"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"FullForm", "[", "%", "]"}], "\[IndentingNewLine]", 
 RowBox[{"x", "\[Equal]", "1"}]}], "Input",
 CellChangeTimes->{{3.521188708278376*^9, 3.5211887093131247`*^9}, {
  3.521201647110701*^9, 3.52120165676677*^9}, {3.521201694881983*^9, 
  3.521201696345831*^9}}],

Cell[BoxData[
 RowBox[{"x", "\[Equal]", "y"}]], "Output",
 CellChangeTimes->{{3.521201649723753*^9, 3.5212016571628036`*^9}, 
   3.5212016968640747`*^9}],

Cell[BoxData[
 TagBox[
  StyleBox[
   RowBox[{"Equal", "[", 
    RowBox[{"x", ",", "y"}], "]"}],
   ShowSpecialCharacters->False,
   ShowStringCharacters->True,
   NumberMarks->True],
  FullForm]], "Output",
 CellChangeTimes->{{3.521201649723753*^9, 3.5212016571628036`*^9}, 
   3.5212016968662853`*^9}],

Cell[BoxData[
 RowBox[{"x", "\[Equal]", "1"}]], "Output",
 CellChangeTimes->{{3.521201649723753*^9, 3.5212016571628036`*^9}, 
   3.52120169686834*^9}]
}, Open  ]],

Cell["Similarly, ", "Text",
 CellChangeTimes->{{3.5211884724041767`*^9, 3.521188485219606*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"x", "\[Equal]", "1"}]], "Input",
 CellChangeTimes->{{3.521188486938078*^9, 3.521188487388261*^9}, {
  3.521188705801352*^9, 3.521188705838953*^9}, {3.521201702776998*^9, 
  3.521201703424797*^9}}],

Cell[BoxData[
 RowBox[{"x", "\[Equal]", "1"}]], "Output",
 CellChangeTimes->{3.521201703568967*^9}]
}, Open  ]],

Cell[TextData[{
 "because x is undefined, ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " does not know if \[OpenCurlyDoubleQuote]x equals 1\[CloseCurlyDoubleQuote] \
or not, and therefore returns neither True nor False, but rather leaves the \
expression un-evaluated."
}], "Text",
 CellChangeTimes->{{3.521188500253503*^9, 3.521188504396328*^9}}],

Cell[TextData[{
 "Notice that two differently-ordered sets (",
 StyleBox["List",
  FontWeight->"Bold"],
 "s) are ",
 StyleBox["not",
  FontSlant->"Italic"],
 " considered ",
 StyleBox["Equal",
  FontWeight->"Bold"],
 " "
}], "Text",
 CellDingbat->"\[FivePointedStar]",
 CellChangeTimes->{{3.521188427217758*^9, 3.5211884595359*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3"}], "}"}], "\[Equal]", 
  RowBox[{"{", 
   RowBox[{"3", ",", "2", ",", "1"}], "}"}]}], "\[IndentingNewLine]", 
 RowBox[{"Equal", "@@", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"3", ",", "2", ",", "1"}], "}"}]}], 
   "}"}]}], "\[IndentingNewLine]", 
 RowBox[{"TreeForm", "/@", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"3", ",", "2", ",", "1"}], "}"}]}], "}"}]}]}], "Input",
 CellChangeTimes->{{3.5211884119411097`*^9, 3.521188417353961*^9}, 
   3.521188703297175*^9, {3.521201713703732*^9, 3.52120171908002*^9}, {
   3.521201750989305*^9, 3.521201765365148*^9}}],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{
  3.521201719498899*^9, {3.5212017590990067`*^9, 3.5212017661049623`*^9}}],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{
  3.521201719498899*^9, {3.5212017590990067`*^9, 3.5212017661070147`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[
    TagBox[
     GraphicsComplexBox[{{0.7745966692414834, 0.7745966692414834}, {0., 0.}, {
      0.7745966692414834, 0.}, {1.5491933384829668`, 0.}}, {
       {RGBColor[0.55, 0.45, 0.45], LineBox[{{1, 2}, {1, 3}, {1, 4}}]}, {
        TagBox[
         TooltipBox[InsetBox[
           FrameBox[
            StyleBox["List", "StandardForm", "Output",
             StripOnInput->False,
             LineColor->GrayLevel[0],
             FrontFaceColor->GrayLevel[0],
             BackFaceColor->GrayLevel[0],
             GraphicsColor->GrayLevel[0],
             FontSize->Scaled[0.05],
             FontColor->GrayLevel[0]],
            Background->RGBColor[1., 1., 0.871],
            FrameStyle->GrayLevel[0.5],
            StripOnInput->False], 1],
          TagBox[
           RowBox[{"{", 
             RowBox[{"1", ",", "2", ",", "3"}], "}"}], HoldForm]],
         Annotation[#, 
          HoldForm[{1, 2, 3}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[InsetBox[
           FrameBox[
            StyleBox[
             TagBox["1",
              HoldForm], "StandardForm", "Output",
             StripOnInput->False,
             LineColor->GrayLevel[0],
             FrontFaceColor->GrayLevel[0],
             BackFaceColor->GrayLevel[0],
             GraphicsColor->GrayLevel[0],
             FontSize->Scaled[0.05],
             FontColor->GrayLevel[0]],
            Background->RGBColor[1., 1., 0.871],
            FrameStyle->GrayLevel[0.5],
            StripOnInput->False], 2],
          TagBox["1", HoldForm]],
         Annotation[#, 
          HoldForm[1], "Tooltip"]& ], 
        TagBox[
         TooltipBox[InsetBox[
           FrameBox[
            StyleBox[
             TagBox["2",
              HoldForm], "StandardForm", "Output",
             StripOnInput->False,
             LineColor->GrayLevel[0],
             FrontFaceColor->GrayLevel[0],
             BackFaceColor->GrayLevel[0],
             GraphicsColor->GrayLevel[0],
             FontSize->Scaled[0.05],
             FontColor->GrayLevel[0]],
            Background->RGBColor[1., 1., 0.871],
            FrameStyle->GrayLevel[0.5],
            StripOnInput->False], 3],
          TagBox["2", HoldForm]],
         Annotation[#, 
          HoldForm[2], "Tooltip"]& ], 
        TagBox[
         TooltipBox[InsetBox[
           FrameBox[
            StyleBox[
             TagBox["3",
              HoldForm], "StandardForm", "Output",
             StripOnInput->False,
             LineColor->GrayLevel[0],
             FrontFaceColor->GrayLevel[0],
             BackFaceColor->GrayLevel[0],
             GraphicsColor->GrayLevel[0],
             FontSize->Scaled[0.05],
             FontColor->GrayLevel[0]],
            Background->RGBColor[1., 1., 0.871],
            FrameStyle->GrayLevel[0.5],
            StripOnInput->False], 4],
          TagBox["3", HoldForm]],
         Annotation[#, 
          HoldForm[3], "Tooltip"]& ]}}],
     Annotation[#, 
      VertexCoordinateRules -> {{0.7745966692414834, 0.7745966692414834}, {0.,
        0.}, {0.7745966692414834, 0.}, {1.5491933384829668`, 0.}}]& ],
    AspectRatio->1,
    FrameTicks->Automatic,
    ImageSize->{377., Automatic},
    PlotRange->All,
    PlotRangePadding->Scaled[0.1]], ",", 
   GraphicsBox[
    TagBox[
     GraphicsComplexBox[{{0.7745966692414834, 0.7745966692414834}, {0., 0.}, {
      0.7745966692414834, 0.}, {1.5491933384829668`, 0.}}, {
       {RGBColor[0.55, 0.45, 0.45], LineBox[{{1, 2}, {1, 3}, {1, 4}}]}, {
        TagBox[
         TooltipBox[InsetBox[
           FrameBox[
            StyleBox["List", "StandardForm", "Output",
             StripOnInput->False,
             LineColor->GrayLevel[0],
             FrontFaceColor->GrayLevel[0],
             BackFaceColor->GrayLevel[0],
             GraphicsColor->GrayLevel[0],
             FontSize->Scaled[0.05],
             FontColor->GrayLevel[0]],
            Background->RGBColor[1., 1., 0.871],
            FrameStyle->GrayLevel[0.5],
            StripOnInput->False], 1],
          TagBox[
           RowBox[{"{", 
             RowBox[{"3", ",", "2", ",", "1"}], "}"}], HoldForm]],
         Annotation[#, 
          HoldForm[{3, 2, 1}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[InsetBox[
           FrameBox[
            StyleBox[
             TagBox["3",
              HoldForm], "StandardForm", "Output",
             StripOnInput->False,
             LineColor->GrayLevel[0],
             FrontFaceColor->GrayLevel[0],
             BackFaceColor->GrayLevel[0],
             GraphicsColor->GrayLevel[0],
             FontSize->Scaled[0.05],
             FontColor->GrayLevel[0]],
            Background->RGBColor[1., 1., 0.871],
            FrameStyle->GrayLevel[0.5],
            StripOnInput->False], 2],
          TagBox["3", HoldForm]],
         Annotation[#, 
          HoldForm[3], "Tooltip"]& ], 
        TagBox[
         TooltipBox[InsetBox[
           FrameBox[
            StyleBox[
             TagBox["2",
              HoldForm], "StandardForm", "Output",
             StripOnInput->False,
             LineColor->GrayLevel[0],
             FrontFaceColor->GrayLevel[0],
             BackFaceColor->GrayLevel[0],
             GraphicsColor->GrayLevel[0],
             FontSize->Scaled[0.05],
             FontColor->GrayLevel[0]],
            Background->RGBColor[1., 1., 0.871],
            FrameStyle->GrayLevel[0.5],
            StripOnInput->False], 3],
          TagBox["2", HoldForm]],
         Annotation[#, 
          HoldForm[2], "Tooltip"]& ], 
        TagBox[
         TooltipBox[InsetBox[
           FrameBox[
            StyleBox[
             TagBox["1",
              HoldForm], "StandardForm", "Output",
             StripOnInput->False,
             LineColor->GrayLevel[0],
             FrontFaceColor->GrayLevel[0],
             BackFaceColor->GrayLevel[0],
             GraphicsColor->GrayLevel[0],
             FontSize->Scaled[0.05],
             FontColor->GrayLevel[0]],
            Background->RGBColor[1., 1., 0.871],
            FrameStyle->GrayLevel[0.5],
            StripOnInput->False], 4],
          TagBox["1", HoldForm]],
         Annotation[#, 
          HoldForm[1], "Tooltip"]& ]}}],
     Annotation[#, 
      VertexCoordinateRules -> {{0.7745966692414834, 0.7745966692414834}, {0.,
        0.}, {0.7745966692414834, 0.}, {1.5491933384829668`, 0.}}]& ],
    AspectRatio->1,
    FrameTicks->Automatic,
    ImageSize->{381., Automatic},
    PlotRange->All,
    PlotRangePadding->Scaled[0.1]]}], "}"}]], "Output",
 CellChangeTimes->{
  3.521201719498899*^9, {3.5212017590990067`*^9, 3.521201766158659*^9}}]
}, Open  ]],

Cell[TextData[StyleBox[" x === y === ... === z :: SameQ[x,y,...,z] ",
 FontWeight->"Bold"]], "Item",
 CellChangeTimes->{3.5211885340920753`*^9}],

Cell[TextData[{
 StyleBox["SameQ",
  FontWeight->"Bold"],
 " is a much stronger test than Equal: it tests whether two expressions are \n\
",
 StyleBox["manifestly identical",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 " (or, (in a less-precisely-clear sense) \
\[OpenCurlyDoubleQuote]algebraically identical\[CloseCurlyDoubleQuote])"
}], "Text",
 CellChangeTimes->{{3.521188544374535*^9, 3.521188559345684*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"x", "===", "y"}]], "Input",
 CellChangeTimes->{
  3.521188700665204*^9, {3.521201792457704*^9, 3.521201800768611*^9}}],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{{3.521201796265366*^9, 3.521201800917776*^9}}]
}, Open  ]],

Cell[TextData[{
 "To see how \[OpenCurlyDoubleQuote]",
 StyleBox["Equal",
  FontWeight->"Bold"],
 "\[CloseCurlyDoubleQuote] and \[OpenCurlyDoubleQuote]",
 StyleBox["SameQ",
  FontWeight->"Bold"],
 "\[CloseCurlyDoubleQuote] differ, consider the following:"
}], "Text",
 CellChangeTimes->{3.521188575238426*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"1", "\[Equal]", "1."}], "\[IndentingNewLine]", 
 RowBox[{"1", "===", "1."}]}], "Input",
 CellChangeTimes->{
  3.521188698870781*^9, {3.521201814322262*^9, 3.521201838085414*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.521201818681573*^9, 3.5212018257719383`*^9}}],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{{3.521201818681573*^9, 3.521201825773641*^9}}]
}, Open  ]],

Cell[TextData[{
 "The reason why is easily seen from the fact that \[OpenCurlyDoubleQuote]1\
\[CloseCurlyDoubleQuote] is an ",
 StyleBox["Integer",
  FontWeight->"Bold"],
 " while \[OpenCurlyDoubleQuote]1.\[CloseCurlyDoubleQuote] is a ",
 StyleBox["Real",
  FontWeight->"Bold"],
 " number:"
}], "Text",
 CellChangeTimes->{3.521188661977558*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Head", "[", "1", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Head", "[", "1.", "]"}]}], "Input",
 CellChangeTimes->{
  3.521188695016684*^9, {3.521201841149199*^9, 3.521201844420617*^9}}],

Cell[BoxData["Integer"], "Output",
 CellChangeTimes->{3.521201844820812*^9}],

Cell[BoxData["Real"], "Output",
 CellChangeTimes->{3.5212018448224154`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Sin", "[", "\[Pi]", "]"}], "===", "0"}], "\[IndentingNewLine]", 
 RowBox[{"FullForm", "[", 
  RowBox[{"Sin", "[", "\[Pi]", "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.521201898201446*^9, 3.521201910076153*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.521201903687108*^9, 3.521201910544279*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox["0",
   ShowSpecialCharacters->False,
   ShowStringCharacters->True,
   NumberMarks->True],
  FullForm]], "Output",
 CellChangeTimes->{{3.521201903687108*^9, 3.521201910545966*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox[" x  > y > ... > z :: Greater[x,y,...,z] ",
 FontWeight->"Bold"]], "Item",
 CellChangeTimes->{3.5211886753550863`*^9}],

Cell[TextData[StyleBox["x >= y >= ... >= z :: GreaterEqual[x,y,...,z]",
 FontWeight->"Bold"]], "Item",
 CellChangeTimes->{3.521188683210813*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"x", ">", "y", ">", "z"}], "\[IndentingNewLine]", 
 RowBox[{"FullForm", "[", "%", "]"}]}], "Input",
 CellChangeTimes->{{3.521201956470065*^9, 3.52120195786156*^9}}],

Cell[BoxData[
 RowBox[{"x", ">", "y", ">", "z"}]], "Output",
 CellChangeTimes->{{3.52120194729383*^9, 3.5212019581370707`*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   RowBox[{"Greater", "[", 
    RowBox[{"x", ",", "y", ",", "z"}], "]"}],
   ShowSpecialCharacters->False,
   ShowStringCharacters->True,
   NumberMarks->True],
  FullForm]], "Output",
 CellChangeTimes->{{3.52120194729383*^9, 3.521201958139921*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox[" x && y && ... && z  :: And[x,y,...,z] ",
 FontWeight->"Bold"]], "Item",
 CellChangeTimes->{3.521193957778283*^9}],

Cell[TextData[StyleBox[" x || y || ... || z  :: Or[x,y,...,z] ",
 FontWeight->"Bold"]], "Item",
 CellChangeTimes->{
  3.5211939671530333`*^9, {3.521201964636361*^9, 3.521201971980052*^9}}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{"x", "&&", "y", "&&", "z"}], "\[IndentingNewLine]", 
 RowBox[{"FullForm", "[", "%", "]"}], "\[IndentingNewLine]", 
 RowBox[{"x", "||", "y", "||", "z"}], "\[IndentingNewLine]", 
 RowBox[{"FullForm", "[", "%", "]"}]}], "Input",
 CellChangeTimes->{{3.521201995005457*^9, 3.521201997092165*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"(", 
   RowBox[{"x", "\[LessEqual]", "y"}], ")"}], "&&", 
  RowBox[{"(", 
   RowBox[{"y", "<", "x"}], ")"}]}], "\[IndentingNewLine]", 
 RowBox[{"FullForm", "[", "%", "]"}]}], "Input",
 CellChangeTimes->{{3.521201995005457*^9, 3.521201997092165*^9}, {
  3.521202028588202*^9, 3.521202028859228*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"x", "\[LessEqual]", "y"}], "&&", 
  RowBox[{"y", "<", "x"}]}]], "Output",
 CellChangeTimes->{{3.5212019960993*^9, 3.521201997450287*^9}, 
   3.521202029293282*^9}],

Cell[BoxData[
 TagBox[
  StyleBox[
   RowBox[{"And", "[", 
    RowBox[{
     RowBox[{"LessEqual", "[", 
      RowBox[{"x", ",", "y"}], "]"}], ",", 
     RowBox[{"Less", "[", 
      RowBox[{"y", ",", "x"}], "]"}]}], "]"}],
   ShowSpecialCharacters->False,
   ShowStringCharacters->True,
   NumberMarks->True],
  FullForm]], "Output",
 CellChangeTimes->{{3.5212019960993*^9, 3.521201997450287*^9}, 
   3.521202029295673*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"FullForm", "[", "%", "]"}], "\[IndentingNewLine]", 
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"x", "\[LessEqual]", "y"}], ")"}], "&&", 
   RowBox[{"(", 
    RowBox[{"y", "<", "x"}], ")"}]}], "]"}]}], "Input",
 CellChangeTimes->{3.521201995005457*^9}],

Cell[BoxData[
 TagBox[
  StyleBox[
   RowBox[{"And", "[", 
    RowBox[{
     RowBox[{"LessEqual", "[", 
      RowBox[{"x", ",", "y"}], "]"}], ",", 
     RowBox[{"Less", "[", 
      RowBox[{"y", ",", "x"}], "]"}]}], "]"}],
   ShowSpecialCharacters->False,
   ShowStringCharacters->True,
   NumberMarks->True],
  FullForm]], "Output",
 CellChangeTimes->{3.521201982704691*^9, 3.5212020376003933`*^9}],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{3.521201982704691*^9, 3.521202037602201*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Other common encounters with ",
 StyleBox["Infix",
  FontWeight->"Bold"],
 " notation"
}], "Subsubsection",
 CellChangeTimes->{{3.52119398591358*^9, 3.521193987495421*^9}}],

Cell[TextData[StyleBox["x <> y <> ... <> z  ::  StringJoin[x,y,...,z]",
 FontWeight->"Bold"]], "Item",
 CellChangeTimes->{3.521193995857396*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"\"\<honorific\>\"", "<>", "\"\<abilitud\>\"", "<>", 
  "\"\<initatibus\>\""}], "\[IndentingNewLine]", 
 RowBox[{"FullForm", "[", 
  RowBox[{"Hold", "[", 
   RowBox[{
   "\"\<honorific\>\"", "<>", "\"\<abilitud\>\"", "<>", 
    "\"\<initatibus\>\""}], "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.52120206514091*^9, 3.5212020772591343`*^9}}],

Cell[BoxData["\<\"honorificabilitudinitatibus\"\>"], "Output",
 CellChangeTimes->{{3.5212020590023947`*^9, 3.521202077654265*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   RowBox[{"Hold", "[", 
    RowBox[{"StringJoin", "[", 
     RowBox[{
     "\"\<honorific\>\"", ",", "\"\<abilitud\>\"", ",", 
      "\"\<initatibus\>\""}], "]"}], "]"}],
   ShowSpecialCharacters->False,
   ShowStringCharacters->True,
   NumberMarks->True],
  FullForm]], "Output",
 CellChangeTimes->{{3.5212020590023947`*^9, 3.521202077657742*^9}}]
}, Open  ]],

Cell[TextData[StyleBox[" x | y | ... | z  :: Alternatives[x,y,...,z]",
 FontWeight->"Bold"]], "Item",
 CellChangeTimes->{3.521194011816595*^9}],

Cell[TextData[{
 StyleBox["Alternatives[x,y,..,z]",
  FontWeight->"Bold"],
 " represents a (meta-)pattern, which can be any one of the patterns x, y, \
..., or z. "
}], "Text",
 CellChangeTimes->{3.521194016784615*^9}],

Cell[TextData[{
 "(If you\[CloseCurlyQuote]ve ever tried to combine patterns with \
\[OpenCurlyDoubleQuote]Or\[CloseCurlyDoubleQuote] when using ",
 StyleBox["Cases",
  FontWeight->"Bold"],
 " or ",
 StyleBox["Position",
  FontWeight->"Bold"],
 ", this was the function you were looking for.)"
}], "Text",
 CellDingbat->"\[FivePointedStar]",
 CellChangeTimes->{3.52119402108366*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Cases", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "a", ",", "x", ",", "y",
      ",", 
     RowBox[{"Sin", "[", "x", "]"}]}], "}"}], ",", 
   RowBox[{"_Integer", "|", "_Symbol"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Cases", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "a", ",", "x", ",", "y",
      ",", 
     RowBox[{"Sin", "[", "x", "]"}]}], "}"}], ",", 
   RowBox[{"Alternatives", "@@", 
    RowBox[{"{", 
     RowBox[{"_Integer", ",", "_Symbol"}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.521194062038122*^9, 3.521194062797942*^9}, {
  3.521202118089172*^9, 3.521202203003091*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "a", ",", "x", ",", "y"}],
   "}"}]], "Output",
 CellChangeTimes->{{3.521202138085737*^9, 3.521202175716589*^9}, 
   3.521202207880802*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "a", ",", "x", ",", "y"}],
   "}"}]], "Output",
 CellChangeTimes->{{3.521202138085737*^9, 3.521202175716589*^9}, 
   3.5212022078841553`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Behind-the-scenes Functions", "Subsection",
 CellChangeTimes->{3.521194126799622*^9}],

Cell[CellGroupData[{

Cell[TextData[{
 "The function \[OpenCurlyDoubleQuote]",
 StyleBox["List[x,y,...,z]",
  FontWeight->"Bold"],
 "\[CloseCurlyDoubleQuote] can also be written \[OpenCurlyDoubleQuote]",
 StyleBox["{x,y,...,z}",
  FontWeight->"Bold"],
 "\[CloseCurlyDoubleQuote]"
}], "Subsubsection",
 CellChangeTimes->{3.521194137277214*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"{", 
  RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}], "\[IndentingNewLine]", 
 RowBox[{"FullForm", "[", "%", "]"}], "\[IndentingNewLine]", 
 RowBox[{"AngleBracket", "[", 
  RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "]"}]}], "Input",
 CellChangeTimes->{{3.521194141922097*^9, 3.5211941426517143`*^9}, {
  3.5212022292730503`*^9, 3.521202269809464*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}]], "Output",
 CellChangeTimes->{3.5212022400046864`*^9, 3.521202270199195*^9}],

Cell[BoxData[
 TagBox[
  StyleBox[
   RowBox[{"List", "[", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "]"}],
   ShowSpecialCharacters->False,
   ShowStringCharacters->True,
   NumberMarks->True],
  FullForm]], "Output",
 CellChangeTimes->{3.5212022400046864`*^9, 3.521202270202202*^9}],

Cell[BoxData[
 RowBox[{"\[LeftAngleBracket]", 
  RowBox[{"1", ",", "2", ",", "3", ",", "4"}], 
  "\[RightAngleBracket]"}]], "Output",
 CellChangeTimes->{3.5212022400046864`*^9, 3.521202270204652*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"??", "I"}]], "Input",
 CellChangeTimes->{{3.52120229411666*^9, 3.521202298177698*^9}, {
  3.521202338554667*^9, 3.521202354004356*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  StyleBox["\<\"I represents the imaginary unit \!\(\*SqrtBox[RowBox[{\\\"-\\\
\", \\\"1\\\"}]]\). \"\>", "MSG"], "\[NonBreakingSpace]", 
  ButtonBox[
   StyleBox["\[RightSkeleton]", "SR"],
   Active->True,
   BaseStyle->"Link",
   ButtonData->"paclet:ref/I"]}]], "Print", "PrintUsage",
 CellChangeTimes->{3.521202354760138*^9},
 CellTags->"Info3521187954-8024692"],

Cell[BoxData[
 InterpretationBox[GridBox[{
    {
     RowBox[{
      RowBox[{"Attributes", "[", "\[ImaginaryI]", "]"}], "=", 
      RowBox[{"{", 
       RowBox[{"Locked", ",", "Protected", ",", "ReadProtected"}], "}"}]}]}
   },
   BaselinePosition->{Baseline, {1, 1}},
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}}],
  Definition[I],
  Editable->False]], "Print",
 CellChangeTimes->{3.521202354768773*^9},
 CellTags->"Info3521187954-8024692"]
}, Open  ]]
}, Open  ]],

Cell[TextData[{
 StyleBox["Nota Bene: ",
  FontWeight->"Bold"],
 "Matrices are just Lists of Lists (which have uniform lengths)"
}], "Text",
 CellDingbat->"\[FivePointedStar]",
 CellChangeTimes->{3.521194148519491*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"(", GridBox[{
    {"a", "b", "c"},
    {"d", "e", "f"}
   }], ")"}], "\[IndentingNewLine]", 
 RowBox[{"FullForm", "[", "%", "]"}]}], "Input",
 CellChangeTimes->{{3.521202391665332*^9, 3.52120242046859*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"d", ",", "e", ",", "f"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.521202415754525*^9, 3.521202420874709*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   RowBox[{"List", "[", 
    RowBox[{
     RowBox[{"List", "[", 
      RowBox[{"a", ",", "b", ",", "c"}], "]"}], ",", 
     RowBox[{"List", "[", 
      RowBox[{"d", ",", "e", ",", "f"}], "]"}]}], "]"}],
   ShowSpecialCharacters->False,
   ShowStringCharacters->True,
   NumberMarks->True],
  FullForm]], "Output",
 CellChangeTimes->{{3.521202415754525*^9, 3.521202420876652*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["expression[[x,y,...,z]] :: Part[expression, \
x,y,...,z]",
 FontWeight->"Bold"]], "Subsubsection",
 CellChangeTimes->{3.521194164805114*^9}],

Cell[TextData[{
 "It is often thought that the notation \[OpenCurlyDoubleQuote][[ j ]]\
\[CloseCurlyDoubleQuote] is used in ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " to mean \[OpenCurlyDoubleQuote]the jth entry of a list\
\[CloseCurlyDoubleQuote]. While it is true that the jth ",
 StyleBox["part",
  FontWeight->"Bold"],
 " of the expression ",
 StyleBox["List[x,y,...,z]",
  FontWeight->"Bold"],
 " is the list\[CloseCurlyQuote]s jth entry, this understanding of the \
notation does not make clear how ",
 StyleBox["broadly",
  FontSlant->"Italic"],
 " ",
 StyleBox["applicable",
  FontSlant->"Italic"],
 " these double-square brackets are in ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 "."
}], "Text",
 CellChangeTimes->{3.521194341567581*^9}],

Cell[TextData[{
 "Because all expressions, are ultimately just nested Standard Expressions in \
disguise, every sub-part of every expression in ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " has its own unique \[OpenCurlyDoubleQuote]address\[CloseCurlyDoubleQuote], \
and can be accessed using ",
 StyleBox["Part",
  FontWeight->"Bold"]
}], "Text",
 CellChangeTimes->{3.52119434624748*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"1", "/", "2"}], 
  RowBox[{"Exp", "[", 
   RowBox[{"x", " ", "y", " ", "z"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"TreeForm", "[", 
  RowBox[{
   RowBox[{"1", "/", "2"}], 
   RowBox[{"Exp", "[", 
    RowBox[{"x", " ", "y", " ", "z"}], "]"}]}], "]"}]}], "Input"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], " ", 
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{"x", " ", "y", " ", "z"}]]}]], "Output",
 CellChangeTimes->{3.521202467181163*^9}],

Cell[BoxData[
 GraphicsBox[
  TagBox[GraphicsComplexBox[{{1.2026755886059097`, 2.4053511772118195`}, {
    0.4008918628686366, 1.6035674514745462`}, {0., 0.8017837257372731}, {
    0.8017837257372732, 0.8017837257372731}, {2.0044593143431833`, 
    1.6035674514745462`}, {1.6035674514745464`, 0.8017837257372731}, {
    2.4053511772118195`, 0.8017837257372731}, {1.6035674514745464`, 0.}, {
    2.4053511772118195`, 0.}, {3.2071349029490928`, 0.}}, {
     {RGBColor[0.55, 0.45, 0.45], 
      LineBox[{{1, 2}, {1, 5}, {2, 3}, {2, 4}, {5, 6}, {5, 7}, {7, 8}, {7, 
       9}, {7, 10}}]}, {
      TagBox[
       TooltipBox[InsetBox[
         FrameBox[
          StyleBox["Times", "StandardForm", "Output",
           StripOnInput->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontSize->Scaled[0.05],
           FontColor->GrayLevel[0]],
          Background->RGBColor[1., 1., 0.871],
          FrameStyle->GrayLevel[0.5],
          StripOnInput->False], 1],
        TagBox[
         RowBox[{
           FractionBox["1", "2"], " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"x", " ", "y", " ", "z"}]]}], HoldForm]],
       Annotation[#, 
        HoldForm[
        Rational[1, 2] E^($CellContext`x $CellContext`y $CellContext`z)], 
        "Tooltip"]& ], 
      TagBox[
       TooltipBox[InsetBox[
         FrameBox[
          StyleBox["Rational", "StandardForm", "Output",
           StripOnInput->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontSize->Scaled[0.05],
           FontColor->GrayLevel[0]],
          Background->RGBColor[1., 1., 0.871],
          FrameStyle->GrayLevel[0.5],
          StripOnInput->False], 2],
        TagBox[
         FractionBox["1", "2"], HoldForm]],
       Annotation[#, 
        HoldForm[
         Rational[1, 2]], "Tooltip"]& ], 
      TagBox[
       TooltipBox[InsetBox[
         FrameBox[
          StyleBox[
           TagBox["1",
            HoldForm], "StandardForm", "Output",
           StripOnInput->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontSize->Scaled[0.05],
           FontColor->GrayLevel[0]],
          Background->RGBColor[1., 1., 0.871],
          FrameStyle->GrayLevel[0.5],
          StripOnInput->False], 3],
        TagBox["1", HoldForm]],
       Annotation[#, 
        HoldForm[1], "Tooltip"]& ], 
      TagBox[
       TooltipBox[InsetBox[
         FrameBox[
          StyleBox[
           TagBox["2",
            HoldForm], "StandardForm", "Output",
           StripOnInput->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontSize->Scaled[0.05],
           FontColor->GrayLevel[0]],
          Background->RGBColor[1., 1., 0.871],
          FrameStyle->GrayLevel[0.5],
          StripOnInput->False], 4],
        TagBox["2", HoldForm]],
       Annotation[#, 
        HoldForm[2], "Tooltip"]& ], 
      TagBox[
       TooltipBox[InsetBox[
         FrameBox[
          StyleBox["Power", "StandardForm", "Output",
           StripOnInput->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontSize->Scaled[0.05],
           FontColor->GrayLevel[0]],
          Background->RGBColor[1., 1., 0.871],
          FrameStyle->GrayLevel[0.5],
          StripOnInput->False], 5],
        TagBox[
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"x", " ", "y", " ", "z"}]], HoldForm]],
       Annotation[#, 
        HoldForm[E^($CellContext`x $CellContext`y $CellContext`z)], 
        "Tooltip"]& ], 
      TagBox[
       TooltipBox[InsetBox[
         FrameBox[
          StyleBox[
           TagBox["\[ExponentialE]",
            HoldForm], "StandardForm", "Output",
           StripOnInput->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontSize->Scaled[0.05],
           FontColor->GrayLevel[0]],
          Background->RGBColor[1., 1., 0.871],
          FrameStyle->GrayLevel[0.5],
          StripOnInput->False], 6],
        TagBox["\[ExponentialE]", HoldForm]],
       Annotation[#, 
        HoldForm[E], "Tooltip"]& ], 
      TagBox[
       TooltipBox[InsetBox[
         FrameBox[
          StyleBox["Times", "StandardForm", "Output",
           StripOnInput->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontSize->Scaled[0.05],
           FontColor->GrayLevel[0]],
          Background->RGBColor[1., 1., 0.871],
          FrameStyle->GrayLevel[0.5],
          StripOnInput->False], 7],
        TagBox[
         RowBox[{"x", " ", "y", " ", "z"}], HoldForm]],
       Annotation[#, 
        HoldForm[$CellContext`x $CellContext`y $CellContext`z], "Tooltip"]& ], 
      TagBox[
       TooltipBox[InsetBox[
         FrameBox[
          StyleBox[
           TagBox["x",
            HoldForm], "StandardForm", "Output",
           StripOnInput->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontSize->Scaled[0.05],
           FontColor->GrayLevel[0]],
          Background->RGBColor[1., 1., 0.871],
          FrameStyle->GrayLevel[0.5],
          StripOnInput->False], 8],
        TagBox["x", HoldForm]],
       Annotation[#, 
        HoldForm[$CellContext`x], "Tooltip"]& ], 
      TagBox[
       TooltipBox[InsetBox[
         FrameBox[
          StyleBox[
           TagBox["y",
            HoldForm], "StandardForm", "Output",
           StripOnInput->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontSize->Scaled[0.05],
           FontColor->GrayLevel[0]],
          Background->RGBColor[1., 1., 0.871],
          FrameStyle->GrayLevel[0.5],
          StripOnInput->False], 9],
        TagBox["y", HoldForm]],
       Annotation[#, 
        HoldForm[$CellContext`y], "Tooltip"]& ], 
      TagBox[
       TooltipBox[InsetBox[
         FrameBox[
          StyleBox[
           TagBox["z",
            HoldForm], "StandardForm", "Output",
           StripOnInput->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontSize->Scaled[0.05],
           FontColor->GrayLevel[0]],
          Background->RGBColor[1., 1., 0.871],
          FrameStyle->GrayLevel[0.5],
          StripOnInput->False], 10],
        TagBox["z", HoldForm]],
       Annotation[#, 
        HoldForm[$CellContext`z], "Tooltip"]& ]}}],
   Annotation[#, 
    VertexCoordinateRules -> {{1.2026755886059097`, 2.4053511772118195`}, {
     0.4008918628686366, 1.6035674514745462`}, {0., 0.8017837257372731}, {
     0.8017837257372732, 0.8017837257372731}, {2.0044593143431833`, 
     1.6035674514745462`}, {1.6035674514745464`, 0.8017837257372731}, {
     2.4053511772118195`, 0.8017837257372731}, {1.6035674514745464`, 0.}, {
     2.4053511772118195`, 0.}, {3.2071349029490928`, 0.}}]& ],
  AspectRatio->NCache[2 Rational[2, 13]^Rational[1, 2], 0.7844645405527362],
  FrameTicks->Automatic,
  PlotRange->All,
  PlotRangePadding->Scaled[0.1]]], "Output",
 CellChangeTimes->{3.521202467220209*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Part", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"1", "/", "2"}], 
    RowBox[{"Exp", "[", 
     RowBox[{"x", " ", "y", " ", "z"}], "]"}]}], ",", "0"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{"1", "/", "2"}], 
    RowBox[{"Exp", "[", 
     RowBox[{"x", " ", "y", " ", "z"}], "]"}]}], ")"}], "[", 
  RowBox[{"[", "0", "]"}], "]"}]}], "Input"],

Cell[BoxData["Times"], "Output",
 CellChangeTimes->{3.521202478674986*^9}],

Cell[BoxData["Times"], "Output",
 CellChangeTimes->{3.5212024786766148`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{"1", "/", "2"}], 
    RowBox[{"Exp", "[", 
     RowBox[{"x", " ", "y", " ", "z"}], "]"}]}], ")"}], "[", 
  RowBox[{"[", "1", "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{"1", "/", "2"}], 
    RowBox[{"Exp", "[", 
     RowBox[{"x", " ", "y", " ", "z"}], "]"}]}], ")"}], "[", 
  RowBox[{"[", "2", "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{"1", "/", "2"}], 
    RowBox[{"Exp", "[", 
     RowBox[{"x", " ", "y", " ", "z"}], "]"}]}], ")"}], "[", 
  RowBox[{"[", 
   RowBox[{"2", ",", "1"}], "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{"1", "/", "2"}], 
    RowBox[{"Exp", "[", 
     RowBox[{"x", " ", "y", " ", "z"}], "]"}]}], ")"}], "[", 
  RowBox[{"[", 
   RowBox[{"2", ",", "2"}], "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.521202510583055*^9, 3.5212025111837273`*^9}}],

Cell[BoxData[
 FractionBox["1", "2"]], "Output",
 CellChangeTimes->{3.521202503410548*^9}],

Cell[BoxData[
 SuperscriptBox["\[ExponentialE]", 
  RowBox[{"x", " ", "y", " ", "z"}]]], "Output",
 CellChangeTimes->{3.521202503412496*^9}],

Cell[BoxData["\[ExponentialE]"], "Output",
 CellChangeTimes->{3.5212025034140863`*^9}],

Cell[BoxData[
 RowBox[{"x", " ", "y", " ", "z"}]], "Output",
 CellChangeTimes->{3.521202503415744*^9}]
}, Open  ]],

Cell[TextData[{
 "The \[OpenCurlyDoubleQuote]address\[CloseCurlyDoubleQuote] of any \
particular sub-expression can be found using ",
 StyleBox["Position",
  FontWeight->"Bold"],
 ":"
}], "Text",
 CellChangeTimes->{3.5211943853035307`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TreeForm", "[", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"1", "/", "y"}], " ", 
    RowBox[{"Exp", "[", 
     RowBox[{"x", " ", "y", " ", "z"}], "]"}]}], ")"}], "]"}]], "Input",
 CellChangeTimes->{{3.5212025836896257`*^9, 3.521202593529747*^9}}],

Cell[BoxData[
 GraphicsBox[
  TagBox[GraphicsComplexBox[{{1.2026755886059097`, 2.4053511772118195`}, {
    0.4008918628686366, 1.6035674514745462`}, {0., 0.8017837257372731}, {
    0.8017837257372732, 0.8017837257372731}, {0., 0.}, {0.8017837257372732, 
    0.}, {1.6035674514745464`, 0.}, {2.0044593143431833`, 
    1.6035674514745462`}, {1.6035674514745464`, 0.8017837257372731}, {
    2.4053511772118195`, 0.8017837257372731}}, {
     {RGBColor[0.55, 0.45, 0.45], 
      LineBox[{{1, 2}, {1, 8}, {2, 3}, {2, 4}, {4, 5}, {4, 6}, {4, 7}, {8, 
       9}, {8, 10}}]}, {
      TagBox[
       TooltipBox[InsetBox[
         FrameBox[
          StyleBox["Times", "StandardForm", "Output",
           StripOnInput->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontSize->Scaled[0.05],
           FontColor->GrayLevel[0]],
          Background->RGBColor[1., 1., 0.871],
          FrameStyle->GrayLevel[0.5],
          StripOnInput->False], 1],
        TagBox[
         FractionBox[
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"x", " ", "y", " ", "z"}]], "y"], HoldForm]],
       Annotation[#, 
        HoldForm[
        E^($CellContext`x $CellContext`y $CellContext`z)/$CellContext`y], 
        "Tooltip"]& ], 
      TagBox[
       TooltipBox[InsetBox[
         FrameBox[
          StyleBox["Power", "StandardForm", "Output",
           StripOnInput->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontSize->Scaled[0.05],
           FontColor->GrayLevel[0]],
          Background->RGBColor[1., 1., 0.871],
          FrameStyle->GrayLevel[0.5],
          StripOnInput->False], 2],
        TagBox[
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"x", " ", "y", " ", "z"}]], HoldForm]],
       Annotation[#, 
        HoldForm[E^($CellContext`x $CellContext`y $CellContext`z)], 
        "Tooltip"]& ], 
      TagBox[
       TooltipBox[InsetBox[
         FrameBox[
          StyleBox[
           TagBox["\[ExponentialE]",
            HoldForm], "StandardForm", "Output",
           StripOnInput->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontSize->Scaled[0.05],
           FontColor->GrayLevel[0]],
          Background->RGBColor[1., 1., 0.871],
          FrameStyle->GrayLevel[0.5],
          StripOnInput->False], 3],
        TagBox["\[ExponentialE]", HoldForm]],
       Annotation[#, 
        HoldForm[E], "Tooltip"]& ], 
      TagBox[
       TooltipBox[InsetBox[
         FrameBox[
          StyleBox["Times", "StandardForm", "Output",
           StripOnInput->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontSize->Scaled[0.05],
           FontColor->GrayLevel[0]],
          Background->RGBColor[1., 1., 0.871],
          FrameStyle->GrayLevel[0.5],
          StripOnInput->False], 4],
        TagBox[
         RowBox[{"x", " ", "y", " ", "z"}], HoldForm]],
       Annotation[#, 
        HoldForm[$CellContext`x $CellContext`y $CellContext`z], "Tooltip"]& ], 
      TagBox[
       TooltipBox[InsetBox[
         FrameBox[
          StyleBox[
           TagBox["x",
            HoldForm], "StandardForm", "Output",
           StripOnInput->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontSize->Scaled[0.05],
           FontColor->GrayLevel[0]],
          Background->RGBColor[1., 1., 0.871],
          FrameStyle->GrayLevel[0.5],
          StripOnInput->False], 5],
        TagBox["x", HoldForm]],
       Annotation[#, 
        HoldForm[$CellContext`x], "Tooltip"]& ], 
      TagBox[
       TooltipBox[InsetBox[
         FrameBox[
          StyleBox[
           TagBox["y",
            HoldForm], "StandardForm", "Output",
           StripOnInput->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontSize->Scaled[0.05],
           FontColor->GrayLevel[0]],
          Background->RGBColor[1., 1., 0.871],
          FrameStyle->GrayLevel[0.5],
          StripOnInput->False], 6],
        TagBox["y", HoldForm]],
       Annotation[#, 
        HoldForm[$CellContext`y], "Tooltip"]& ], 
      TagBox[
       TooltipBox[InsetBox[
         FrameBox[
          StyleBox[
           TagBox["z",
            HoldForm], "StandardForm", "Output",
           StripOnInput->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontSize->Scaled[0.05],
           FontColor->GrayLevel[0]],
          Background->RGBColor[1., 1., 0.871],
          FrameStyle->GrayLevel[0.5],
          StripOnInput->False], 7],
        TagBox["z", HoldForm]],
       Annotation[#, 
        HoldForm[$CellContext`z], "Tooltip"]& ], 
      TagBox[
       TooltipBox[InsetBox[
         FrameBox[
          StyleBox["Power", "StandardForm", "Output",
           StripOnInput->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontSize->Scaled[0.05],
           FontColor->GrayLevel[0]],
          Background->RGBColor[1., 1., 0.871],
          FrameStyle->GrayLevel[0.5],
          StripOnInput->False], 8],
        TagBox[
         FractionBox["1", "y"], HoldForm]],
       Annotation[#, 
        HoldForm[$CellContext`y^(-1)], "Tooltip"]& ], 
      TagBox[
       TooltipBox[InsetBox[
         FrameBox[
          StyleBox[
           TagBox["y",
            HoldForm], "StandardForm", "Output",
           StripOnInput->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontSize->Scaled[0.05],
           FontColor->GrayLevel[0]],
          Background->RGBColor[1., 1., 0.871],
          FrameStyle->GrayLevel[0.5],
          StripOnInput->False], 9],
        TagBox["y", HoldForm]],
       Annotation[#, 
        HoldForm[$CellContext`y], "Tooltip"]& ], 
      TagBox[
       TooltipBox[InsetBox[
         FrameBox[
          StyleBox[
           TagBox[
            RowBox[{"-", "1"}],
            HoldForm], "StandardForm", "Output",
           StripOnInput->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontSize->Scaled[0.05],
           FontColor->GrayLevel[0]],
          Background->RGBColor[1., 1., 0.871],
          FrameStyle->GrayLevel[0.5],
          StripOnInput->False], 10],
        TagBox[
         RowBox[{"-", "1"}], HoldForm]],
       Annotation[#, 
        HoldForm[-1], "Tooltip"]& ]}}],
   Annotation[#, 
    VertexCoordinateRules -> {{1.2026755886059097`, 2.4053511772118195`}, {
     0.4008918628686366, 1.6035674514745462`}, {0., 0.8017837257372731}, {
     0.8017837257372732, 0.8017837257372731}, {0., 0.}, {0.8017837257372732, 
     0.}, {1.6035674514745464`, 0.}, {2.0044593143431833`, 
     1.6035674514745462`}, {1.6035674514745464`, 0.8017837257372731}, {
     2.4053511772118195`, 0.8017837257372731}}]& ],
  AspectRatio->NCache[2 5^Rational[-1, 2], 0.8944271909999159],
  FrameTicks->Automatic,
  PlotRange->All,
  PlotRangePadding->Scaled[0.1]]], "Output",
 CellChangeTimes->{{3.521202587063747*^9, 3.5212025937985*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Position", "[", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"1", "/", "y"}], " ", 
     RowBox[{"Exp", "[", 
      RowBox[{"x", " ", "y", " ", "z"}], "]"}]}], ")"}], ",", "y"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.521202554638357*^9, 3.521202557086298*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.5212025238613873`*^9, {3.5212025550202007`*^9, 3.5212025573558903`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Part", "[", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"1", "/", "2"}], 
      RowBox[{"Exp", "[", 
       RowBox[{"x", " ", "y", " ", "z"}], "]"}]}], ")"}], ",", "2", ",", "2", 
    ",", "2"}], "]"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Equivalently", ","}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{"1", "/", "2"}], 
    RowBox[{"Exp", "[", 
     RowBox[{"x", " ", "y", " ", "z"}], "]"}]}], ")"}], "[", 
  RowBox[{"[", 
   RowBox[{"2", ",", "2", ",", "2"}], "]"}], "]"}]}], "Input"],

Cell[BoxData["y"], "Output",
 CellChangeTimes->{3.521202531583159*^9}],

Cell[BoxData["y"], "Output",
 CellChangeTimes->{3.521202531584837*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Connections between functions and their arguments\
\>", "Subsection",
 CellChangeTimes->{3.521194419015986*^9}],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["Prefix",
  FontWeight->"Bold"],
 " notation: ",
 StyleBox["f @ x :: f[x]",
  FontWeight->"Bold"]
}], "Subsubsection",
 CellChangeTimes->{{3.521194428959944*^9, 3.521194433770088*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"f", "@", "x"}], "\[IndentingNewLine]", 
 RowBox[{"FullForm", "[", "%", "]"}]}], "Input",
 CellChangeTimes->{{3.52119445967043*^9, 3.5211944602228823`*^9}, {
  3.5212026271258097`*^9, 3.52120263414955*^9}}],

Cell[BoxData[
 RowBox[{"f", "[", "x", "]"}]], "Output",
 CellChangeTimes->{3.521202634554422*^9}],

Cell[BoxData[
 TagBox[
  StyleBox[
   RowBox[{"f", "[", "x", "]"}],
   ShowSpecialCharacters->False,
   ShowStringCharacters->True,
   NumberMarks->True],
  FullForm]], "Output",
 CellChangeTimes->{3.5212026345562277`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["Postfix",
  FontWeight->"Bold"],
 " notation: ",
 StyleBox["x // f :: f[x]",
  FontWeight->"Bold"]
}], "Subsubsection",
 CellChangeTimes->{3.52119444285149*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"x", "//", "f"}]], "Input",
 CellChangeTimes->{{3.5211944639037027`*^9, 3.5211944646256037`*^9}, {
  3.521202648597088*^9, 3.521202649860992*^9}}],

Cell[BoxData[
 RowBox[{"f", "[", "x", "]"}]], "Output",
 CellChangeTimes->{3.521202651651388*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"a", ",", "b", ",", "c"}], "}"}], "/.", 
  RowBox[{"{", 
   RowBox[{"a", "\[Rule]", "5"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.521202659691559*^9, 3.5212026757091513`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"5", ",", "b", ",", "c"}], "}"}]], "Output",
 CellChangeTimes->{3.521202678208445*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["Apply",
  FontWeight->"Bold"],
 " is often written in a prefix-like notation:\n",
 StyleBox[" f@@{x,y,...,z} :: f[x,y,...,z] :: Apply[f,{x,y,...,z}]",
  FontWeight->"Bold"]
}], "Subsubsection",
 CellChangeTimes->{3.521194453841489*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"TreeForm", "[", 
   RowBox[{"g", "[", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5"}], "]"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"f", "@@", 
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5"}], 
   "}"}]}], "\[IndentingNewLine]", 
 RowBox[{"f", "[", 
  RowBox[{"Sequence", "@@", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5"}], "}"}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.5211944659765053`*^9, 3.521194466245466*^9}, {
  3.521202697156036*^9, 3.521202802060968*^9}}],

Cell[BoxData[
 RowBox[{"f", "[", 
  RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5"}], "]"}]], "Output",
 CellChangeTimes->{{3.521202701527083*^9, 3.521202802462529*^9}}],

Cell[BoxData[
 RowBox[{"f", "[", 
  RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5"}], "]"}]], "Output",
 CellChangeTimes->{{3.521202701527083*^9, 3.5212028024642277`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Another variant of Apply, is also frequently encountered:\n",
 StyleBox["f@@@{{a,b,...,c},...,{x,y,...,z}} :: \
{f[a,b,...,c],...,f[x,y,..,z]} :: \nApply[f, \
{{a,b,...,c},...,{x,y,...,z}},{1}]",
  FontWeight->"Bold"]
}], "Subsubsection",
 CellChangeTimes->{3.521194488790924*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"f", "@@@", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], 
   "}"}]}], "\[IndentingNewLine]", 
 RowBox[{"Apply", "[", 
  RowBox[{"f", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", "0", "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.521202818833156*^9, 3.521202861916965*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"a", ",", "b", ",", "c"}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"x", ",", "y", ",", "z"}], "]"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.521202836174245*^9, 3.521202862179975*^9}}],

Cell[BoxData[
 RowBox[{"f", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], "]"}]], "Output",
 CellChangeTimes->{{3.521202836174245*^9, 3.521202862182262*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["Map",
  FontWeight->"Bold"],
 " is similarly often written in a prefix-like notation:\n",
 StyleBox[" f/@{x,y,...,z}",
  FontWeight->"Bold"],
 " :: ",
 StyleBox["{f[x],f[y],...,f[z]} :: Map[f,{x,y,...,z}]",
  FontWeight->"Bold"]
}], "Subsubsection",
 CellChangeTimes->{3.5211945179159613`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f", "/@", 
  RowBox[{"{", 
   RowBox[{"a", ",", "b", ",", "c", ",", "1", ",", "2", ",", "3"}], 
   "}"}]}]], "Input",
 CellChangeTimes->{{3.5211945201554117`*^9, 3.521194520376708*^9}, {
  3.521202876152236*^9, 3.521202896796936*^9}, {3.521202994981566*^9, 
  3.5212029983410683`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"f", "[", "a", "]"}], ",", 
   RowBox[{"f", "[", "b", "]"}], ",", 
   RowBox[{"f", "[", "c", "]"}], ",", 
   RowBox[{"f", "[", "1", "]"}], ",", 
   RowBox[{"f", "[", "2", "]"}], ",", 
   RowBox[{"f", "[", "3", "]"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.521202882646388*^9, 3.5212028972763844`*^9}, {
  3.5212029987281847`*^9, 3.521203001013818*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{"#", "/@", 
     RowBox[{"{", 
      RowBox[{"a", ",", "b", ",", "c", ",", "1", ",", "2", ",", "3"}], 
      "}"}]}], ")"}], "&"}], "/@", 
  RowBox[{"{", 
   RowBox[{"f", ",", "g", ",", "h"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.521203105588687*^9, 3.521203114756751*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"f", "[", "a", "]"}], ",", 
     RowBox[{"f", "[", "b", "]"}], ",", 
     RowBox[{"f", "[", "c", "]"}], ",", 
     RowBox[{"f", "[", "1", "]"}], ",", 
     RowBox[{"f", "[", "2", "]"}], ",", 
     RowBox[{"f", "[", "3", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"g", "[", "a", "]"}], ",", 
     RowBox[{"g", "[", "b", "]"}], ",", 
     RowBox[{"g", "[", "c", "]"}], ",", 
     RowBox[{"g", "[", "1", "]"}], ",", 
     RowBox[{"g", "[", "2", "]"}], ",", 
     RowBox[{"g", "[", "3", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"h", "[", "a", "]"}], ",", 
     RowBox[{"h", "[", "b", "]"}], ",", 
     RowBox[{"h", "[", "c", "]"}], ",", 
     RowBox[{"h", "[", "1", "]"}], ",", 
     RowBox[{"h", "[", "2", "]"}], ",", 
     RowBox[{"h", "[", "3", "]"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.521203115143169*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f", "@@", 
  RowBox[{"{", 
   RowBox[{"a", ",", "b", ",", "c", ",", "1", ",", "2", ",", "3"}], 
   "}"}]}]], "Input",
 CellChangeTimes->{{3.521203004540976*^9, 3.52120302214715*^9}}],

Cell[BoxData[
 RowBox[{"f", "[", 
  RowBox[{"a", ",", "b", ",", "c", ",", "1", ",", "2", ",", "3"}], 
  "]"}]], "Output",
 CellChangeTimes->{{3.521203005450645*^9, 3.521203022431719*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"f", "/@", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], 
   "}"}]}], "\[IndentingNewLine]", 
 RowBox[{"f", "@@@", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], 
   "}"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"f", "@@", "#"}], "&"}], "/@", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], "}"}]}]}], "Input",
 CellChangeTimes->{{3.521202957193163*^9, 3.521202976847024*^9}, {
  3.5212030301557827`*^9, 3.521203034754794*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"{", 
     RowBox[{"a", ",", "b", ",", "c"}], "}"}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"{", 
     RowBox[{"x", ",", "y", ",", "z"}], "}"}], "]"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.5212029593018*^9, 3.521202977293208*^9}, 
   3.5212030375773563`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"a", ",", "b", ",", "c"}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"x", ",", "y", ",", "z"}], "]"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.5212029593018*^9, 3.521202977293208*^9}, 
   3.5212030375796833`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"a", ",", "b", ",", "c"}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"x", ",", "y", ",", "z"}], "]"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.5212029593018*^9, 3.521202977293208*^9}, 
   3.521203037581561*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"f", "[", "j", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"j", ",", "5"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.521202916095632*^9, 3.5212029209794683`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"f", "[", "1", "]"}], ",", 
   RowBox[{"f", "[", "2", "]"}], ",", 
   RowBox[{"f", "[", "3", "]"}], ",", 
   RowBox[{"f", "[", "4", "]"}], ",", 
   RowBox[{"f", "[", "5", "]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.521202921398534*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f", "/@", 
  RowBox[{"Range", "[", "5", "]"}]}]], "Input",
 CellChangeTimes->{{3.521202922268753*^9, 3.52120292370641*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"f", "[", "1", "]"}], ",", 
   RowBox[{"f", "[", "2", "]"}], ",", 
   RowBox[{"f", "[", "3", "]"}], ",", 
   RowBox[{"f", "[", "4", "]"}], ",", 
   RowBox[{"f", "[", "5", "]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.521202924114891*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"IntegerQ", "[", "n", "]"}]], "Input"],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{{3.521203190257118*^9, 3.521203208157659*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "Assumptions"}]], "Input",
 CellChangeTimes->{{3.521203221865425*^9, 3.521203230800577*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox["\<\"Assumptions is an option for functions such as Simplify, \
Refine and Integrate which specifies default assumptions to be made about \
symbolic quantities. \"\>", "MSG"], "\[NonBreakingSpace]", 
  ButtonBox[
   StyleBox["\[RightSkeleton]", "SR"],
   Active->True,
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Assumptions"]}]], "Print", "PrintUsage",
 CellChangeTimes->{3.521203231744595*^9},
 CellTags->"Info3521188831-8024692"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Functions and Forms to Become (very) Friendly With\
\>", "Section",
 CellChangeTimes->{{3.521194549880287*^9, 3.5211945581906433`*^9}, {
  3.521194605978922*^9, 3.521194607234803*^9}, {3.521197021240556*^9, 
  3.521197022189662*^9}, {3.521198108418172*^9, 3.521198109378474*^9}}],

Cell[CellGroupData[{

Cell["Patterns and Tests", "Subsection",
 CellChangeTimes->{{3.521197036045126*^9, 3.521197043773123*^9}, {
  3.521198099258706*^9, 3.52119811133743*^9}}],

Cell[CellGroupData[{

Cell[TextData[{
 "\[OpenCurlyDoubleQuote]",
 StyleBox["x_y",
  FontWeight->"Bold"],
 "\[CloseCurlyDoubleQuote] :: \[OpenCurlyDoubleQuote]a single-length pattern ",
 StyleBox["named herein as x",
  FontWeight->"Bold"],
 " (optional), with ",
 StyleBox["Head y ",
  FontWeight->"Bold"],
 "(optional)"
}], "Subsubsection",
 CellChangeTimes->{3.5211970593748627`*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"matrix", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", 
       RowBox[{
        RowBox[{"\[Alpha]", "[", "x", "]"}], "+", 
        RowBox[{"\[Alpha]", "[", "10", "]"}]}], ",", 
       RowBox[{
        RowBox[{"\[Alpha]", "[", "8", "]"}], " ", 
        RowBox[{"\[Alpha]", "[", "10", "]"}]}], ",", 
       RowBox[{"-", 
        RowBox[{"\[Alpha]", "[", "11", "]"}]}], ",", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{"\[Alpha]", "[", "5", "]"}]}], " ", 
        RowBox[{"\[Alpha]", "[", "11", "]"}]}], ",", 
       RowBox[{"\[Alpha]", "[", "12", "]"}], ",", 
       RowBox[{
        RowBox[{"\[Alpha]", "[", "2", "]"}], " ", 
        RowBox[{"\[Alpha]", "[", "12", "]"}]}], ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", 
       RowBox[{"\[Alpha]", "[", "8", "]"}], ",", 
       RowBox[{
        RowBox[{"\[Alpha]", "[", "6", "]"}], "+", 
        RowBox[{"\[Alpha]", "[", "7", "]"}]}], ",", 
       RowBox[{
        RowBox[{"\[Alpha]", "[", "5", "]"}], " ", 
        RowBox[{"\[Alpha]", "[", "7", "]"}]}], ",", "0", ",", "0", ",", "0"}],
       "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0", ",", "1", ",", 
       RowBox[{"\[Alpha]", "[", "5", "]"}], ",", 
       RowBox[{
        RowBox[{"\[Alpha]", "[", "3", "]"}], "+", 
        RowBox[{"\[Alpha]", "[", "4", "]"}]}], ",", 
       RowBox[{
        RowBox[{"\[Alpha]", "[", "2", "]"}], " ", 
        RowBox[{"\[Alpha]", "[", "4", "]"}]}], ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", 
       RowBox[{"\[Alpha]", "[", "2", "]"}], ",", 
       RowBox[{"\[Alpha]", "[", "1", "]"}]}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "%", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Cases", "[", 
  RowBox[{"matrix", ",", 
   RowBox[{"\[Alpha]", "[", "x_Integer", "]"}], ",", "3"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", 
  RowBox[{"matrix", "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Alpha]", "[", "x_", "]"}], "\[RuleDelayed]", 
     RowBox[{"Subscript", "[", 
      RowBox[{"\[Alpha]", ",", "x"}], "]"}]}], "}"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", 
  RowBox[{"matrix", "/.", 
   RowBox[{"{", 
    RowBox[{"x_\[Alpha]", "\[RuleDelayed]", 
     RowBox[{"Subscript", "[", 
      RowBox[{"\[Alpha]", ",", 
       RowBox[{"x", "[", 
        RowBox[{"[", "0", "]"}], "]"}]}], "]"}]}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.521197062449317*^9, 3.521197083861442*^9}, {
  3.521203372589253*^9, 3.5212035047253532`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", 
      RowBox[{
       RowBox[{"\[Alpha]", "[", "10", "]"}], "+", 
       RowBox[{"\[Alpha]", "[", "x", "]"}]}], 
      RowBox[{
       RowBox[{"\[Alpha]", "[", "8", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "10", "]"}]}], 
      RowBox[{"-", 
       RowBox[{"\[Alpha]", "[", "11", "]"}]}], 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"\[Alpha]", "[", "5", "]"}]}], " ", 
       RowBox[{"\[Alpha]", "[", "11", "]"}]}], 
      RowBox[{"\[Alpha]", "[", "12", "]"}], 
      RowBox[{
       RowBox[{"\[Alpha]", "[", "2", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "12", "]"}]}], "0"},
     {"0", "1", 
      RowBox[{"\[Alpha]", "[", "8", "]"}], 
      RowBox[{
       RowBox[{"\[Alpha]", "[", "6", "]"}], "+", 
       RowBox[{"\[Alpha]", "[", "7", "]"}]}], 
      RowBox[{
       RowBox[{"\[Alpha]", "[", "5", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "7", "]"}]}], "0", "0", "0"},
     {"0", "0", "0", "1", 
      RowBox[{"\[Alpha]", "[", "5", "]"}], 
      RowBox[{
       RowBox[{"\[Alpha]", "[", "3", "]"}], "+", 
       RowBox[{"\[Alpha]", "[", "4", "]"}]}], 
      RowBox[{
       RowBox[{"\[Alpha]", "[", "2", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "4", "]"}]}], "0"},
     {"0", "0", "0", "0", "0", "1", 
      RowBox[{"\[Alpha]", "[", "2", "]"}], 
      RowBox[{"\[Alpha]", "[", "1", "]"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.52120337753199*^9, 3.521203447928481*^9}, {
  3.521203482656476*^9, 3.521203505027116*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\[Alpha]", "[", "10", "]"}], ",", 
   RowBox[{"\[Alpha]", "[", "8", "]"}], ",", 
   RowBox[{"\[Alpha]", "[", "10", "]"}], ",", 
   RowBox[{"\[Alpha]", "[", "11", "]"}], ",", 
   RowBox[{"\[Alpha]", "[", "5", "]"}], ",", 
   RowBox[{"\[Alpha]", "[", "11", "]"}], ",", 
   RowBox[{"\[Alpha]", "[", "12", "]"}], ",", 
   RowBox[{"\[Alpha]", "[", "2", "]"}], ",", 
   RowBox[{"\[Alpha]", "[", "12", "]"}], ",", 
   RowBox[{"\[Alpha]", "[", "8", "]"}], ",", 
   RowBox[{"\[Alpha]", "[", "6", "]"}], ",", 
   RowBox[{"\[Alpha]", "[", "7", "]"}], ",", 
   RowBox[{"\[Alpha]", "[", "5", "]"}], ",", 
   RowBox[{"\[Alpha]", "[", "7", "]"}], ",", 
   RowBox[{"\[Alpha]", "[", "5", "]"}], ",", 
   RowBox[{"\[Alpha]", "[", "3", "]"}], ",", 
   RowBox[{"\[Alpha]", "[", "4", "]"}], ",", 
   RowBox[{"\[Alpha]", "[", "2", "]"}], ",", 
   RowBox[{"\[Alpha]", "[", "4", "]"}], ",", 
   RowBox[{"\[Alpha]", "[", "2", "]"}], ",", 
   RowBox[{"\[Alpha]", "[", "1", "]"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.52120337753199*^9, 3.521203447928481*^9}, {
  3.521203482656476*^9, 3.521203505030306*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", 
      RowBox[{
       SubscriptBox["\[Alpha]", "10"], "+", 
       SubscriptBox["\[Alpha]", "x"]}], 
      RowBox[{
       SubscriptBox["\[Alpha]", "8"], " ", 
       SubscriptBox["\[Alpha]", "10"]}], 
      RowBox[{"-", 
       SubscriptBox["\[Alpha]", "11"]}], 
      RowBox[{
       RowBox[{"-", 
        SubscriptBox["\[Alpha]", "5"]}], " ", 
       SubscriptBox["\[Alpha]", "11"]}], 
      SubscriptBox["\[Alpha]", "12"], 
      RowBox[{
       SubscriptBox["\[Alpha]", "2"], " ", 
       SubscriptBox["\[Alpha]", "12"]}], "0"},
     {"0", "1", 
      SubscriptBox["\[Alpha]", "8"], 
      RowBox[{
       SubscriptBox["\[Alpha]", "6"], "+", 
       SubscriptBox["\[Alpha]", "7"]}], 
      RowBox[{
       SubscriptBox["\[Alpha]", "5"], " ", 
       SubscriptBox["\[Alpha]", "7"]}], "0", "0", "0"},
     {"0", "0", "0", "1", 
      SubscriptBox["\[Alpha]", "5"], 
      RowBox[{
       SubscriptBox["\[Alpha]", "3"], "+", 
       SubscriptBox["\[Alpha]", "4"]}], 
      RowBox[{
       SubscriptBox["\[Alpha]", "2"], " ", 
       SubscriptBox["\[Alpha]", "4"]}], "0"},
     {"0", "0", "0", "0", "0", "1", 
      SubscriptBox["\[Alpha]", "2"], 
      SubscriptBox["\[Alpha]", "1"]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.52120337753199*^9, 3.521203447928481*^9}, {
  3.521203482656476*^9, 3.521203505032341*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", 
      RowBox[{"2", " ", 
       SubscriptBox["\[Alpha]", "\[Alpha]"]}], 
      SubsuperscriptBox["\[Alpha]", "\[Alpha]", "2"], 
      RowBox[{"-", 
       SubscriptBox["\[Alpha]", "\[Alpha]"]}], 
      RowBox[{"-", 
       SubsuperscriptBox["\[Alpha]", "\[Alpha]", "2"]}], 
      SubscriptBox["\[Alpha]", "\[Alpha]"], 
      SubsuperscriptBox["\[Alpha]", "\[Alpha]", "2"], "0"},
     {"0", "1", 
      SubscriptBox["\[Alpha]", "\[Alpha]"], 
      RowBox[{"2", " ", 
       SubscriptBox["\[Alpha]", "\[Alpha]"]}], 
      SubsuperscriptBox["\[Alpha]", "\[Alpha]", "2"], "0", "0", "0"},
     {"0", "0", "0", "1", 
      SubscriptBox["\[Alpha]", "\[Alpha]"], 
      RowBox[{"2", " ", 
       SubscriptBox["\[Alpha]", "\[Alpha]"]}], 
      SubsuperscriptBox["\[Alpha]", "\[Alpha]", "2"], "0"},
     {"0", "0", "0", "0", "0", "1", 
      SubscriptBox["\[Alpha]", "\[Alpha]"], 
      SubscriptBox["\[Alpha]", "\[Alpha]"]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.52120337753199*^9, 3.521203447928481*^9}, {
  3.521203482656476*^9, 3.521203505034627*^9}}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{"MatrixForm", "[", 
  RowBox[{"matrix", "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Alpha]", "[", "x_", "]"}], "\[RuleDelayed]", 
     RowBox[{"Subscript", "[", 
      RowBox[{"\[Alpha]", ",", "x"}], "]"}]}], "}"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", 
  RowBox[{"matrix", "/.", 
   RowBox[{"{", 
    RowBox[{"x_\[Alpha]", "\[RuleDelayed]", 
     RowBox[{"Subscript", "[", 
      RowBox[{"\[Alpha]", ",", 
       RowBox[{"x", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], "}"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Cases", "[", 
  RowBox[{"matrix", ",", "_\[Alpha]", ",", "3"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Cases", "[", 
  RowBox[{"matrix", ",", "_Integer", ",", "\[Infinity]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.521197062449317*^9, 3.521197083861442*^9}, 
   3.521203372589253*^9}]
}, Open  ]],

Cell[TextData[{
 "\[OpenCurlyDoubleQuote]",
 StyleBox["x _ _ y\[CloseCurlyDoubleQuote]",
  FontWeight->"Bold"],
 " :: \[OpenCurlyDoubleQuote]an arbitrary-(but non-empty)-length pattern ",
 StyleBox["named herein as x ",
  FontWeight->"Bold"],
 "with ",
 StyleBox["Head y",
  FontWeight->"Bold"]
}], "Subsubsection",
 CellChangeTimes->{
  3.521197095542432*^9, {3.521203516967753*^9, 3.521203519039613*^9}}],

Cell[TextData[{
 "\[OpenCurlyDoubleQuote]",
 StyleBox["x _ _ _ y\[CloseCurlyDoubleQuote]",
  FontWeight->"Bold"],
 " :: \[OpenCurlyDoubleQuote]an arbitrary-length (including zero) pattern ",
 StyleBox["named heren as x ",
  FontWeight->"Bold"],
 "with ",
 StyleBox["Head ",
  FontWeight->"Bold"],
 "y"
}], "Subsubsection",
 CellChangeTimes->{
  3.521197102229743*^9, {3.5212035286015997`*^9, 3.521203530209421*^9}}],

Cell[CellGroupData[{

Cell[TextData[{
 "\[OpenCurlyDoubleQuote]",
 StyleBox["x_:default\[CloseCurlyDoubleQuote]",
  FontWeight->"Bold"],
 " :: a pattern which takes-on the default value of ",
 StyleBox["default",
  FontWeight->"Bold"]
}], "Subsubsection",
 CellChangeTimes->{3.521197110709958*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"myFunction", "[", 
   RowBox[{"x_:", "10"}], "]"}], ":=", 
  SuperscriptBox["x", "2"]}]], "Input",
 CellChangeTimes->{{3.521197112108515*^9, 3.521197113300321*^9}, {
  3.521203549062162*^9, 3.52120356308639*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"myFunction", "[", "3", "]"}]], "Input",
 CellChangeTimes->{{3.521203565071677*^9, 3.521203577413844*^9}}],

Cell[BoxData["9"], "Output",
 CellChangeTimes->{{3.521203569776038*^9, 3.5212035776353607`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "\[OpenCurlyDoubleQuote]",
 StyleBox["x_?(testFunction)\[CloseCurlyDoubleQuote]",
  FontWeight->"Bold"],
 " :: a pattern for which ",
 StyleBox["testFunction[x]==True",
  FontWeight->"Bold"],
 " "
}], "Subsubsection",
 CellChangeTimes->{3.521197122629849*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Cases", "[", 
  RowBox[{"matrix", ",", 
   RowBox[{"\[Alpha]", "[", "_", "]"}], ",", "\[Infinity]"}], "]"}]], "Input",\

 CellChangeTimes->{{3.521203604565323*^9, 3.5212036136774178`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\[Alpha]", "[", "10", "]"}], ",", 
   RowBox[{"\[Alpha]", "[", "x", "]"}], ",", 
   RowBox[{"\[Alpha]", "[", "8", "]"}], ",", 
   RowBox[{"\[Alpha]", "[", "10", "]"}], ",", 
   RowBox[{"\[Alpha]", "[", "11", "]"}], ",", 
   RowBox[{"\[Alpha]", "[", "5", "]"}], ",", 
   RowBox[{"\[Alpha]", "[", "11", "]"}], ",", 
   RowBox[{"\[Alpha]", "[", "12", "]"}], ",", 
   RowBox[{"\[Alpha]", "[", "2", "]"}], ",", 
   RowBox[{"\[Alpha]", "[", "12", "]"}], ",", 
   RowBox[{"\[Alpha]", "[", "8", "]"}], ",", 
   RowBox[{"\[Alpha]", "[", "6", "]"}], ",", 
   RowBox[{"\[Alpha]", "[", "7", "]"}], ",", 
   RowBox[{"\[Alpha]", "[", "5", "]"}], ",", 
   RowBox[{"\[Alpha]", "[", "7", "]"}], ",", 
   RowBox[{"\[Alpha]", "[", "5", "]"}], ",", 
   RowBox[{"\[Alpha]", "[", "3", "]"}], ",", 
   RowBox[{"\[Alpha]", "[", "4", "]"}], ",", 
   RowBox[{"\[Alpha]", "[", "2", "]"}], ",", 
   RowBox[{"\[Alpha]", "[", "4", "]"}], ",", 
   RowBox[{"\[Alpha]", "[", "2", "]"}], ",", 
   RowBox[{"\[Alpha]", "[", "1", "]"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.521203606708171*^9, 3.521203616116187*^9}}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"greaterThanTen", "[", "x_", "]"}], ":=", 
   RowBox[{"x", ">", "10"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Cases", "[", 
  RowBox[{"matrix", ",", 
   RowBox[{"\[Alpha]", "[", 
    RowBox[{"x_", "?", "greaterThanTen"}], "]"}], ",", "\[Infinity]"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.521203694647835*^9, 3.5212037049032497`*^9}, {
  3.521216080648679*^9, 3.521216085591468*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Cases", "[", 
  RowBox[{"matrix", ",", 
   RowBox[{"\[Alpha]", "[", 
    RowBox[{"x_", "?", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"#", ">", "10"}], "&"}], ")"}]}], "]"}], ",", "\[Infinity]"}], 
  "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\[Alpha]", "[", "11", "]"}], ",", 
   RowBox[{"\[Alpha]", "[", "11", "]"}], ",", 
   RowBox[{"\[Alpha]", "[", "12", "]"}], ",", 
   RowBox[{"\[Alpha]", "[", "12", "]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.521203626808634*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Pure Functions", "Subsection",
 CellChangeTimes->{{3.5211946135946407`*^9, 3.521194615890724*^9}}],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Function[{x,y,...,z},(expression involving \
x,y,...,z)]",
 FontWeight->"Bold"]], "Subsubsection",
 CellChangeTimes->{{3.5211946548656693`*^9, 3.52119467266503*^9}}],

Cell["\<\
This is a `pure function:\[CloseCurlyQuote] and does store any permanent \
`pointer\[CloseCurlyQuote] to itself in memory. \
\>", "Text",
 CellChangeTimes->{{3.521194677841103*^9, 3.521194786374876*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Function", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"x", ",", "y", ",", "z"}], "}"}], ",", 
    RowBox[{"x", " ", "y", " ", "z"}]}], "]"}], "@@", 
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.521194802209585*^9, 3.521194802720924*^9}, {
  3.521203633678694*^9, 3.521203658763816*^9}}],

Cell[BoxData["6"], "Output",
 CellChangeTimes->{{3.521203646675152*^9, 3.5212036593865623`*^9}}]
}, Open  ]],

Cell["This is equivalent to:", "Text",
 CellChangeTimes->{{3.5211948167011337`*^9, 3.521194822021624*^9}, {
  3.521194856061034*^9, 3.521194856557089*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["(expression involving the variable `#\[CloseCurlyQuote]  )&",
  FontWeight->"Bold"],
 ", or\n",
 StyleBox["(expression involving the variables #1,#2,...,#3  )&",
  FontWeight->"Bold"]
}], "Subsubsection",
 CellChangeTimes->{{3.5211946204506283`*^9, 3.521194648738349*^9}, {
  3.5211947917988234`*^9, 3.521194846109384*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["#1", "2"], "+", 
      SuperscriptBox["#2", "3"], "+", 
      SuperscriptBox["#3", "4"]}], ")"}], "&"}], ")"}], "@@@", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"a", ",", "b", ",", "c"}], "}"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.521194804810988*^9, 3.52119480561487*^9}, {
  3.521203714006743*^9, 3.521203773646039*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"90", ",", 
   RowBox[{
    SuperscriptBox["a", "2"], "+", 
    SuperscriptBox["b", "3"], "+", 
    SuperscriptBox["c", "4"]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.5212037315803328`*^9, 3.5212037739326057`*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Applying Functions", "Subsection",
 CellChangeTimes->{{3.521198117778243*^9, 3.521198122761179*^9}}],

Cell[TextData[{
 StyleBox["Map    ",
  FontWeight->"Bold"],
 " and    ",
 StyleBox["MapIndexed",
  FontWeight->"Bold"]
}], "Subsubsection",
 CellChangeTimes->{{3.5211981261693773`*^9, 3.52119813635283*^9}, {
  3.521198540364253*^9, 3.5211985445961647`*^9}}],

Cell[TextData[StyleBox["Apply",
 FontWeight->"Bold"]], "Subsubsection",
 CellChangeTimes->{{3.521198138153013*^9, 3.5211981401210737`*^9}}],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Thread",
 FontWeight->"Bold"]], "Subsubsection",
 CellChangeTimes->{{3.521198146744555*^9, 3.52119814736841*^9}}],

Cell[BoxData[
 RowBox[{"Variables", "[", "matrix", "]"}]], "Input",
 CellChangeTimes->{{3.521198151990193*^9, 3.521198221696426*^9}, {
  3.521198312006619*^9, 3.521198312725731*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"explicify", "[", "exprn_", "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{"exprn", "/.", 
     RowBox[{"Thread", "[", 
      RowBox[{"Rule", "[", 
       RowBox[{
        RowBox[{"Variables", "[", "exprn", "]"}], ",", 
        RowBox[{"RandomInteger", "[", 
         RowBox[{"500", ",", 
          RowBox[{"Length", "[", 
           RowBox[{"Variables", "[", "exprn", "]"}], "]"}]}], "]"}]}], "]"}], 
      "]"}]}], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"explicify", "[", "matrix", "]"}]}], "Input",
 CellChangeTimes->{{3.5211982285996437`*^9, 3.521198326013166*^9}, {
  3.521216138733486*^9, 3.521216171428475*^9}}]
}, Open  ]],

Cell[TextData[StyleBox["Nest, NestList, FixedPoint",
 FontWeight->"Bold"]], "Subsubsection",
 CellChangeTimes->{{3.521198862039736*^9, 3.521198884629827*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Blocks and Modules (",
 ButtonBox["Block vs. Module",
  BaseStyle->"Hyperlink",
  ButtonData->{
    FrontEnd`FileName[{
      ParentDirectory[
       ParentDirectory[
        ParentDirectory[
         ParentDirectory[
          ParentDirectory[
           ParentDirectory[]]]]]], "Applications", "Mathematica.app", 
      "Documentation", "English", "System", "Tutorials"}, 
     "BlocksComparedWithModules.nb", CharacterEncoding -> "UTF-8"], None}],
 ")"
}], "Subsection",
 CellChangeTimes->{{3.521194876094585*^9, 3.521194888804976*^9}, {
  3.5211949202578163`*^9, 3.521194925745365*^9}, {3.521194970998465*^9, 
  3.521194971001539*^9}}],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Block[{n=10,k=5,function[x_]=(...),...}, (some \
collection of expressions involving the local variables]",
 FontWeight->"Bold"]], "Subsubsection",
 CellChangeTimes->{{3.5211948978894577`*^9, 3.521194898425292*^9}, {
  3.521194975080805*^9, 3.521195079826619*^9}}],

Cell[BoxData[{
 RowBox[{"ephemeralVariable", "=", "19"}], "\[IndentingNewLine]", 
 RowBox[{"Block", "[", 
  RowBox[{
   RowBox[{"{", "ephemeralVariable", "}"}], ",", "ephemeralVariable"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.521195154356035*^9, 3.521195154631503*^9}, {
  3.521195533064612*^9, 3.5211955722234087`*^9}}],

Cell[BoxData[{
 RowBox[{"Block", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"ephemeralVariable", "=", "17"}], "}"}], ",", 
   "ephemeralVariable"}], 
  "]"}], "\[IndentingNewLine]", "ephemeralVariable"}], "Input",
 CellChangeTimes->{{3.521195154356035*^9, 3.521195154631503*^9}, {
  3.521195533064612*^9, 3.5211955802081614`*^9}}],

Cell[TextData[{
 "(Similar to, but more flexible than \[OpenCurlyDoubleQuote]",
 StyleBox["With[{},...]",
  FontWeight->"Bold"],
 "\[CloseCurlyDoubleQuote])"
}], "Text",
 CellChangeTimes->{{3.521195159348235*^9, 3.5211952021473093`*^9}}],

Cell[TextData[{
 "Use ",
 StyleBox["Block",
  FontWeight->"Bold"],
 "s to define complex functions where some collection of intermediate-level \
functions are needed (but which are specialized to the task at hand."
}], "Text",
 CellChangeTimes->{{3.521195203706765*^9, 3.521195260265367*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Module[{n=10,k=5,function[x_]=(...),...}, (some \
collection of expressions involving the local variables]",
 FontWeight->"Bold"]], "Subsubsection",
 CellChangeTimes->{{3.521195522552964*^9, 3.5211955243199387`*^9}, {
  3.521195600039857*^9, 3.521195600686849*^9}}],

Cell[TextData[{
 "Roughly similar to ",
 StyleBox["Block",
  FontWeight->"Bold"],
 ", but in detail more similar to the kind of \[OpenCurlyDoubleQuote]local \
variable\[CloseCurlyDoubleQuote] scoping familiar in less objective \
programming languages "
}], "Text",
 CellChangeTimes->{{3.5211956045580797`*^9, 3.52119564954105*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ephemeralVariable", "=", "19"}], "\[IndentingNewLine]", 
 RowBox[{"Module", "[", 
  RowBox[{
   RowBox[{"{", "ephemeralVariable", "}"}], ",", "ephemeralVariable"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.52119565714253*^9, 3.5211956577495127`*^9}, {
  3.521195728891962*^9, 3.521195730228221*^9}}],

Cell[BoxData["19"], "Output",
 CellChangeTimes->{3.521195659529969*^9}],

Cell[BoxData["ephemeralVariable$1829"], "Output",
 CellChangeTimes->{3.5211956595308523`*^9}]
}, Open  ]],

Cell[TextData[{
 "Notice that in ",
 StyleBox["Module",
  FontWeight->"Bold"],
 ", the variable \[OpenCurlyDoubleQuote]ephemeralVariable\
\[CloseCurlyDoubleQuote] is ",
 StyleBox["truly",
  FontSlant->"Italic"],
 " local\[LongDash]indeed, it is handled internally with a unqiue \
name/pointer. "
}], "Text",
 CellChangeTimes->{{3.521195667668559*^9, 3.5211957245544024`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Many functions that you probably use all the time are really ",
 StyleBox["Block",
  FontWeight->"Bold"],
 "s:"
}], "Subsubsection",
 CellChangeTimes->{{3.521195762338283*^9, 3.521195784456833*^9}}],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Table[(function of the local variable \
\[OpenCurlyDoubleQuote]j\[CloseCurlyDoubleQuote]),{\[OpenCurlyDoubleQuote]j\
\[CloseCurlyDoubleQuote],...}]",
 FontWeight->"Bold"]], "Item",
 CellChangeTimes->{{3.521195791985005*^9, 3.521195817191792*^9}}],

Cell[TextData[StyleBox["Sum[(function of the local variable \
\[OpenCurlyDoubleQuote]j\[CloseCurlyDoubleQuote]),{\[OpenCurlyDoubleQuote]j\
\[CloseCurlyDoubleQuote],...}]",
 FontWeight->"Bold"]], "Item",
 CellChangeTimes->{{3.521195840872829*^9, 3.5211958429677143`*^9}}],

Cell[TextData[StyleBox["Product[(function of the local variable \
\[OpenCurlyDoubleQuote]j\[CloseCurlyDoubleQuote]),{\[OpenCurlyDoubleQuote]j\
\[CloseCurlyDoubleQuote],...}]",
 FontWeight->"Bold"]], "Item",
 CellChangeTimes->{{3.521195858549151*^9, 3.521195863149148*^9}}],

Cell[TextData[StyleBox["Integrate[(function of the local variable \
\[OpenCurlyDoubleQuote]j\[CloseCurlyDoubleQuote]),{\[OpenCurlyDoubleQuote]j\
\[CloseCurlyDoubleQuote],...}]",
 FontWeight->"Bold"]], "Item",
 CellChangeTimes->{{3.521195869964862*^9, 3.5211958767383003`*^9}}],

Cell["etc.", "Item",
 CellChangeTimes->{{3.5211958943880033`*^9, 3.521195894756109*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
List (and Expression) Manipulation: Filtering, Structuring, Ordering, etc. \
\>", "Subsection",
 CellChangeTimes->{{3.521195992412299*^9, 3.5211960729280252`*^9}, {
  3.521196974431898*^9, 3.5211969771673937`*^9}}],

Cell[TextData[{
 StyleBox["Sort   ",
  FontWeight->"Bold"],
 "and   ",
 StyleBox["Ordering",
  FontWeight->"Bold"]
}], "Subsubsection",
 CellChangeTimes->{{3.521196822883144*^9, 3.521196877119088*^9}, 
   3.5211969246311903`*^9, {3.521197531144808*^9, 3.5211975348319407`*^9}}],

Cell[TextData[StyleBox["Select",
 FontWeight->"Bold"]], "Subsubsection",
 CellChangeTimes->{{3.521196889014538*^9, 3.5211969269503937`*^9}}],

Cell[TextData[StyleBox["Position",
 FontWeight->"Bold"]], "Subsubsection",
 CellChangeTimes->{{3.521196967442721*^9, 3.521196982407349*^9}}],

Cell[TextData[StyleBox["Part , Drop, Take",
 FontWeight->"Bold"]], "Subsubsection",
 CellChangeTimes->{{3.5211984733924227`*^9, 3.5211984737515783`*^9}, {
  3.521198845265545*^9, 3.5211988528708487`*^9}}],

Cell[TextData[StyleBox["Flatten",
 FontWeight->"Bold"]], "Subsubsection",
 CellChangeTimes->{{3.52119758516329*^9, 3.521197586330578*^9}}],

Cell[TextData[{
 StyleBox["PadRight",
  FontWeight->"Bold"],
 ", ",
 StyleBox["PadLeft    ",
  FontWeight->"Bold"],
 "and    ",
 StyleBox["ArrayPad",
  FontWeight->"Bold"]
}], "Subsubsection",
 CellChangeTimes->{{3.521197600476685*^9, 3.521197623139887*^9}}],

Cell[TextData[StyleBox["RotateLeft, RotateRight",
 FontWeight->"Bold"]], "Subsubsection",
 CellChangeTimes->{{3.521198898214745*^9, 3.5211989059174137`*^9}}],

Cell[TextData[StyleBox["Partition",
 FontWeight->"Bold"]], "Subsubsection",
 CellChangeTimes->{{3.521198910653243*^9, 3.521198914269227*^9}}],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Row",
 FontWeight->"Bold"]], "Subsubsection",
 CellChangeTimes->{{3.521197751864684*^9, 3.521197772976289*^9}}],

Cell[BoxData[{
 RowBox[{"Range", "[", "4", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Row", "[", "%", "]"}]}], "Input",
 CellChangeTimes->{{3.521197777441176*^9, 3.521197839901545*^9}}]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Iterators and Generating Lists", "Subsection",
 CellChangeTimes->{{3.521197665286893*^9, 3.521197682482809*^9}, {
  3.5211979646136217`*^9, 3.521197975692307*^9}, {3.521198333428068*^9, 
  3.521198333908021*^9}}],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Table",
 FontWeight->"Bold"]], "Subsubsection",
 CellChangeTimes->{{3.521197853732472*^9, 3.521197857067672*^9}}],

Cell[TextData[{
 "Notice: the iterator, say ",
 StyleBox["j",
  FontWeight->"Bold"],
 ", need not run over a range of integers: using ",
 StyleBox["{j,list}",
  FontWeight->"Bold"],
 ", ",
 StyleBox["j",
  FontWeight->"Bold"],
 " will take on each of the successive entries in the list ",
 StyleBox["list.",
  FontWeight->"Bold"]
}], "Text",
 CellChangeTimes->{{3.521198350027513*^9, 3.5211984427930393`*^9}}]
}, Closed]],

Cell[TextData[{
 StyleBox["Array   ",
  FontWeight->"Bold"],
 " and   ",
 StyleBox["SparseArray",
  FontWeight->"Bold"]
}], "Subsubsection",
 CellChangeTimes->{{3.521197989908588*^9, 3.5211980089243107`*^9}}],

Cell[TextData[StyleBox["For",
 FontWeight->"Bold"]], "Subsubsection",
 CellChangeTimes->{{3.5211978619071283`*^9, 3.521197862098852*^9}}],

Cell[TextData[StyleBox["Do",
 FontWeight->"Bold"]], "Subsubsection",
 CellChangeTimes->{{3.5211978677949457`*^9, 3.521197869562333*^9}}],

Cell[TextData[StyleBox["While",
 FontWeight->"Bold"]], "Subsubsection",
 CellChangeTimes->{{3.52119787476271*^9, 3.521197877178459*^9}}],

Cell[TextData[StyleBox["MapIndexed",
 FontWeight->"Bold"]], "Subsubsection",
 CellChangeTimes->{{3.5211984913035507`*^9, 3.521198493926902*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
PrintingStyleEnvironment->"Working",
WindowToolbars->{},
InitializationCellEvaluation->False,
WindowSize->{1216, 710},
WindowMargins->{{Automatic, 26}, {Automatic, 0}},
DockedCells->{
  Cell[
   BoxData[
    GraphicsBox[{
      InsetBox[
       BoxData[
        FormBox[
         GraphicsBox[
          TagBox[
           RasterBox[CompressedData["
1:eJzsveluG1m0LnaQBEheI8iTJI9w8wT3AsnfADcBgvsnj9AWaGoWKYlVqkHF
KpeLFGmKpkRzHossjhpoTZYs25LdHtrtdttt5/t2UbI89XR6OPfcbuwmaIpD
1d5rr/Wtb6/hf/5P/9d/+D//u3/5l3/5v/8nPPyH//j//q//+T//x//yv/8P
+Mf/9l/+n//jP/33ePK/4P//73/8l3/h84Pr8l829sXAk91JxVOt9orlhYz+
rOqGjFZIdyNRPolEW7LVWsQTsx/StwMyRmdabclmS7U6M2p/Vmsv6B28f9lo
r5gdy2nrViNi1Jb0lmkN1hPb2dSomLnfqpwP2udD71G3cVTPH9XynaQzKmRc
06rpxiiX6a/FqiEtH5AaktFbc4bppCtFa7NK/brcuC43r8suRkA8X9Cai0Z7
1equObu5dAdXHpDb00pnSukFpF5A7l2X+5+N4a8bVz+C7/GmFW9K6USi3pLR
DcrdgIzHNp5o1vZ6yjPtjmnXppVGSO+txfDPYSJZC+v5byLeqjXMJPEiRm3V
uFvI9NLx/Ur2oJq7367ulTeHG8lewunFHc7kkoFJ7oX0YUDaui5jbP/5YxiU
O2HDXYpi1dpRq+PYbcvydKs1p7UWo57p9CLRrYD0tY8PJmVvXsfHe/HYQTnb
dRw3pLcXja7l9KaV7SsfHE4pgykFM9mbVnsRE3/FbfamlPaMCrHp6HZrQe/r
tiebzVm1vxbHV9VDWg1rHZCbAQmLjglvzWructSd17gc1+WrwwvI3qTckU1X
Nj3L7jhOa9VqRoye5WBFII0UyCUDj50FjRIiVtYf/YsnXtjoGnZ72ejiOxeM
NmZGjg7WkyduGXfXS3BxW3K0GdJbU0prQfPmtM60AmG4+m3djy9sfG0Tkda0
4qqWq5pt08aFeYaNexwmk62w0ZiQcJu4L1xeL+bczWXwCJHAm7czKdwLNlQt
KGM2sBFqYpQD0jAe71h2fUnHhZ0NWifNcj2slSekckCuXueozaod29nJpNuy
ie9vLUfbERPbxLv+YbQDUisoY5fhpzHhzUgUl7STTbciRmVWuVcpvDwaHddL
1ZDKbw7K5etyaUKqzau7G2n8blXSRrn0ViZVUbSirNyrFyDV2NGNNeuBV3vQ
qZ33Wy/ubr+6t//65Oin80dvHp68Oj54cTB6cbB91msdN0u927HOuoPH43rh
zdmD9+/fv3v15tud3vPRAB/5/nDvYa/xdLf/+uQQjy8PR+eD1mm78nSn//Jg
hHV5tjvA491SBh+BPqk6Br7zbnnjXq14Jyx14jb2GpRPH5ca1kozSnFKzk9E
Kgvqg1btXqVYCakUCctu6Za7aDQnpHZI78cTHcNuSVFov5ZQiW08zusdbJYp
oQqCXOXel0b3yvhcDNrY41CPjrNX2sCk9ZPxnuNQT84qxWuRyrzavmFBG+AN
/VQCq4AZftCpf3+8D/GryTrev1fewIsQj2pEq0S07k2nHjHalr17J40ZGG2k
/XssXJcLQQ78s2VYnZt2N+5AF0EDtxWr6C9lQIJE+ULlK9jxwCvQwFNKPaJ3
Yk5TiUIbY7m30snitIKpw57CP/Gd2GhH1Xw35hTnlMK0jJGblrB5oejajg1h
OG1X+xtJd82C8v92p/v87vD5aAgZeP/yu/dvsdLv+fjy1ZuHp29Oj5/gDaPh
i73tnVzqYbeBS+3djmNBH3bqWEQ8z2kyFCYMB26ks+YUFAU/tFfcOCjnMGO5
kIwX90qbW5nkfmGzuqTlgpH8jHy/XjltVnFhpVmlbVo926kt6i3FrFyXKwGZ
j9cp1bU5FTLQv0XN008ksEkhFdinNcxD8MrkiLnCZixPRDzNws95N+y6bOBH
e8l4QzXKISUflPDrW7dTmDFMPixgdYWbFHvZxT8Na5hM4EV8BJKJBT1plZ+N
Bj8+OsUjBKOXjOF2atjLM4pYRKk0rxRDSiEklyNK27axv/DB7c3UIJ3op+KY
/4Zs5KckjHJYPapxD3pr9lG90DCjVV3fzqbvFjeajgkhwXQNb9MkdW7Y0Pm4
Nex0F8Y0cGFexWj9xtH+peH9VQNmoi2Z3NGKCXWNWTobtHc2Uk1sPfxpQvKE
Avx0bwbHH+8EPv3T+A1XR0D6wu9ejE9mxkcskJm+E9/NprGbKtNK/4YDtFDx
1SkkcFbZ2UhDkQ5SCcCerY3k463OQTEL0YIgQQAK2NFT3F+QrmpExyiGFdhc
7IWtjdTzg+1XJ0cNI5qdjxQXldy8nF+Q83MyBKZlWYN0sp+G3tj84fQY2wp4
CbKEj8PKbG+k+unEqJD+4eQAexNwq7ESzV8faw9sh2Eq2bkBQ6yXAlJZbJPx
CEh4cTeT3r6dhPhh3+FKznruYS23m0/3E/E7MxKW4KFXL4UVXDPUFBQavm2Q
jLcNAAy7EZTrExLgIt62l8t0NAtGcDxpAY5fLzZfXK9fP7r/Vse/8r7+kPHH
b09CDrk9qwKNwLzCvkDjQXigmoT4GTBtQPV4DvvYDOuwRNg70FSeYVVnFVf4
FEMnARUK6e2aTnVWrQUVWrGgXJ2QmmED+wJ+BGxln4qURopfmEg0ANFh165a
Oux62QLgrE8rhAHAnHNqY1Ztzqn4tvrHOt+HXlXsC8Xs2DbkGfocmw6XgSd1
1cjPyoVZuRxWmnoUKBpODdV7aeN82D4btnFfMECF6xJV+vXxKH42SmKUvzJ8
azVGd58N/3W+MyjDxBcmpPqS0bkJY50ChBskE001WgQ8CAICSTCCw1Riaz0J
+IEt2U8mXMWEoRdeWLw8pXyy5f0LKwYk2ESsGmDJ++fPn+70jpvFXipWkJXq
qgEkBosPd+ygksVdwwDBlgGl5GYkTA4G1E5uXhptpmHC9osEigVVOShtwgLu
FtLtOGY1DnW9V8yWFRV2Cua4tKTkZscf3wwuwcLiRmCg65KRm5TqKwY8qXfP
nwFPwrbiRmDgoJegVeCCAWvVBZ5pTnKtfXe1daFYIIfE5CEdogV5wzVACUNU
ALbh6DWD8tZacrieJFYHLF+LbadT/XgcMAy2GwgEGnUnn8Y8vDrae//qDcAM
YAwwLV7v3nJg+gGf4Ad5Ubo2bYDGgMR9DWch+GXn9J/xK8cXgffX0DiV2KyG
+YfCwQY/rOZ/fPQAUFPApyTkBLuSXtiKCfcQSw/kj6V3IecTEcB1uGlASsP1
xF6B7AS8v8as0pxWIQzbt1JQKXyzoCY+DEFQuGED+LA+qzQWDVc3oa/gzZWn
lfKUjO/cuk3HH/htv5IFvoUv8+7Fi3fPnz/s1gEje7GYp5jQZh92twDq7pJR
n/wIizY++ekrw/31cE5shHZY96CQ4YmrFjzcjmr1nJh3kwjqyU7vx4cn2Np4
Dg8F2wR+ZXlOhb7KX4sUJ+XakubZ9k4u/e1uby+bKU8CWktVgROw6TCx9UW9
HtY7wjEHWsbsYTYay0ZTigK7DtYTO3eoEwBmAIG6dHht+u+Y7YiB6ykGrijJ
IMelg4NRBLCPWlim3JQEDYztiSmF9wEo0ok7cEuBfgGzazeNdsI+67dOveq9
Zul86MGjPB+0n+32n2x34VHC9QBAulcvQhcBigODARrhrrGp4aION5Mnbumw
lq9FjW7CgfrqJh1o/txUBFd7UMzVcF+bqb4d473Dsph08AF1Oqa9u5nuSVZn
QuoFpM602jEd/kmz+msJTDjwYVP4/t0bDm4EswEEeLfI2YDxgpVsS1Y7JNih
Vbs3p+9cl3f/Gf9exs5vZ+22LsZHvGVAGgQ+aMj2tOpGTE+1vAW9NSl7mg0k
gE0HSEDff1qBlRzlMx1BN2EP1uAGauZfTDuTeQ7IW9gRs1p/VtuZUoZTCkS9
M6OSbV4yoLe7c2pvirShf7992YSaaoUNkr2TAIQmtCJQHPQ2aa4FDYAQegPw
b5hOdJIkh4FDnmx3fjw9/un87PujvbO+C6Ay3EhiL7s3LS9mYxePihl8Kn89
AvCDXdxzHFp8QNCQDsek6SvbkDqMwxBstqBtTLspG9jj8CvdScVbtTu4jFm1
M03+uR/41GYNfolzHvjvvPwgQbIGBNKPxduqhXvsTJJ5hjlzQwYMFjAzrrAd
tWszKmwKNCq0ClBfKSAXrkXaGrR0CqC6GTUBTbHQ7TV7azMFlQjoQmS1noAq
hjwAUUMFQUgAS4ZYi+BfwjxjimBxAMbmdSg3dzkK5Ib5B3rHUrZCBlHZUnRr
kgcNVz/1gVIOyN05HUaWBF3UcleiPKSAjx8yuiHjwy0E5N6MCsHYXk+5Em6W
zDPmlgcEQTr73pQCKOjCFcWYUjCN0MxbyeSWk6BTAGEL6e6Chl/ZSiXvZjO8
VNK5YxrhcrQCkjunYZlwGXCZe7bTXDYwvaTybsXbMGdzWifwETj5BNJ0AAun
/GuTOlMKpgIOeNu08FkAVJ6zQAzkaDukd8V7eoHP0A7EA5/FuKSdsZvCBtyo
3Y30cbOEHeGT4bhCIF4oB5/rgwzjVwDafzg5AHxt37CxHPh1QBeM+pSAH1e8
DPj+lWmlAiRj2TCaMKPAuuTQZtQqgYpUh38XidLhIpSSyZZPCr/vkicJSO0g
JRnwGDsOV1WaVrpxBy6bq/On7xYyo40M7rc6pQggwQGXpBO14XF015zGavR+
vVyW1eKiUtF0eGEPOjV3zeqlY7Dmh7UcTDmefLvTe3VvH1f45vT4h3v73+50
H4qzp7tl+GUeNMNBZROOzPvL/969fw2o06r8+PD0+yO8vwd4gIEv+fH+MXTI
M8FL466fbHWe3x3ulzfxK8Ns0k1YwBWdW463ZmfDkd1sGka/s2bjReC93EQE
QCWPqYsYR5VcS7GAYfCcrOBGihshKERoUmliTiAt2AiCasZ28DAz/nJ/tuJf
Jp8DgsUKjLmsC/kU/L9hAx3BKYYnWIY3GpCKJPO1nkUrgN8th1QIOUQFdqG6
pMIiYDlywchgLXHaqfbWY4CCT3cHcOuwCnAVga+gUh713B3oTKEwSVr6Tm5Q
ygUixTkZogVH+KCawyrDKcMjASHddsjeR7QzBWZW6dvOcb2Ij/TiTnlRwTfj
h2oRvZ+If3+8D0cPSK8wKcOQ1Zb0fFAqCl63vKxiwrfvpHayafxW3YlWbANA
DksPyAc37fXJ4bvzc3pql/+9fvfu8fnbswdYwdf3j/G4lU0+3vJeHo6wsl7K
6W8kgP1wd/jCrC7jlrGaB9VsTpV9fnUrm+qsOdmwBNHFe/rpxL1mcZhKFudl
YFFMGsR4O53EVBOyBgTrPnnhyFOkJZ6qQLxJttNNwLT3UzGIN2YJOqQ+pTQu
pyggNeY1AObqtFKdUbBYw1sJ6Ct48XxcT0LkqktadnL5Yas+SqfhLJcjKm2E
Y/fW4/1UomnwOAlLT/oXGNuxcfE8mS1keEx5K4bv7N10KvNq7psIrhkuNrmU
JDnJOyHeIzYOfBaYTvgpANjQIQDz+UkJAwt9VMnvi9Mf6BBszLKiwe4clLP4
8qZluqblRq2mFnUVk26RuKNPaOffwTz/Gv75L2KefaYXYECzPMfeK228OBjt
FTdahuUuwJwRsXxiNTwoNNgFycQt8JT5a99Mc0POGZAAatPzD0MDH2vULzPP
YoZhMhyyatg4uB5AoxZc0YA4yFvUH3Ua95oFYB5yZTdtbqWwSrZ5UgzxBLss
PyXdCS7nZ+TCHOnlhhHFEj+9u/3+xXM4sw3TxPbMh+T8PJnnYkiGjHHpk2Op
g6wCNeWn6aBBXCGrguhOYRPt5Teg8CH/BUAXOHqwFKtWP54oTpHF+oQBE4eP
Gk9ObyVxqR1xqoVtiK0HIAeBhwwTwlF7xCCW0Bsw3DR5N0nuVQQVT7c9wl2A
PQtE15xSXP8YdFqB4uUxQeBXrfi/S+b5b+ec/zzmGdsTlq4f5xkEsNCLo9Gb
sweQAahBKN5ezAHa6dmxXtRpzKrUtwLMVANSbUopYr8E5dy1Zcgq5BkyBpXb
COlEO3gbFHXYIG9jUamO8mkGpcQdAK3Gon5p5j7iiALjk9ae4AfgudQnInXx
o58wPGSeA1IFIqpa+FHAeF9jwwYBs+0XNsg8L8i4qsfbHpQz4P3WZnKvTP0D
WwY5L838AvP8a2jnS+a5+iXaueofpELhLDJqohrWgCWKC0pHnE3DiNP0SNEC
PJRJGU6HR1ZHgh+Km+JPT5KexT4lRRb4bNeLgc/C4u8VN5+OBvfblZ1cqneL
OPZhp7FXyGAdAUV4znVycOpWaqpRmJd93hiDkTmklxNYly2BRrrrMQYG3E6c
uKW90uZBefPN+dm7p0/3ihlMLwBAfy2WnV6uawY0G3QXAGf/dhKO5P1mpaYY
7qqJrzquFnbT6XJIgZ6E8eUJciI25q+WDH+hMeAatGaU1sXxhwvXQ4R/MN5D
eJr4CcJgw67PKNBOeBGoqRbSIFG+sJXmlWpEw+rDwnpJGyDk1KuJw/TTd98+
wSo/7NRHhTQjN0zq+UEiAYmCEw38782o3a/4Hf+MP4V2BvCeVLqKBW8FLiGc
8W7MOarlfzg9Phu0KXW3ElUA2nh8KCjo2rQCZxNmeiwtPB2D80hq4sQtj3UU
uUTLlaJb6SQGj2ycGNyrZkC6yvqO4zcmGNrhrVqws4NkAv5F8VqkHtYhTv5x
7d1iBvgNHhB8GULiV6/hGRGnKdHKpFwRH+fWxpeHNG7MqI0rrH98fPZrmOdf
QHQBYXNXTFhzoOuObbsynwMyAYoAHtwtbvhEbi/FjdBLxuHJAiEAG2AH7d5O
dW7avUR8K5PC2zAttXmV3iJ8eeGGY3qPqoW9woZPekDJY+B7qrMqlEn3Jrfe
YTUH1wAbqncrDnRamVNLk0phIgLt9BHtzMOvj2jn3MQyHHOoWcBaauB5GUDo
yU4XqgnYr7CiYJ7vtyrkk/Pp53vbB7Xc463Og26jl4nv5NI7F4ropFWBi/Hq
aO/7o73zYRvO1w/HB9jdgEbY4FipTjr2qNeA81VQFeAcelIOoU5+VmrDdmTT
8L5d1YTyqQZ59ndcLW7HkyUIIfRAMtFZNAQtIHdmVTdskGZZ0DsQyxnVvRbp
6hROLAGkFJCJ87nmYLlbitlaiuIjfTihEROP2383U/rP+GPH72Cev0A+B6T+
DIXEZ666YWM7lRIxdU5zXuP2X45CxfVjMZ7UzzHcDgJGe5eMY1e2b9hw9mG/
/nrmGWPvunw3yMfRdQZ8erCV83oP6le2PInC35tUhgF5IPQ5+UPZwp86UrRv
OC0p6q3acOugweBB1GfVjmnDQPfiTjPKqAAoARjlH+4dvH/99v279++ePH6x
t43dfVjPwwsrr2rAD9A/8IurS3phSjrIb3pRG1Yenz0s52AOBBqUGoBGKkNx
7hYy2J4wBNjC9QW9DbUciTZ92lMmz89gVC6E9Inl+hrhPLh8T1Ahxx70mWcJ
34PlAz6h5p9U2hMRn05sz+tQMt4NG/q5Oq9CQ/YtqCYXDm9xIlIFBpYMeJRN
NQpAWwwrzVUTxm4rk6zoOtQUsBZUYvsGI+J40mrapH9DhgcJCRvDPzvmOTCW
3iFuM8gFxRK7i6SaySHrFtBpJ2LwdH5WvXolQ0zptNKHJATH9DhVIj61FHXD
emdVnNAtGfhOvJNbIyD7j3hbSzIBI9urRIN0GFesnkFyj/N5LeIJ/53UXJBn
u40lYyuefDRo+SGIsIPNZaMdtQCeYRxbuunO611cqmAAPoqo8S0pHkMaVgE3
ArnqJpyzQeu+WwUaF6cSX4d/gYtzByx9SO9AtrHQuEER8E+PGBds2h3b8fzo
+k8ADz4F4ccNhnTvknmeUTzZhJxA4J8fbO/cSUMYKFHw9CEhywbQRQPTaFCe
YZrhyPQFOw2six3UCOvla5HPHQ2fB4awNVeMb3d6cHA6jt1YZgRLPaT6wR6X
EePux7FkY4ZkUsZuHSaS58MWhLNtWcA8w2SC3NdaDC6buyp8kAlp7NdAqpcM
iDqAAXYfEAUudWcjlZ+TG3oUjkPvVgxORzGq9m7H6ZXk08du6dlu/xB475gE
Ml58eTD64fgQjz/eP355uPfDyRFw19Pt7k9PnjACdsxGvgVI6GcS+P7dQhqY
Ad9w1nOf7Q6gHl/fP353foZPvXl48uJg+7uDbSBDwIPtXBp65kGnjnnORqS6
aQDP0II7dLvgLuUCkbpsjDbTgsqLY0dXZxXPtgGWoGTaEZ/u4OEFdgGkzlvh
ObUfqfK1IOevMc8evgpruiS468AH+WzNquSxDRsYo4/LcGIMMZpVhmuJVycH
z+4OMPlkR2d4jg8JAbrLBSSSTkFGtGIHuYYJtAy8ivnvJem4kTaP2z4yBJzG
rQEC5QM+zS7VFrXBLfKW+JPrn6FwfR0SXIaNbVubkOqXkV3iBASyB/z2dLeH
+WwYUVwhvpPMQJwnOETRwFciOSU/IeXF5eGOAM8Axto3yQZjRaqmUVhVsCjw
E0/b1f1KFov+6mj/p/NHwNiXRwzvX795/913L4/28dfXx4cAftu5FFb/rNd6
0KnxNGHNen53GyBwVMwULbW/kbjfrsItxR4pGiokhDxeKlGUlZphPGjXmpaF
FW9ZVims5Kalqqz31xN4Dw8oFVL9It57HBvGAXc1pGLXwE8nk5xKMDi8XcWv
k5+fVj7iH0SgJmMVbjLSuB+Ld284tYgOFxu/CDHDlVQiGi3XZhomrBJWsToM
kSptMKgjkxSnsUyK4TFW1AaWbqnMbsC1Yf/2RB4EUX1AAvBuRgzSd2uxAWNT
M1g13ON+cROPWG4A7LOuiznHr+QvImPLSyougAGxtfxuJpWdi2AG8B5YWGxV
rqNDKoZ5JaYj9MNvD5L5a5lnhjH7x2RXqciA/CmBfHH42AZWuRGDQELlQlzJ
5ydjmG1PtzG37QWNR5af/ERIb+t2z3RgB9uf/ZW2aVLpKFYbKG6G4ZHulEJF
MavAirXn1NaE9EXamcwz3FKI0CTNH/wILDQ9VtPiqdO07HtVLY208BYToGLu
qlmYJsnMUOfJC+Y5KJdmlUpYy01Jrm5upxljmZ2JZGcj2fkIPvuw24B4wLKI
qCQbCpmDbI9UWdbKi0p+RmLY/KxcxOv4/mn+E1IBc4MvhADjkeoCUndBixUC
Hwixz3kwclDwCmFBVqK0HbYfq5Pqr8dH2fSeCGjcL29CU90JLPu3QLU2RSNS
g1t9jRlhg2QSW4w8IZSSFG1A4Oc1P/Ds8pD0z2ae/w2Sz3874fynMs9Y2daC
Br8bWxIb82GPZ9NQj9Ccrs48tca8ymS3iQsyR2R7QTAgSyQVYS5DKiPlRGbc
7u10Y1b12RhsMfKNNvPdsBGAiM63O0NBEHHPAlV+haXh6duU4vrH9J9xzmPN
j5+YYZwG7DJ0KaA+kAbAyRZRPeSfm664pBC/VXN48bCS8+L2qJCGWQRqZfLC
5AVh8gcxz18cPEsFMk8mB4nE9u0UjywdJzcvbaeTmAo4I9V5rXAtQs0zIY0P
lQIXBlEchJXFN3zxGvCpyqyCJQAYgF7dvoPvj2Gqsd9bN6yiohyUc91bjm/v
3KhJFeQHPM9QHcHZOSjTXgMoAsafD1pH9TyPztdsoDuAQ2+NHM75VgdGE5P8
sFuHSS1FFKjx708OXj86hVETX77pm0UAEujMhs6D18J1pjVVFzWeXyTj1EWJ
OBHOArlE/wQQ1uGqcoZmbi6Q0+uJvCGmr1qOp1qVa1KHEYlxBs/H44fFXCWk
AT0CIeBqsdxYZSAuXPy9egG69+lOFyAHtwDkA73Xumn5AQC1EMNgYIngv3QW
je7EB3/hb6dw/ysdvynguTWrbaVSw1SypTB1EcjHx1HYlVhBxtgkEgDhrag1
ymewUrWJyPgoChhgxWIstMiqPihvAg1iI/cSjquYPYu0A1WNSSjlLmiNz5ln
MWoCLkLgoZRqMwr8OE/QF+2oLbKNMqde9elu/6fH5z+eHr+6tw9ZogU37fqC
xtiGoFwNcEcDk+NqR9kMXOxqwFdHIgpC6L1/LfMs3uApFgwxPAXoN2gMKGdI
Oy7VixE6wrPAI4SfcXQaA5XhXxSZq5W61yzQ9K8n4VzQJcGuNG3oClw/jXvc
xi5+/92L7wWRC9SKjYltSyg+ST3j6Yx2w2Y53/buFjKYbWZ+xWNlcc54eeBV
uqInx8zzdQnOUXVRbcEhSsYJs1PJ3KzUNKKYQ6imChwQVTmo5LArzwdt7FA8
L5pqydJyhlx1jHqc51Z75Q3oopNWGZf3sFOHjwnP9CkDoTvwVnzmGY94J/TS
cb1Y0BX8E+4M3EwGXEkadBqPOB0H+50HeSK4pR+L9W4wagVL1l612pEoc2YJ
JqWuYjFl2HRcETvXnlGbsxqjzWUTC92LxWDmyMOo/FR7QR9MK1sBeTClbAf/
fqb0n/GHj99H4n1gnoNyN6x3NLszp/UmpM6k0os6d/OZXtyB6WHYYUhn7vxN
20/ChRp5vjfEfmH6WDIJFQTQjo38Ym/772Ke/cdRQO7KZguKGnobG2dW7Szo
Xd3GRugElZ5mQ8lgmzDaOeq0AfZCOpPQJ3ma7E6rnih3wMwUw6qvGLjB3u04
EBrsMlQrOYe3ZJ6xwU/bVYCNumNSCeczUDvVZfpW8IMAkBgZDh8/yVDMC+ZZ
xkZmaKhhwUGDUSAGuJUcxsmVjYsq4E/w7xYNGIXerPY58/zJGAQuyMYLvrE7
LXRF2CCLuMDCDu0llhABWm6F9B7+RLZTBOdEmDDordpkkOLxzg0bZsjPRYV7
JTJM41WJka5wMyuLGuaEp6uOw+TrtRgU7DCZYOyHZgE8k96MiAIXsjkMyH9U
wQ2S2EEGKvfmtP6syjjnIHngsdwGWDEDKKuJGdOsFuA3lnKGZTHwnuGE5F/J
OMg5wHhgWPDhWrKN94eNoYia9jTKRgu3QBJb9kl7fNDfFAP/eYAwAK4BQ5cn
FW8cS0zmuT1FoYKOxe37BKlvu+uTjI3hOeAqo45hziASIlDQbqnMm+utxb1F
o/0J8yy46xadERnrCBvqGhZwMtyB0Z1Ma5FE9wVL/LMgR7DlHRGFjtGe1VxZ
nD/iHkM6frczrV5K1yXawZe3FhhQynDxC1ac8RVhgT/Xk4DNQNFk8ICN08na
rOB1RSwN05FgqR27v55gHn2S8fBbt1Nt2cJ7KgKBVP3xUXyL3JSNUY4hpvha
Jj1tprAjqqJgAtSOOJEXqPuTBCtcLUwb3f84zC7wQFsEaYh6IBZstF9JwBNn
uOS6JyItiWVVejed8pziyiQchoJFuTMdqa2wzMVBNbtf3swp8kFp83zo0SnL
pmDED2o5/PUVMx1aIwbGZKHlHg+9ewISvDwcAXeRPd7bJhv56s15z2UVjrSD
sZVNfnfA8Nefzh+9PXvw7vH5u2+fMED6+TM8f3N68vJg9GSr82y3P9xMAh+y
kMVm6o4sC8iR38okq7LOMggLSn6KJ+y+74DpZawUI3VtX8O4YqW4ZNNKe17D
LuiIoi4+G/DrES/FADuF2WqOu2JBchgqSd6M1BlJqpBGhbbA0FkoDWhIQF+4
ObuZNARboBcSj36Arh+3nL8u+aGPRXJHCpy48rJSWlZgX46aRThfhWV5J8OD
re31VBEu8IxPWEmVMMOnn+x0tzaSAI1w6wDP4O/j+Wmnhh8lEXRRcKPup/WJ
1GMWO7qdxBdyAFXCYImFAzKEE52/RqeVEWjAh9O8sL38xr1msWoYe4UNfHlR
VfKyzGj2ahYeelfEwPvFNN6dP+Ly/fiWBw0/vnv/4sXbs0ffHx++f/L41ckh
oN3WndRZrwVjwSo3tVw9Ht0rb0KKIDCQlvJNHcsKWAi4WIgqA4b+NmBHIIrZ
pchONsUAV9suL6sQy6ps4BruloS3mE4wQjiR/MA8w2Cp5jCROG1VcZuwKSRm
4zb5kG4dKJSBwX5c3EV4iR8T7i5HsTH92kqNCPN/RU2DRDfp4N7LksaQmA2R
USgb9P1TsUcDl8G3pQ3oInJ9S3rJ570D5OIY9L6gb6dT1Xm1tqCVJ2VfBuDm
i7UQsL+Y2c6mmzYTil3TxOowF1iNwt3mEkxeFGSYV8giLipAGvfdMuBHdnqZ
OtDmWQNdYIubGtrMDX3kMf0mV+UvI59J8GInajbsL21H4IqSD37hJ6jZ5gHj
STSRcYpafmkRqlbWX4rCsrf9chlBn83mrnRDBvYC1CA+2Ibqnvo4Llr8XFtm
QEsvHu+vJWiAFg04lfulLF0GmLbglxw6XLzYTU1RYwdXAq8NuAhblcmky4Y4
X5CoB27abQuCFwcIhLJiYn7wQ2BPPijh/diSzD7IpOACtx17lE3D18uF5GxY
qkYNuFrnWx52ekOPMr19zDyzAA6DnGdk1mOZFrTzlFRZVPsJVv/AdoMPmJtg
zmwx+BkhFvgqGwaJrbB+lCli8p2tVJLnHWtULNB7NZ3Aj7qCtUE0losBThAF
r2BBIOcN4VmT24nHYfhq86xv4DJRzgBI3i9s8vgvIP2i2PxRFOvfzjb/G6Sd
/yTmmZt0IgKcyVgOcTY0uM1SRdggXZu8MfZXc04bhxECt4R1d8VsLOrEHnFW
rvOzPAZrCSgxVkOaiIypnkml78SARYFmAbZhd05alW7cEYe8cSDMTwiiT8jn
hmC5v0g7+8wzrDbADxDaSbsiTkv3YJ5gm4C7CmHSzsfV4vmwjb15WM3BnSmv
qLg7xvdmklAd+cBFwPPnG+2XmOfKr2Oex/k7uIuIQWYMOkfYeqiORpTHW/Ct
YCDKs8rPUNw/M7DrsYX9qAnayhhxrGswoxN2bZBJttfsg3K2ZVvtG1YxxJNf
BiLOcFDzzLAYF5012z4btt+en9EiZ5JNwyxHVODPqqpn5yO5JblhmkAO/tQB
3uA9Z0Pvx/NH91sVEly3k/gTNMzOHWYR4hpwR5jefoyyQdyywXPzB14NplAw
z9IXjJpw4mjNl5i+Cj+uNOVbZLLxTJNMJrZuEzXVl3R8OdO7JMMPeK6t4gnj
HvuZxP1WeV8wk8zdyCYxCePSMREDmg3325aiLAB1WQfyZ+Je/hl/HPMMT81j
vBBDoQAJmI27ChRki+qXTls8AU6DX+YZTNYmDPaTcYJkjGuQjTAhBBXObSaj
YelZOW0JjnycddhmWKWntRxtiuOqLzLPUBqM5tIsNxKtkUZm4gaQP17Bxjys
5b7d7v54cvT+xXc/np4AIR+7JcBIfL+f0wHIUZ6IVBicwMuA2mF5nDlxMDcp
N2YU4BaennxJrf025lmcj7OSZAQuHjRwDBAUQJGJVLoBYcZeqxtGWWZUA/yL
3PUI1Mh2UgS9XEQ1lJdYCqwOVCOQLRQFqezbidN29fXpMWD/94d7Zz0XmwXz
D5BQnRGJFRwsYQSozLhfnT7pcC0B6Hs17UKU+hEBzxeH48Upubaowd3A1tsS
B1XUwyGZrkouc69ehHIA+H97fg7tUbeN/u3ExkokpysFU63HTfiM0DB+AcAf
7x+/Otp/c3qM8fqE0S8/nT1iJMz9I5aLZJBk0a+b1EvHiqaGr+0kGMtdlqi1
jsr5pmnyxVU7/80ydj30SU8cWjVnVVg6gBlvicxDRxQ2OShkz3c6O2vJtkiO
9pajXpQUSv9GrBZUgC17tsMUeyDMxWhnOToQoc7bAfmfOhv/Lse/hnneCkiD
SYU+yIrVCRu9OQ0Ykin2CiuFVqdYGdKVDCZrmKQatkT51pNaCY4wtlJ9kYU0
IavwCLAB/2LO+ZJ53ruIfO7Pqr15fXRdHrIQlgHHilShbLlhFoUYGnYvZAwE
D9mFPZ2QOiI1sqda2EGuxJRPZpKGlL6oxkY0Us1h8/q1W98+OsU2fzz0TuAX
3471bsdZECzB7ObCvMyqFLnMTjYNiwBviJUNojashh+YV2M4sewfRsNzwcU0
JQOYDQ47bERXHMQDh8Au4JrHccs/b8imGeHs+UHO4v2dGdVdirYiRntBdyNm
a8Vk7eJIlEV4xKGet2K1GfJEdQ3QAt+fjm3c2d5MdUWEapXwLzKIxfcrm50Y
CyVh0XNwHqMCMt1J40l5US2FlBrePK/iRsg5G3YbGDvEtKzLUOGtwMeVLn6T
ZMLyLugdjbWje37hiAUd64UXPd32ZjU/Sr8rAtQBzqnzF412UO6IOeHjvEbS
GNMyrQyEkJN5llkAypUtb07rT5DH7uALDbtvOV3Z7OAb5lm3uT+lDKBXlxgS
74UMnkHDUK6YXcMe3oxjTWHrWVJvVgUqG6xTUTeXjMaEiHXxD3MDLNxXm1aY
1buehDEqi1PUcRodTFVYnAgErzg1gXEkA4wXvA+8B2+uhhkByMp7usXCkjOq
j/1IJ/6ihPjcMquaK/B0OqrVFS/2PjvRGKd3RczeDZ4Xu9OKH2IxjuXGJOs8
U2bFD4MJNQxxNO1KkK5Eg5WueWjSucHoephvIPPdzRQr70WM6hTZ6XpIx16o
TLHSoM9Cj0vUAibNq40VVunh4ctN5gDuFzerszyjIcUEh2tBhG0HPsUbzUke
pjPkLO54PDdhbYHGMtUUfP+DwiYutRnS/JqHBGazIo16PYHlK84pMPr9eCwb
XC6H1YqsNaLRg0oWDkheUTq3nL1KdivLUyfs9NN2xaeF8fzbnW5/IwnEjgGs
9fYM3kSZBRPWHTy+OBi9Oj7A93gpx7tli8iiGsObT49fHGwDCZB2/uHN+59E
ieDvX707P//+aB9QAT+BTz3Z7sCX2VQk6pxKrpN0Tr0qvA9cJEZNNh56dUx7
Q2WtQjypTyoQQk/U2fBpKJ9o8uulsKL7b+Sc/RMNYgyxo5viYIWSOacBcvj0
FASjfk0aOHGmngEAx1mMaJBK1Jb14kQEcKvkxyOJtPfcBEsuYGVhGqBD7gQj
ualIbjpyZzoCz+6omj8QUUOliJqdXWYF1zkySz4PmQ9KLKq2kdoW9SgADoe3
kqVlBajpsJb/7mA0ymYgAH4duTHtfJ3HPSywr0KNM766qZImhco6KGWBIQna
Vy1BjUpQvJB2lgdZUOqKAcy8V9pkvXHDyEty46Y5KmQYm72ZHBUzUP4Puw0/
7Pnd+Zl/fPDu6dP3z569e/Lk3bdPX907eHlvfzefxpK9FpWfaSzOHmBl20n7
rNeCAJBhhvCI+hsnQOmZeGPNxPt76XjNMvKMuWIV/dNO9W42c2cmUgwrfopx
VdMx23gdBrfoz3BAqsLMxZwdlgJujfKZxqqxcztVlTV6rxlmBTbmtM9ztBvX
6E1g6giexdLA4rCcVC1Hdxjb1rK2b6dg0QBEayz+T1LlpFl5stuDH+3X3B7c
StQX9TG09kPOgqyfw4kVcWgXdTVlqC+s4PO9IUA75STDfB9WY1hSWctaRLb7
xxPFabklHCWGXt+KNwwD8w+5Ki+ruWkpF4yU55TStFKeUap+lRVRXv6LMc+/
m3n+Y8nnS5IZoGK0mdlNp1rLxviHAEUMu+VXqr/+oeqF/5zmgwU8bbh4tUWd
fJTGAJLmhDTe6XgCGwfEshylHYdrYGInxgBgupbTnlE+KuaM9wsbDacGMvx4
28MuYFCKxqSnjuX0bsaYr/rx6Z4rTBh0LLQlpAtbldmmaR5w4JF1/JLEfvSn
xPENTAO2yVE9z6OoVetDhKTIXIAh2BWF37cYu8iNtlfebDlWNhSBLNHPYohg
42GnXpX13EyExVFnxuQzmZ/pK2OKJ1O4U0AXoM3KgvJrCLGxQPpxkkEWPaiG
NAA83AsLn8JAp5JQFNVlHU49YRg0/K2E59is9t/zMLd3ixtbDMKMQz4x2wVo
tilShYNkAtuwGdZbMvl5oRJjLmyWzzyLxy/Gt/+BzPO/EfL5b6ea/2zy+coJ
EUvQeIqF3YFNBIVG1ATcLkdhgNx57TJOtTmjkCyKcwu3RBRBLyXO7oEYJRZT
hTYeU8oBcc4uivoyYMxk+wa6JHKUhv7rtPMXiOgvjVqAcBSXKmr4bJ8P23vl
DW/NgcLf3eSpLhAINnVuXsJegB2EjYBdbmgGkJWIEpTG2/mCgv5CnefAryKf
K5+xzQx19gunGzZ8CqbW3kqI89YkwVhpw4vbLHevMwUVM1y8FvkdzHNJ1KQq
iGrP3ZsOEAtAYF0ygD+h4h506n6hJ9e0CmHWmS8u+CdfH5RPHpZoSgLEhcML
lQhk4t1kcmt2avmOSOIoLMqb88tQsHAPd7KMXcSsQp+4JtMGayt6eUk5rpfw
c/VVGrjjahG6kSVnJyJQxcBCLcvqr/MYcb+YhUT5wfNX7ZrrF/KdUhqLOu7C
XSHhtptJDxOJ2izdsd1kCvfFSndhHQIGv6MwwbJdMKZQULsbqcKyjLndL2fd
uAW8wRP5dfx0GqYZcAIKENaZ+YOJBDMZI6YrfGRvkgFapKD/YZ5/7/hNMc8d
n38WUU8MjlLIMJP1jfH0vzyv1MN6ZUqBh1WfUVixB9oDDrhuD0XOVHPZGN5K
tOm1WT4gBNbdTqf8zk3w/ass8vOFyjwfnVhNymPO2U9WFfu0HqbpBJr98fQE
GPjtw5NnowFQKPQJXSGHbiAushO1GZnAwi+szNb1ld6SwZ2+xA3Ii5z8lPf+
Ipz7Gqi7/FPT3xGYLtWCo0f/UWEocmWZTh/0206GSQSko9eTUGhwDZ7vDU7d
SmVJxduwX7ATSbeuxV3ZBDYAUMH7mWdRSD/qNl7sbTPI5Mn5UTUHdOoZFma+
ErhUYjI0EsAAq5V+Eyl9lnbhc86MHzCYBwoVWoaWiztAxXBk9iubh7Vc+4aV
C0m4klOvhi0J/YwZhlouG1pmaSmzvJRVZBbnccvwMl7cHZ71Wy8PR9/u9B51
XXiOuMIfH578dP4IK8IAp/NH8EGe3x3CZwGGgXKDuwqPo3s7BpQF3VVaUQpL
MtZxlE3XVAMKwV0x89cifgj3QCSbYLpYtuUyewsQcVJhGywgHBGc1hVVPcWN
21hlwFosKP8kWx3FYmSdYvkRg9t/N0H6z/iTxr8y5rnvB0bCISJTajLicYY9
+Hq2Aw+0YziPeu72esoH2yy3JUeL15l+6Ec3wSsEbocDAl9y/29lnhn2HJTv
Bji2pxT2XIsyZclbsTxiQr0fkIYcDGRlXRFmkkbxhvayIWpUxmphHVoC+w5u
eFNEZ+3kGZMpqKfOky2Oh906lMNRPcfKYLk0lGp2ZrkYlvdyG9izXownko1l
A+oIYKAuAvOgt6ES+/E4tAR7SE3JlW8i5W8iLjMUHD8l+eluH/6XC8AZlD+n
Bz/jFeXOvIatvbWWZDKOaFDIKsGyCcPE5lCaCTsF9V4FZsCyrphkwvHXGbqZ
UO+76TSwE9HLqnX3TgaIrsZLlaoiQaYtOEYeFwJ2BiWsOHApU4BFebruDbaf
6EZtplfwm82OFGUgrij1zEcRnNyfUX43+UyeGVcbjrYkc/d2GlPXWGK9CNa7
mNX6IhoZj2yaFmb3vb4T306l6FPLvHFoQiwuuWXF7uk25gfPvYjZWo6yaMCs
2tV4ztKBbwg5kcye6fh5Ih3cWphsM8PFo+TfPFHDhNGkcxqjo/FXJ4Zp79hU
wvVlA1AWq+wuGj0YU+yjOdVPVmqJZCUAUdiysphVxplbohchfBOf1vOHoPWa
IX24lmSfmihwozGMJ0QVO7q0LJuM5ZtVccGMUluOdua0LxYD/2T0xe7uzOvt
Bf1riJF8I96j2oMkm5I0Z1SAHEzaOLhCJN3UQhoDdVSLydTX6bz74o3bOXFL
O9l0Q2MBsVpEL84qEP6CqBYO5dAQEg4DB3iMLxkXCriI2yyRvmCIbDXMugpt
USkUU+qt+ly35Ro8M3InPiZGJiRviXUDsNBs/WA7rA8T0mpMOzX8Vjv4VD04
jgSoTrBbxP1WZedOGqijGFJO3WrvppO9vgy/Axffdth7AuA8H5HhGogCC5s5
Q94rZYABdnJpL+U82emKHqN02aqO0bsdHxUznXVnt5A5qhe2c+nzfutHksyj
btppJe2XR/vAFa/u7eMjePH906fvv/uOJRr8/96+f/f0GeDBdwc8lfbTKGqO
4d1i8ia8gOYNkjxwf+AEQff6QQ4AnHAemXOXSQuHVHSfEQEwTSFOn3ARv5l5
FnC3Oas2JZ5le3IUP8FSgbdS8GJa8KkniPGwH5lYh6XRzb07mSHERjIq/rJO
yTxQm2IUordqDxlSm6hJenFObig86sL8060LKY1Vw3PsVyeHh5X81u1kfcVg
9XuHLf/ygGeTbHUH1cTKigBgS2Qg4XuySjDb25H/qQQ/qh9OHbugsblnSGuL
SGyIUAnIPKRjAIq3FNOXPT/9jTSayFvElzMuN5/BhG+GIsCEFGkRil+2dSwu
AB4U/vdH+1imNw9PXp/wEOHto9OXouPks9EQ77/HZNU0JOT943PgwFOvisf7
rXKXoe8pCA9AIF6B2OBr/VCEimNAJoEh94qb2RUJgHAgOvfxfpeV7FzkUaeB
hc6H5C1R9YI8+YXNrS6wq6AfGIYxWE/czWXYIkqJEvbbTutKAuan2H5OY6Fa
qDKNJ54Pew1WJvdqWxtJTK8nOhwxX1Icj9bg+LBmO7OBfINC9tiwyuIIqXzR
5fCT0ppEBVNsEAkF+Ob8DKbtbjEDmWkY0bpoZZjzazJcBsdel/Bmknu3WOka
SBgrgnHarvk8OSSf+FbQOC5U7qLBeLBJdsn5oqvy95LP7UvmeVKGXYAXz1Iz
S1HsIBhrVsBTWPWCvzivUdNOjblfHvmF9O3bKZpakbbJZpoivI2mB3/FkykF
N85MJctpQOOFdTYFWGI1fndGbV9EUzNDQRxIiZhnpt7s3iG9AIF3V0iRYbPg
s4QE/lHj1fRVaNebMQAGGK8XB9uQeTbKTMZ874yVVdZi5Vm1IErWAPgNU4kX
otPQcb3IAu8hrXCFqiovqPeqBbJGa7GWY/XWY3ulTQh5blnG9bBhcWnDS1KS
K7KWm5NKi0oprIwrrIo456vMs38s5Y+PRejnmGc8hwaozqmVOdWzWRsK0r61
mRqIuES4mVBZzO26lWBTD9HFCXrgXq3w5uzksJJr27YoZC2q00R4HAAtl7se
oX+6lqgvGdAw/RghiitFGenqzycpfRFzHvyCkPyxLOs/tPOfzTx/OE7Cbo0I
LLfKxhk8G/JPyYOMPXCv7CPs04ET75o2pAJitlfeZCGvO2nRedkGoGKP5ktW
OTAegKlNP/HNsKEJG3PqFyMDfxP5jG9jh8EVE/Z0S1TmH8C1yabu5jN4hW1c
TNYaLUtqLiTVVw0mjhUyMLJ3gst3Asvs7jfNEx9gM2bwKSY3/id7LThONLg4
kfxgESpfGrgeQDVgSL9zAfsXxwRDtc4q62ytVdmE2QXKwj71AxThXsHwFb9U
UuOy3+7PMM9+5KHf5wv7vbkSLQr1MtpIvzo+YOBf0tnZTIt6sDGG4qjGZQPi
Mfk8xbwtvxcYzXFYvTPFMmilCINMRrlMddUoyAoMusdauBvQJOzNqkezkxG8
EzNc142DYpbdE0wLjrOoByvXFxmTDKDVuen49eJaK4x3df2kv0u7JnptsBGM
YQOmCo0qLONNh4gRDsKq9WS3+/xgG9JV/CZSxJdPEF2zoSpwhaDg8mF5W5TH
bzoMXmVCZYFNfNybFqyzX+WecY9xpxkyYF864w7yJhwxb073y/T97Szuf43j
NzHPXT8caELqMJQ3DkvdEh3r2Dg+yYJpUDgwZyzMOyGxpOEkY5Ygug+69a1M
siEb8Bog4XgyvMXVhByyA06URWN6UQc+0c9wzpdKox740KK0Bm9uVhV1xZ0H
ndr7ly/Zm/L0+FtRmngkAF59lSU6AUiKwkPEIy6Vff1MGxdTg2sW0j3REgg+
Bftf/2rm+RNcd/VFP8EEurcmOhtuJZJsL8gWw3ZBhDRsMWAyuSsaZ8PdYx+u
NYZ15YOR4rxSXlThC7D0/W1SHIyI3khhg/eTCb+uyHGz9PJ4/8XRaJRLM8/U
sOvzqt+I8LJMUA2AmaHOn2megFSZUXBJbNKtm7lAJC9KbXiiec1hPT/cSMLX
K0pKISL7hXqwGYF7D6v5vCJnwstV06jdMCqW8Wy3D38BUwf34flogAmHesSL
r9mA7NG7J0+4Ij+8YVXYF9+9e3z+6vjw9fHhSavybDTAetViUfgpfiWxsqoB
iR27Jfwca66G1fKskv1meWc9dZDbLM0q3g3ifFbanJAu0/SAZ+A7uLIJVeOF
DT+6yZsUyebLsINxP/yPwZCsayr3r7TZ+ts50n/GnzF+N/M8vM6wz1bIgFMp
TtZYc7gNdSeLTE/Lr9caG6XT3VXbP6Suzass+3NRa4tJlwHp4kxcGnf9+wtp
50+YZ0Y+i7EbFCn5GAt6f1bpLWjYDizwG5AH0yzE0ZuI9HibcbhgbSkKRw9v
Zll11sK1GQYjYpg7KZbTx34/9arMoa5mD2osv8NqXclYQZLzizJQCpTGKJuu
RjT48myabDtlUYiAwQaizgAwG7b/fbfSCGv+GSX5kAhTZaHl4PJDRRyUNmEd
2sum3yruZ5lnlnGGA4vr5z2yp57hCvAGNcvO7+vkEFjSc8lohPVhPM6uTKJf
Gw/N4fDG40Q4mlWf02pT4govTAwpBfi8mCLbuVcuMNl/gutLbQn/6wbPK6G6
2ZPRsDqrNrlcEUPeZ3VljUn6flWHFWv4u5hnv5hGD8Z0iVjovggKZUFRhgpb
4z56IujXLyjhzaqsoMIOgAzH9Rl4T8Q/U6pXBGSaovPe0SxWX1mlqLOwybSo
tSKaA0IAvBWrOUN6uQs1i43AZoW6p5iezlhxfCF1L5tAkb2Bz87aUBa9flck
HbNarCUMk+Dwgaubmgmjf1jIVqfHtSkaM/AjBFsonNNxbWfGY5vYbiQ2ixvN
VbO2qA+SyZYcLQEhzGmkiSZZn9ObY223rXSqtxTtTXx0PPFzrScD46j4rzHP
PdFzijQ7JErkjTItUYr6cLchOD0gh+Fasr8Wq4f1omjkBORM0V1PYCOw5EKO
0f7ZiWUGu+LeI0Zllunz3QSPrs632iw8AofLiY99E/+8GJMvSpGIY/G4q5nU
OWsxfx8dlBj7wayfK2HPTdErWUSea42w6MPI+D0bYlyb8GPOpfoFsqoLchI7
ha3Pb8VhUgFC4HO5hpWflCDbx6KDA9YOkCkbjjQtE+88quXyq8pdgTpO29Xm
moWBve8XXrhbIvm8oUe66di3O73XJ4ePt7zvj/bwp518uhE38fqpCHh+utN7
2K2ztsbDk/cvX11lnt8/e/rjyRFLdhyMHnUbfo0O3PJwMwlI0DTM7BzD/7aS
LEnNtNN4rDyj+OcdEN1xRCvJZ+qB/loCu8DvXNn5fbSzOMJuLTHchfESBgvp
uCG2dWbDGtWq+9EF2AJwi0wGwFem5EqQJRfKvtKYkOqLej8Zb0hGcZZBvPe9
iqgZokFOzvotvIK/5hfk7PRydjZyZyHCuII76cNajp5RLv1ktweVlQtGClNy
blLKTUdO3erLe/s1WceLvdg4O4Ph94zqMWofk88VEUPFDMS4A/nhCeCSwfKP
/gh84EWr8+pxrbhfyXqOXVxSTuplvDk7uwy/GwIgSiDWsSLeLQeXfdZzAfPY
W7bX+v5wjx0nR4N352c/nh5j7c6HHgY8OLb5uH/8/sd3r88fHVVz+JIHnfrL
o7179eJ2Lo2PQxj8Apt+10IICd7DA5FcOqfJW9nUUS1fNw3AQriHMCvkkwuZ
UlhxBQ+JqauFtIIIKc99swzATHm2bWwx8robqUE80YgYtbDmY2BSFosGzxE+
jg32+Y2GOOrCZJ526j8+PPVDsoHYm2q0a/OoqyKObGqiTlR5QmZsg8E4lsa8
xlZrVziEr9XVLEMnO86RSOtmQV0ylo5PfsIDqkf0q+VDgcaBeCHtmEaKkGxA
ebpadMc3Z8nEQSHLnNObLNlN6sbk0adfkOcPDHv+RfL55ynoTwto+LMdZtYq
w4wBLWKUTOgrRjzSTjGQjxHOIlCWmm3RIKt804GDuZNKbcUTUMhdizW0XVgr
1eqKM2J8sMPm9Q5cOehtwn74ldNCTwqCuqva7YtKGiQxYMVu2JhGT6SHMATI
sKEt/Qb3V+kyV6TZwuT5hSIhGP5xm1+YHbqxsqTVl3QsLlBfCTYxaj27O3z/
6s2b87P94gbbC16ptuGvrCtcYKw+vgfbAeLav510HQtwqG5FtzZY/tS1rOqK
jsUFFmrftHMzEgYdw7Can2YPSp92Ho+LItKfMM+iyDMR6Se0WGEiwpMLkSAD
LQQsh019PmjhYvrpOAwTD8umeAC6e5vnHXRCo1YpxLwAV2PPRNjlu7kMhBAK
bZBO4nug5fA6D+Jjjp+5xoSgBd0vvcv2Cjw6Z6pde+qz1pB/Dtf6D+38VzDP
or8bZUmUXIMWZc2iW0l65Z/mDjC1HHaTeYg3ie4AA1i2KM7ecPUZtfGlrA2h
n6kKiFcBX/ET/2rmuSZ4bCauijQxGo64U1cNOCwkG2NxbDRI766Ifa2bPOFl
iVS26FVbmgmjMLyV5KlTjEl8QFy5a5HLauo8ZwTSU8ziJfkMJLag/TzzTFfL
clhgSreq8xq10zpP8wEGoHMedmqPui4M7sNuw08/9z0atjNIJmtzqs9sf/Gb
P2Z+xlDzQ7VVkZCFcem0Yh33y9mRyPoh11TMPPCqTIKLOUVx+HX15Ms/Fge8
YRWOSR6KbaVElYxMCmbuoMITunGhZpPJgA2FWCg/JWG24VFWJK2qsV2O34Mb
N1K8JkE97mRSLHuFGfYbKF+/Ui38cgDTQt/qLNX4eLsD1NowovxnmgfobPh7
04YuIvCeGpNg9ZDGdicLytZ6EjCjuRotLMhN08Rk3s1nCrICDc8SuGLdmdF8
OzlIJXmmuURw1dEtvz4JLnh7PcXqgv8U3PiTaefeVb0q2rrRfEPzwEtyYg1m
2kZhnUcZ1myB6YcIYWu7clRUkmcMG6N3ZGP7dorUa1AuL6i0vIWM3xOE+CE4
ThVsXNTq+Sr5fP0q80woCImCmGG/vDwcvXn04Lu9bRGJl+vfjvdExbZhMuE3
eenDNV5mFEpTjmLPsqS8TkIGesZ3nOu/pc/g18Y4YQQ6c05twO+GnxuP928l
sCW9KDuzw1vZvc3ycZiTZpRV6XYzaXfFzE0s15Z1gBngHLgAPJpnGx2nElZZ
PJDlTdhfhj2IRZ15v3oqVD1moDIhfdIgtSKKb3yuf0oBCaAdWwxgnr25bzrY
jLnrPK5iXWg2mEjCQS5IzMN9++QxXImiqtxZkkqqmluWs0uRYUb4g8L9hOPw
4mCE2W4lbfLhB6O3D0/gj9C7/O67cbOhd8K7fP787cNT/AkqFG/juUAuhS+H
g1k2dHwtfm5HpJQC0hBQBaXGMoPE/ARtthOKxcbRDkGW3AQyZyUNmVVfIFpM
BhckTHtOAyj14+1ZgcpiI8t2JNoXFZ4vKZ2/nSP9Z/wZ4/fHPJPAVPtrCcg2
Nl0bHlDEYIC9FMXzxqK+fSsJ74b0woTPoEr+FmOSFLTQogHI4RtxP7f6kg3+
azjnrzLPAXl3Uu5Nq+ytOaPiZncmpHFzuoDkzajuMjsPtkXcF5y44VoSAJJH
h1Os4Ac901w1XYNV3L010q3Yud4tx2eee7fj0ANVy4DT1EswCBwuCbPCHZuF
r0X5BR7lMypMqgbHOWWMiklQd9Umx2WUGDO8FmPX1whLCOLjPJQMGZ0l45eZ
Z0G6srzGMpMaWDpDjnqOPSpkvj8+eH6wfbfIspzkXiL80yDJ7lo9oBof1s6q
TXa/NUk1SExar18U/8cXspmdxcio0owyTLDqSHVWYdRQBG6UVV8gGQUg2hDt
zFikAlMqakKyLFXIYElkiWFp3Rn19zHP2wGJpwOq7S5GGQshqAaW1MBiLUW7
QYVhz06so1hw2HkuzDZ/UuubSDssasSpFhCa36vRU/gRlgSRzXZQFA2Y1QjC
YaxZUpssdFM47O6CBje/rZgsLrHIeAMe4WmMbWCvjRXWyeQ8Tyl4f03EbDQj
0e1EkhECSQZYugZxGpZe9PblkSirrun2k50uywCarNHBwJgp9rK8Wl2TBjQs
Skuts8la5yZrSfVhwcXFN0Jaa9mAtEBc/YhuNhMJGywYclHle/B15vkD//x1
QepeF1ldMnP0ePykWvV5ERgpiJ32chTIk/2CTSZfM8JHNU/q5QftOvCquzqu
eegnL++kU3RVVk02L9hMeyJ3EiDZP2iGkOO+IHIlPyQGu0NwgNA/sL87IuCz
oUYbehToHZ4a/A78rjutuhf17i69s/oEWVBK3Q0yjYzJXDHrn1Q7FM3fuViT
Sp2R/Pz1rUyStRpUk4FzkxKLLSQYieqaVn5JBibf2kzeE+Ww8poCe33qVeH7
ZHUJe5wdkLOps37rUbeRi8plW8c/n4+GJ63yWc8FMBhmU1XHwGXjDc/vshUp
Hl+fHLHaxtOn7EnnV9t49frt+SNWaTgcMaPkTmq3kPGrx3eTbB6dC0lVVcd0
HVXzTNSN8WwL7kBFuB5EgLivSVEP3GICAmvpSFHWbxF1+fyCG7+VfIYYuHOE
STubKSil1nK0J7LnWisW1Fd7xWyIKAWoNew+zAkUQnUiQlEnryvV5hQfDwOa
wmUb3mLMQFnR6hrrZowKaaCs+qrBXoE37HJEyYfljbklSA6LWm+mWK2iUxsK
hMbKrnDWVoxno8H5wCsvMRAaELoVtdjqjn0DE3DWmFsXkK4wzyLoWovCn33U
b/HU3rIrk/Q9K1dcUcheQzIOK4z2admc29NWFZs3Nyd14nZ7jS1UjuqFoqnW
YtFTrwbh9FcZKA6r/Pr+MSAcnrw9e/Dj6TH++f7x+fPdPkMOLo4V/Opw+CvG
053esVvGF7462n99coib9TP4dvJsKwmZgUuYNxQYF0jL/Valqhl3wtLuRtpv
QYgLY/nraZaG8wtol6YU6KVTtwo9Dw0PbL+dTJKbzW2y3RskQbP8Oo07G+lW
eJzQ/RFiD7AuKHSgKLiR2Mmm2cxujUdOXHHRvxvK7UMlk4BUn1Hrcyq7xvAE
7UO19q+Rz0VRBLgnysLzZOpWnEc/omUqJnP3Ds9tIdgfOEORk0gGQzOxVQGG
q8s6vHU3ynwErDWMEV6HIWAhlG0Pd1efUX5rhuZXR+A3k89XKeiv/ZXzPM28
J0ZI0tzzaOn53rbIhYm3RBYtA5mWeUDgCroJ61KfZGeN3g1n6CR2kilRvVBQ
8SGd/XpukIhm9cVFhg/R4oQ1TzSD5jlR1KY5C+msigbXb1ZzJyRX1OGHpcOm
ZqdCvtmGZWz4XPdn80ZvdI6x7p6oPrElCJmdTVYj3FpP0nUKRArXWcK9ElKH
6cTTveEPp8f36nlmlExdIYEvVjY/EcHrbds63/Lenj3CnhpuspMXj4cSMb9X
Dsu65tLYHZBq6Ja6btyZjsC47OU3ymFFEDifMc8fk8/4FQBR1s1Y0D4in6Gg
5lTWJEnEsMXenJ+9e/bs3ePH779/BT+OyA3+4CzT0vkpwaWT44rCbZfgJPod
MGmVFKOp03Xdy5GlYe/XFQO3jB3nV6Bie6NlAxDaW7V9IpqNnGTri0cVfyrp
+t8y4fynMs/0xOdVmDm6/4COTECQAUT7N2Isn/5ZWTDGFTBWgVb7rkiPYhGJ
m46foeySVf46r4LtOfGZ6r7kW349+UzKSGad/BtkNfHYjloiESMOicUWhtiL
6qws+A8rDBjWT8fh1BSXFGx5P3Gvl4oPN5KjXLp3Kw67XAvrxckxhQurBC9m
r7CxtZYsT9NToFmJxz6JTP7UWMCOLGh+K2oMbEPgn+ejAZODRAnT74/2frjH
7r3fbncPKpv+oTP2GubNz136Iu386a8Ex6HOpQ+0syQ00kW4FNyxFVYwg4Vq
Guylfj5ov3v+/NXpMa6KTQanCUU+OvYS+icvDseLcwomCqqMx6NpMucsO7DJ
QvGwbngDtEcuGKkuaXvFTSw98HMvFevdivnRGlXhJ8JW9qIOu3ot039hc4pF
4/NwUHde65mUHFZyTsW3hMkmSwaHRcS9sCCSbkLXlX08Jmod4AthOxpK9KiS
x1+hVFmOvrzJttqJeHFZKUWU7XSSZRnWE+KgzYTvxoiXBW13Pd0MGX7l3r4T
d6eVq3Dxb6dz/ysav4N5viSfRbMVuQN4v2S40CQrLCwM6RquJxuiDqqon+PB
unnCBvXXElgvVlDJZmB2sSX9rByWN1zQRKkNgev89tyz6q9lnllwQxLdeaL9
VAIyD28FCg0CD6Xhd/GjD6gzMRYGke2zkwlWU1SjpTDrDkEFMcroJg9HfAn/
Gea5+Ym6I1b54AOOj+fE6+2QAc3Tj8Xrs1pVFGoGpvI5cKip3DcRWHY8YVv5
ahYKBGon/02kCjWeTbPiRCGzs5Fq3bDogW6m4WuImqhxv9Ylphc6kxcsR3Hv
LMUvJvBqrmXt+lfxcMl3SVQiYagItqNNxkUmhVSNMMcK+ApwqLceg7/8ZHew
X9gsSEo2LGXDkc1wpBY1nu0OsLjtpP2gU3/MCs+55poFGAO34u3DkydbnR+O
D5lR+/2VuCY8efnq/ePHL0ZDOB1+2cAnO939avawmssris9ms8npGtE+M0yX
NagmHr2txcsiCK2t27B0PiiFN4GpwDsBKVm423I6QVG6M8jCvAA5w1SSlFrE
9Oa11rzekqz2YtSb1/vTyj/VNv4dj9/JPIumk6ztfIP9BAGHyBnCA5pRj4q5
u5uZumjyxabJzFuXGMk5q/rbqgQ/QrOY/QTccl2CU8zIQ8v+k5jnn6Gdvxbz
jDG6zshnTlFA3gmMyfbegt6/KVpwLujtGUVUkEjAU2D8T0jHXbiKiX1UDqs1
WQcG8+J2O8YDps4tpxVnqvuJW94VudgHok8xuTKDRBnmsDynwLnzG6SyWx+8
GM3aSiQxw6xaL5qh45XGlFK/FmmL3sGwFPWwwbhcXFJEROpO/IqEJpH01BEs
epOcISvlejGmscAHfHVyBB3Lgv+3EkWRp+wqUaYq33Qug8RqAMm6edqpje6w
YuoF8yx1dEukfdld0U+KPTJuJSvzKkuMTkilbyI1+MURdgeg1RBpwnCWmZuP
ASdaikIMRmzWE/PmtGHw93Qb3PJ75M2qnXkdCo0FPUQXP8/vssoUY1Hj13bc
GcWbVfs6g09ak3JzItLwW7JGRf3nWY35zgtaz44xChqefiTql9RrL7PlnIic
ZNJxi6FKcnOGmWtsqwQXfsloTbN5EOYWmpah6aoJ880T21SyEdYxFaVrTGer
hRjDAIAH77U8o9Tm1fYK28f4kZZ+PVVcLePno7a7wrx1aHVmWwcuSA+2vGSh
fk8Ec+KH8BGWAog5B4XsMMmQBnYEC5OgwGw0F9hJqjPJMGwWFfkl2vnnyOeA
1J3X2xGzCTBjkjmHkWUFGJiYWa2B+ZxhmWgmRDuM8+k4op8Um+DU2ICvuFme
Z9Hv43qRHkoyhhdfHo12soxRYWGETMo1yQz7ARW0a7NKZVbxy9WWp5Q2uyqk
WT/TYYYF/lmYlvsJslV+T8OWHK1f+5QhGZ90Y/ZUE5992Gvg13FhjbkPcURN
0VINS1kVxwTYj/V5tnWAtS2GWCAUqIyYXDXKEXV3Iz3azGxML+EG79ULLG2a
TuZkeSTcCuCrnVw6q0i1mwZM9sNOHe4JNEDOkDPKctHSGmsmK/oOvUeDVvmG
fpchsqyuAFTml9saH0w/9TsMPn8rImYBKjCNfnAs4MF+JQvntKLrG6Glpmne
qwHUbfYTscqyxr7zxc3mMuukVX0ycILqxbOxT2OMhVg2gBYAI7u2A4vfhmzM
qJ9j2p9HxV3ok0Xm9GGneJrlKRawHNyQng2IEmejbVG1Hh7No477wK3V2DHE
LzGn48Kakeh+aXOQZsculpQsbuzcSQPdsaRzLcdiC1YUkgAdhdmDhBRl5U6Y
xc1O3FLTNhs3TIAfloRdc0RbH6mwIPuS4wcM5AIMFdhOs9xTK2pBm/kdtD/U
jYRsrJgQp+8ORu9fvIDShj9Vn1cvoxF4hDqt+Cmo+CoIDEtcVnNYYshAdnp5
tJlmq5QMO/plFZkxye0KLq93m8Htj4ceFvT7w70fjg/YVNot4cVXxwes9nx+
9hPg3yX2e/X61eEeFvqVOHTAcj/Z7j7qNvDcr/n86miPqXPV3PmQglQwyTyL
3y02zGhuScaksehxOn6vWRyuJXPXJdhZUd+AJB5m9fXp0cN2vbkSZULKdRY9
gIfLxriZFBQ+zwRvsu8VuZGPT23GI8iCw9wgSzo5RotZA+zsMEvXZjuZYhGh
Txo4Bn4ZaV/S+6yk7cRY98OwBqkEdAsmnAcoOcZrwa8H0q5FdN6UiFO9JAmL
ARl+AdSg3yaSLXLiMXhMWDKYUeB2GGVMHQ9VPwvn/p3kc1DMxu8ln79OO0ue
yMHBfHJXsmcNI7p/enzOFpnCzWfjP4eVgRsi/Lju52tMcqqxoYrXIoVvIhDp
4VoCKILHrwrTYVzRupEJ0VqUXe/hYUUM0cKAR8bYsG2ZuUI061OsydMRZ9xM
wQZUm1XZQ2denIH69Zw/c/HcaWWIn4PZivJcD6q4E7crslYMyfkZill1USuH
FFKykzJjYJgdn9naSPI4LyCN1/RKyHFeZEOwjk27+vKYXdcBTqBpG3oUeuDZ
3eGDbt2nuNlNXoRPYxczClrV/cIXcBgZf3iVAvqIeZawEWALiuz9F8N+yYs0
9nHAc0AiOS+CKh/1GowO+u47Pzv1yW4PV9KOQuxVv/w7vNQKG18q4/LRQVFc
eprxjbkpqRhWMMqy2nbY9ATWAdiPwQZxgiXYL1ag0nlECxP2sN9gSEPgy6We
/2ze9b9x2vnPIJ/HiQyAu9hoNoO7BIqTXEGDfLFTp18crLNiEeDprE/lmZYo
z8s8hdbPM8+/Jt7v1zLPAEKkZdwlGghXtAOGiLKax5JRCsqDtbh3094T7ZVh
AUfFTD8Zq2vGQTnXT42zzgF7AGlgsLaFjYazw7MekQ4JJQ99jo8DUAENwqqy
YcecWpqQPj+UHIciTyrVBdUV1eTw/bCnr0+OsPexN386P3tz9uDt+SMe5r56
jdcBk4YbycEtdpEuXrTS+0XmuTgRIZq96YjexxcmZlqGO4PlqC3p/u6GQsNl
QwlAv8G+vDzae//mPdwo/FxhnhoPzuBHx14Xo7yglBaUqqwD2cJdgho8G7R8
1EedaTv4LQwY5YZibANhFjK99ThcM9wsc2YZnxz1wYngnyOwFFDUe/nN1nK0
fjXmWWBdOAiinyALgI/7rcBqR21Ad1jJs0F7r7iJu/Cr+PKMGM6LzjK/UFBA
vPcqBSio/LRcXVJdw2pZ1t1chpWfw6Ki/qxchi8fJMYoTdLU4rfgKcOfYoro
quiU9Ovw5D/jX0M7f8o8X4y2n810Xd5J8dCTCemJmN+2/tStAlVin2LrQao9
tiBkpG5zxchNkHcF4i1ci5T8vD8RPViZkODYNkWRKDiVtWuR+mfBz/UvMM8M
g+/cZOoWq+LcYRWXLdGKBQ4L1AXEDDaaVfiKG7geplFkGYvC/lkW02NxtX4o
V+0iZ/OXkzjYRlljSfwp5fIVHq/Pa00fw0wrgwTRVMew+/E4fHCoCOCBs35r
l7VhDdw+eyPK5s6tVNd0AAzgSbH1VYoMCXYuCxAVuTfZlFMzADZw2WwfvKBh
I8CXJ9UsAsX9CMxPaOcv42HB/2C34ocwV4ydXmd8SEOLEsnMSHvZzMNuY7jJ
nNbTThWgiM0vwlJOJDy2bKugKLUoK/Ldb1eBr6CX8ObSDa2XiftNZ5i3NfTe
PX785uEpNeel9/HTe2jRN6cnb09Pno8GUEdQDnBADmu5jZXlmh09bdd2Cxl4
lOy6OC/fmYyMMum93EZbtL3gLQdEgJyYXi9s4K8s2SqbPcdhxMKs2gkxPHIQ
YPBbL2z0rVhnVusEZAZzSqYnouNIuczrvQV9K/j3c6T/jD9j/F7mWWKpW1l0
olTYkA5CxZ0Cu3bDYdinSPDxrV4NEih6dzLfdtE4KucFIZAUaF/e3Ug/2ekC
h3/CCf/ZnPPntPNe4AP5PPKHX/M5bAwmlSFumc2jEzy6CirtMBVva0GHq1W/
FuloMNMpqvR4vCiyqFhWNJ0sK9ogzRCdpmNVDQM6BAoKVr5hmdjUPHnUo6N8
ZhBntUBgm7KIsqOeh9W27LvFDUYkmuRy8bxrCfoX+hyeJlxO+owOI43DOtPr
guMOwl/nnEWRZ8busuYwkx1gC0wbkMwHP0e1PHv9ZFkaFKCo/f+z9+ZfbVxZ
tPD//8OXsDCTAIEoFVUlakCWhIQskITmeRYgJmMMHokTO4PjxO18e58rMB7j
pNOd9/plrVqOg0FU3br3nH2mvW0WrJtBpyE9n02fpegIarMGHvDF6R7eXd1n
Nq4cAZaiISpUJ+UMc4zStHawnTxIJOnXfKStrsJPTQQb06SeaE0b+9HELlD0
gtX2h9hPFYs8HrSAathfobl7U39YalBpFO5NUOavoznYit1VEl+0JrhuPZFS
gn2rTxutOfJpsH9s1W3Nmb2AjfvHHXJNbPKBUHQAjsZndajOEG1pNtPjAbvy
tYbAfC8WH7cQbMQai6HqhNZYIsUlzGzvNkN4tjdPjyEc66rCcokwH1B2LxrD
YSnPGsDtTdOB3cZKsuP6doS6k8LCwRqNpLlYjN6IKGnsu+XMWbXQ8I9nM3nK
yNOrN3wWIveOG24shHAkSaxteSTfnuUzskgRo0ZDB0dVd5XwBMx7b86E/f+S
zPPHk89C1tQKOggxHnar2EKsILgcyWwuWnVA9wWzZTjktXM5189MbDHdWSc3
VGXRrAdCKrTH7e0lE1gHXKeFTC8chgeHw4VXrZt2cdlgUt1hs3T+a8FC4yHo
oKTIZAI0EScB7IRWW2avL44V/CClFXW3o3tKB/lmwMWGPb/dXQ8jUHrz7TNs
uZbttjW7ceMbcEB42xpzAlVGH3pdI8/eYSolGRKKILPDJxHrRFi1qQGqzQfr
tk0WrHqxFfZ2AkFqQ2cSj/v1VszLrerAJBQjvhPBVx50KvmQXnKti3b5Ya92
0So9G/XqMaedwKdlvj0YINb47nD44mgPfh8B1M/37wIM/Hx++suDc/z5w+nR
88PdZ/s9oAv8imbMy+rB5rp7XMAiZyT9zu7T6pKFLcoZBJHjYWfv19TpOK+X
DrdTOGUwYgOHLw6BDIlk/VLSWvX6Up/6kjDhinBD7wtjfBcbfpbU5SzihPiu
2ahgOlUfMVh1hokpfF1mJYKNOaPnRtgSgJ9dDw9Fy+ZBqyIxFDPJ3Qhbsu/X
iw/bJCxi/JWKdmLhvKYDaOV143Gvcb9WKASNshkqa1Y5QCrFnGSesYtgewHM
4JLy7LTUERZh5zRWOMxevjHshrvCed9LxH86P/3tu+/wIhQ9RXVmnJ0GFGyy
QE/tPOyx/K0gDimsOkmHHA8xZnZ2RfGb3a8XYOEzmiY6j5T8aG54DztVvMrD
AtsyEV3+BByY5a5AiAoAedGpPu5U3wiV9+vvnr84Zt/m8+O950d7eMuvHl68
efbNy/NT7ITXTx4BLuLHH/XqiEDxUficTiL8pN84yqeoNhjUiwbWpN5wnV48
cl+4m/K3NESFCPYR7Sq67+GdOJkNJoKwP2W8lyULkWzDtIWhLtamH/dqc5xA
bEx9JA37tqcOb80TQeqgw6apFbsmIxuN6fdjkA+RdvUTmeeS0H6WZphyxD7B
IjdWbQS2StCQL+jV68u9Dg5sXmjei9N68cbsdmXe7NAsc8Li8bBFVmHKtZPI
heVCIRhn/8+CdVN76/NZms9knluwz6tue978C5PP7HVcsA62WJhm0VCzReE0
cST75zCfYlPcGqmN6FNCYYR+AABwssxQrXnYzDWZbK3OC7+KjKz2wpG9zTjM
rGLo6kl02fLIidGXoQ9KCa+xn7khmh3sbNyII7qExRjGWEHGcS4LPQ48HZNR
8xaX0R9qvJvlYLUCxn/OkFbqcNNiLf4wk8Kuq2qhqmYhZIN5ZJTnN1jsyPJx
OuvhKtwB87QM/d7huxDqFVhgnK9RmtUE8s0CWS1Ta/K0mFM80i3XO0wnf3nC
MApRVT8R2Rfm89NafhfeYYmDD+9zbqjk8HQQa4IP6ZHDOYwgt6YRWbGzUTqZ
SzJASl7TWg6W4fnBAJ8Pc01xAWFuHHPAXu1ANnNK8hz7k+tp2MVFQ6S0I+wD
R1Dvea2ot7udoDVLRNkuGGYXAQwOXb9Gsft9LrjXWbDe0Xz8b2We//IU9N+e
Rv7bM8/dKwb1XtDl0Bzg/Seyze+1PTMel97C1ryFEwqTSOsqxHcftU5/ceb5
WmRwIlifNYAWyFYxrR+lyTBW85tFqWLjyMBn/evZN09326OdZDvCsizwfzvs
jXZotX68d/Tbqze//fjjU9jkRBQnFwAVdglnpGU6MtRGOeym5Qw3opw2mmOR
tzT5QfJZiJphPRT3O+wY7CF86L8unzJtgl/x/fdkK33x4rdfmUx5ffkUzhdn
rXs7DB/HJt5l+2bPc/WDzE9FfgWc2m48jkfA8QfsLPPZo6eFLItTOMKWm5ee
Z1oSCgjquZlg23FfPj7nM4oqLjxUReMUWEO3FQnY22sqSIMMO7bFmUdgHgRc
iIJfPb4AhMBz1VdCQLOkwU/Eh5sx8m9Ewrtb8Ue92uunj85b5V5UYoTJMYAB
zgc44SzPvHU9u/f2hUrDDHkRpwyYF0QHtMxBuzLNWVTsKCBAMh/qrqICqMqy
H95JPurX6Dc3xlxJxQUDNw/AA/wgwsrpu4XMUYbsHzCYpBx0w3sbCSBk6m5g
k8+aZILSKIVD6fZ3IeUHjG1/f5r3/8DrL8k8q/IljEM/JCxbS+yg299iG0bN
Z3IMSndIXai77EMupcm7YrlKtgMQAt8vHDWsaDOwFcL2nqjGN5asxqJFjz/5
Trb5/cwzMPa0QdGZWLQlUZs6vIjdhE2CqnzNNVKCALvin44B/rdT1IZIxHA0
DnY4WEcimiSp/DoyoMqulanfG98QvjLEgwd3kiLJytHsbhAxXZyz23PUt2Im
ec3bF+YrtpMFKIrattzhJkX06osWa1WwAFKOISPfmifGLQqvvZ9O3C1ncR7v
VjJK0JwJE8PhPIJKIH8s1fz7mWeRM4axQmD4UApniOaYGYhGszMrsCqIo2Fv
96S54ruDATufE9HiipH1B4tBg307uVTVtTsbDA2EkrFV8MyDHPsuLnfJoYHA
hGTOF/desanpOUmeX48nan97/hyBBhVnJGxhOayURhTTjrN3+ggBbILDLKyk
+41miOzcQI9V2rrUXixRU1LXMEpfaQM7fNGq7DoRJlLmx3qX7RW3J42Fe5P6
Lmk3DDZDLttdK4wdCDNCFoXbEapiBZzRP5nn/9HrT7NtUAkOYVfA6fhtts1r
DkB43410NGdMGIiTPm3APuzFGCmo+SB4qNNyRkkyAZBXlkz8BcjktJL9aHL4
P5FwfifnPEVhwf0pA3/uzpmH08bbtPMtNjwP58z2stPz23uzpCNu+YWhYpk5
xv31WEPgH5t45ymsvJviVFp+UuuIdQK0yPv1g3QSz4tTCSuaXeIgfFmzGiGy
95PUdNHghPgtGeCSCqPST+9Y3iiVZEgSF2mkNRf/C/DZnNAIHQMcrSLro4y+
tlfJcsC3IGxan/Ri0gw8YI4l0dTdxmKoH6ZaEF4cgVk8SlXEXKqfiHYkCgPK
YrltM0HCgRlDsfpTmCzkUTFtv8suhYngdfERQShfN7BHOgXz22XHb7gbCt/N
Z1hI3UiwccIfqvvMnhvBbTREF68nk4ZkoHIZ8PYBQQGwcZ8+c/8Ptj1fC1/i
Gkzrfe5Psl7At3ZND2gZN8PiZjS6F+G0IDwg2/MWLNb37yRamlMnQiM8I3e3
pOXV+Fh7ldLAbE8yXdw2HqQCKBVl81gtEGrJnCxx7JwxjJNdU3oM4l3bk5E9
ZkjaIXe0laQOoGBXrK1q/Mh9vVJeNBUPdjfCwT1c+NVUBJvQ+uSRy1BdWhw9
9cKSCQ5aKtrt62X3W+zALGfhRutfaw3xyxx495m4parfbFkuIEdrVZrAl9ib
ivUfTH1RzvmTyWfRH8QHwicCoyoZqZ7sKKF04HB9c9UZJuLk9pwxcGQOtpN4
Uix48WsNYUVJxewzemXRxGpwEFv64vCwD7oVONaOFx5rRU0xA1BeMHEVVfJZ
MhIA51jJ5yd7AC25r0naM5SOvu56WHQGwwfpVMtvvc92OK3jlnAq4YJJWZBN
Aca/U0OfCHYC9lCa9zjRGaV+KG7vcad+lErxPid4P2eVHFttd1I44yVpacNb
OCpwahKvOOvXcOSVnsv9eqEV8dIBrR52yIRQziBcqq7b2dUgMDyAwUWrjD/L
4dBwO/7dwfDF4e5hIYUvUmyuUyHT7+EQd4u/XO51AScuWiX8lmE60U2GaxG7
lwQY2D4tZck6spOqWTZFwbLbuMmSKL4Vv9JgfgeUF2GscZLLdDS3Kgin5re6
UkPpOOxcbQVd9jzfCBO+FB5PjgmfO0G3I1yviusG4AQGp4JjFWALNHVwYlFq
1U2Qugfx3e5mHG9fBTgnxQwOZn5Bx2JmF7WdpWBe03c0PW/o+FfgUsR02BhY
mdZtL7ustSPeaS1HTm/ErWsOdktuLljVrbNyHpgHa7u/TSIXnJ36cojW9UrD
6J0eJ5hxg9Trzw4H3x3v4pRhe1Qm32pzAwoiNNtPJmB1ebcLRlm0rXHJUC01
B+shu2Hb581iY90tmgbucwSk16lUIva9av7bUZ9ztbnk88NdvNOnw/ZgmzPI
eJDLYZsZ6dOjN4jcBw2R/8jdq+Xwor8VeUGZiXuGkPP104c/nZ/+fH76bNTD
/gHm3MsmjkvbilAXv7dgGADt2Gxtz0MgT5YVw8Z2Lc6RNhlglTq2kswHgOdS
zNJe4aGwb9kkvJ3gMO8Gx3IBAomuYS4+HAMfM5EGWz6TXkkUshC9tpfthriD
m7rnn8k8l2UWRnGYvFUOvVJ04pyj3xrIPIji0YWJ/v7e0W8//IDHx9aq+E1+
cSN+zRGKz6nLj1DMHRZ4IwE7jM8kufGqS84lbIM5Q5gi3jEIf7JvUAjhYfF2
Y/HmX9T5rPqoWRc2ZZRplfwhzOF4npoEUdKWijQGW7o2x4IOnhcHB3as64Sx
GqPN5EEmWdNIaN+7HakGrLpuN0JO53a4F2eJGddwK8bMZzK6u5XoRlmtAw7B
3oZPh7/gkELIg9ErSx/vKJ7AboRRhQFvI1gLOor0FW6xNWu+EwDC6Xyttani
yrFTfALzKltU9oTVwvmlLEWnwsyM4+GWSJ+YjMMI1HSbYeZmAr7gfbJlmXMn
hbWq85o2cEvZb+5MchS9sx5mV7OY33vl/LdHuzhNiFV3t6UZ8iH5bRTZu0oT
Fecp6QWfqzqf81MaUGhfquRY3rNa/qJdwZNia+ExlaAYFQQSpFU8KrB0yPiX
w0ce9W19LB9faxGqLDSTz1NU/WDL1ma8btqcT09wKpaErtXsvVpeuQmKE20n
EHrTW9keti7QBUfgATInPy4v+N/MPP/pXPTfnjf+PzDz3FWZ5DkDEVP7XVbn
zyafgy25EGUoylNAaIX9vuTH/2jy+TOD8zXBxoo1EWYWoVx1Ziy3AUMEuAu/
A7DKHNG2oj6zVfXnYacCn8Wcxg8/PD8csq13Q7r4YtH8dLC0yKIzrYQQoo5n
9AJ2BdEi7M9HGp45rdZfj5C+ZjOm3N/LsxOOjT979uvji58fnMFXcjDhu+ff
n47u1XNsipBRgtNyDqeyOmNUbow7Vd/NP6tfcUhSlKxqeKguWsCZ8PVPhkwp
46HKfkNEA4N5YW+W5HMQR/i8WVLeHMCjYdPeklPOcgvSwHw9bYFwj9InifhJ
gTNxNS0E20s4scVOBqBf+GXYEDjugztkt6BIotj/k2L66bCFH0SI1LW88VNM
siigBjPHMdqHL3GS9AgUCDBdMiWus85emx2r0FYV1JmSV6wKDVPs0sGTsgq2
RZE1PAXuB74YZuoknwa8VHr0+3cSh4BthfQomdwbh/kWgh1sACoMwhfMhzrs
aQz2380zv/07wNW81fOH/kk+/5uZ549a4M6kXGqWaortYc0ZhoeNRauxQHKV
8Z6fCCJUPKvkscfYh5ZJPj/eOyvmyzieHjmKeyGWnhXxMvwUtsTdYgaRPsep
NFvxb3wm88xq+KJVESRGsCF61uQzX6PaNTb/SWkbh+U4vV3064VFvRgwqmYI
hkKVaM9bpQftMrynQqeMze1w/aMq2De7/SeobAiIy6g56JC5SHOYKrFFrNl0
lSwmdnItaJPPPMvHgVHCGVHt1rhJwLDqlK44MFnW91sIpTuOR76aXAro4ten
j77Z7452qJDVHldhYiTWuCEl82ET+Fs8LB1Blcm3Dc/UUiSXXezni3s/np0c
5hlUqvJc3hcs+PX2ujeSmfqybiLWa9pOWaPAK66Sbt4tZR5RaybWiVMggKTu
G+62uQLUofiIgHDOW+VXD85/OD365eH56ycPYTzfvHgh81zfvBINmh8Yd5y+
AJqqkaOjnfBgZu9WszDyTdfFL93xBXvRCIwk6TQtDxETV3JFSBSnaGoG0s7E
pia89DnqjLCfgVmRcNtv714nH6QfcrBgdqWRVfWhdXRPRAaDB393gvSf6z90
/enMs0rxYf9QiXLGGPi4cwiVqYrOSj22ECcjZqhQgFODXVeeI3sAzA7CKByf
qmYdbiUZSSUiDdf5VJb4r8053323yXmEO1+yh06kvxjqBNzeon04NU47j/Bo
y3bP8JqLIcrPzRpktSVRrdeXWWBAwfZEkP3DJitlMDX7d5J4RlwwZY2QzQRs
yCn6jZbLsVOyeG0lGmsOjGpuLpidXtmZ0vKKzkuYrqmXIaPBiO+eHfbPqoWq
39rdYDhGVZFlm41GszKjJzn/QSTKsp2fzcmMIsMRaXv+OOEG3HoPoFdjYREG
FuaRBB26y3K5ZDUHsWgnEoYRG0l6E3GWmqQe3o7ShEozW11ED3EzAB7721Iz
lVrnO9aeHY+hOpujyBhWnCAtEm14LNII2neL2dNiDlCTJt1hBbaFrQKcY0k7
xxKVExt+6vftTwbVNvtDe1IxkMOa7QmM6dtkohg45MHoag6FlpZYO+iteoiO
ORe2Ed9VgolrnpCLRvE2ye64yAwGHC5rrCGvNMNcJQfWPG5g+D42QswbZEnd
IOsd4FljxS58pSFOVyEnS8bUso+xv8vHtCrJZuVN9YQ/DfHvwVayZRDRAdcB
YRJzLpt1zWboLVkypsSF3K8wFWRkuhGV+DTa1Z3rZrPGDEktvjsanleLDSns
NsiooF0LTqnFJ/y+TcKWtuF1lkK9KWN38vdJnj+ZeQaSBMLUPQ7IkEOD2m3Y
VJU50UMEnsHxicS+2e/BCTaB3oltNAQsamRbedjrHLLqLstPkv8TxwHrRtqo
ZPz749FRmhUclgBCLinIMimVsVf90lg6fMMvj88RiRQUky3AleFih3M7aTZp
VRatd1TglXak6z0ZtN9894xpOtu7FlO7pklsKaWnNa9DzdB4NWBRbiPGxcS2
VwOY9RUbt4p9AgyGRchOrQCxwKZhNe6Vc/jBvF+vGFZ3I3yUTyHEyGl6LWSf
lnJHOZaiHvca9dtOekWrrTstEnAVYSKyazowjFLGHOWSz0aDi1YZ/wsw8KBd
eSKM0M9G/Ue9+oMOx6xw/+SQr2Tw47tJ5qZOS9lywFRSy1zSCZa0YIoHt4V9
QsTHYYerE3pr3mTHi+wNLDisE6s/QRfboytamV8+FHkT/bYXOL8A4AQbIiTA
3LRkm/FYKcO2H4TCnMZCVLJkH+2kerfDOA4wC4hVKwFqvtd0uxw0VUa05tg4
AlXXzuhaI+YCgqpe4oOd1E5Qb6y7WBwg0ot2+bxeyi0Ed2Y12t6d1MFO8rSc
ZVvRJtlX9jbjdWkT+lC6CF+skQyHCmWkQIxF6gsWqftvdCzUfWZHcumwewjc
MpOBB7Xyo1ZVcTnCbnBeeN1FCMaiw7KGt/CwW8VLKdjGcDvODPNeBwjwsMAe
rVcX906ruX4q8uxg8Oby8qezk18fngP1PdvvUUbwgJ0Gb765JL/3ixfEhM+f
s5vrO0bW1AQ/HLw43sNO6KeiTxnqFvArcqY+vBPDapA6L5Msr5jwsOUlIzdF
tTX2DGNNsil6okIaCJxsPz5zP8WAEWYfjhh3i9iZbAZhdsCygrb4vvTV+2mN
xZDMFOiNmyXIG8PaynG8l3ke6xcsWnAuLcPpuxE2uU2OM3ilG1lHReacFxrn
XiT8/GT026tfsf8BvJtrLjYMud9Np7F8Rf8uHWswPgrGS2BOwpwqYtvbkeNC
GgGUCBZ8jhvwJq/ImETilv4OXTwHdnRG1gGb5PYhj6VAgIF/O/l8ldUf9/Mg
QiT2CLPiyRxmyGanzRab1mDzsSe5jPNWd438Uawm+IyWyNd21sONq2ZCmM2D
DKkU8b+49tKsVsBuqBQoifTTnHLCj7AqmkywwzwSJetjJAqHMi5ardPC76cp
E8x6nGi/nlXzLc1+bz3rE0G4XR4TN1yZJU81KW5MV3FKkBlpK46gCUcbkSa9
WyKiRkphCuCOCzdbiG/wLcOYq/58/MkRBuZwgkq9i814MunQXGO2B3FZy2OV
VnUp4yb7MabfhTQVwWx0904cD9tyKP8HEMIOTJt+9kTEQF9fPqEqK0ziVhLr
id+yn+QILVArUyubMSauZw3F7nKzLbOopiqm6c6qy9ZFs3TRKfdiYfgaGAcs
OI5eI+IOtmMnpTSVc3c7MOnkb9yKU+dLRombFEe2eytO52M8G3975vn/nes/
kXke6wxOfu7sf9LYcnI81F2jbuBnbPK/mXz+XOZZZZBuZEuunSmre4CU0Yi0
H5AliVxkqzZlsLYT95vFH8lh9cOb5y9+PB2RsHpbQkLXw9GDHcOxhVkACIFp
Gu2kxqNkMkBauvXOb1H0p4B5Fb+pqDZwzO/V89/sd+ExmTA5GeEvzw+HgI44
X/dquWEqhnCj6jMomL7MRt/Kx3LO73QeTpGelBrogkBI4zaj94UlgEI8ps26
81ZydCdZXLgSEJzTKwELxnlXCJn5pxSVYC4o3Z4ixX1BKIbG0xbTLGkpcjzh
t+eADywboozWqissWHR8WFWsZE/yY9TsCNMIq/FhNY311rGqvvSPpp2vCgck
aIpHlbHlKJzuqOTYuGF18kaHqloEv1X1m0c7fBC2i2usYsMX44u1JasmthRe
CeCHZYiAqBFZnJZi0LEeZRJAjFhPpiOv1UN6Mzpl5RGoitBYDxH0so3orK/U
Z/7uZO//Ode/2/AsZE0IdSnxo7h9Jng1p8b0mOo4V8ecLcLwIJ02gFWABG++
efrtwaAbDcOFwXk97FRxYKkQge9JkPjl9dNH3x4OsZeqc8bb/OrkJ7OsFWke
7q66jIhnWEcbxqKIlw+2CT9GqQT8bH5OL/r0qs5RTThNtikWqWLzw+nR62ff
fHe0C9iPf+rfjsASKpaPT2We60L7AATFoowTJgOYTHUNRMRqEOdZHkhzHft4
o2Gca3KSb0Thu3HkD7dZ7rlbyewn2HpXkwbmbigsw8sRSiZhk9+JfzPq4cae
9BvkwCGBSQQPxW6ljWjX9qpXgowfycara4pCQqyFTV0ZuklSapPKNRGTJqX0
YS7FOMi0c4vB/LxeN+0HzQqWAi+lsmpl51Z25oO5RT3n17MLGg74zxenT3fb
7UR4kIr+8vC8dyeSWg10k+HBVkyp0o9yqfv1IuIImM2XDD0ufpHJylcPz1+J
vszP56ewohdthhIIMc7q+e8OBmy6TkXP68VCQMedVHTrYas6ZF86QSPeI1Bi
zce0D3CpsgyM9cIRUtItWD2XUedpLT9wI+0FRSMwTix0fRYJbDW367e7i3Zn
zuwEnP1Z42BS/yfz/L96/em083VzqWT5xIlMBHtTzDkD0uxt0OdSgc7HBAJC
9bKf+VjEGqSg3IzjG6j3XaVUE75YNq0vSRr/uVTzzR8npcbkjcyz0tUKR5rC
aq5YZRTJM6XobsdGmRRCOfhTNUvesTwOmwTdQSgMY95BsDlrwmD2wuHqonmU
TimmICAN9vlkmKPIzWgALWe1PPNCUuYmmHFIQcCVscNFHz+WOcnc9lF2u6ZR
tmxwO0LOwAlqQlHgzPVUmY+kxJNj+NqSJoqu7jaVWr3m9j+TeZbkc3cx1Aw6
ZAxeC3MKXubiYUvxCQ3DUUJvCMcqSzAU4YrPrC+H4I9YEJ82GgsWC5diJ3E/
5FzSbMSVsCRKTu4a0DILgZ1gSJJzja1TZBWLREjaCScI5BywVXKDeqZYapqm
EBaWJLGIuXzWAHbpxk77ooSz4tm4xTrI7rT8Bc4XznRGXtwsXpbWnmD3CG6v
9pUGx8QWjhmdSMkJ78ao0EdtPgbI0UaQSlUta1z65BTzkoVl2RVixqbp4Ecq
C2Z+SocDhcOq6zYJsb0ItkEeMNLxDrdSKquDJQUI5z8FQmSyWnMPt+lKmATY
TuC9swAxGwQ8Pq8VsSVapgPXXJ03CxNabkLb30g87jYo9zBjYLeQBMnyOkFX
xfv0vAEbwTUiWSDJsQrkLNu2yaUgFJ3d22EVhpP3cj3cDjptP807luXa+P+J
nmeCRrj1oKtyCx2REcRLx77qrLpA0afl7KNufRiJNpdCqvgrDTOSFJoYM1lh
b+Svcs5YYVyqM62yYhX8+r1i7rSc25epAdgTPMI3oy5WDCuvZMVKPhK/nDdF
5NQNVxcsEvQFuJEa8IMiI9gkIczbFkfOKUgn3kkx86BbZU8sJ1iNm5pZbWlo
rM8ax9ntB90KuchMZ5RKYgPDZLESobryZnQZW4C5YztKVQvt3NJqeqhhO4QN
5Wxx2ShrJv7ppEDuiOP8dh5ee0lv3/Z6mxGAirvFdHpppRePPOrVHnQqiNF2
QvpBLvV02H7Uqzc2XIAuVU8/b5W+OxzCjIxySVxnTBzlLlolIckp4A7vljJN
220JKS7laaa5pLC6Q4kLjrZT98sF1jsQHkaiPd3DVsFJxE5jhLURudzrAK6Q
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
6ciGJYH3aSybCNp0RCIn0GiHHEF4/gzB4K/m839l5/lf2nyWp12MKsvUzEdd
8PrsBHEMwZbiOQ73jjQEREAD4qW7cSpJaGq52enQ3ky4FrIAlmorBjNLkuPb
gkTRABpsU+qHXWIEVWy9SfP5pu18l1IbUmANwPiyWzsqppG/9hSNpvM+7XHp
dqHoVCvt+2eVPDtgudS+kANqRyNk9Hke4h4SBGIaQhByfSWsH++l8cPI9QhT
eP/ijNq2XGnsixdiPpI7FSdisfaa9xtoz6JNJGVjsf3pqBWlMgnesBelYyCK
CEEFT9Z5wsUoURcaFGe1ImknKapMVFepKUcB7VyKned/vMOf+LD4XE3bOUSm
zqWkFsffTo+fDJrIpI1Vuzil3Dg2MvgsGsgsHSHp3FmnABT7tBsM/ojS0q4U
74NnwQnKewm+ZzJZWdIbYRuppBOhEQDAA/lOQisJCRdx0gcCRIpZ0D9uO4tF
QpMLVKMHYryrKeeARMQGuK0sUroZt7QZJrl0HE10da+5ZEqCKDAtKgLUL9T5
34giCQIA4EaNUlTE4mn7vST1Hjlv60mCFvXoPPqbsNWAku2/TOr5C96CZBNN
qcDJHCZVHOnK1LUjuOG1OaLNwRYzDjDeMBKTZugUNozT65wmBXHO3wGcNC17
b0XF6j1vlGVHEesQf82Kri9Q5VE+XVqjVvl97J2NiL9OgbiCwF0NzeZ5fZr4
B1CBhykZ+nYdZNmjxqKSPORPyMJc61BVlwyq1uxQtwdlHX67dFWo23Z+VcPm
fVjLY18f7qXvlzJI6PiMFKqiu+i1Prw8zxJdpvqySRqt6VWvrX6rgl0gTBko
/9IX9APp2469gPc8Ke6WVH46wrZUvLslZIdTMWp2ZWjKLP8hbRcCJnI95xkb
RapHLpo3nedPns782s7zNFVohpE4zZc32cIVhtoFfGRs0vaG17BscmaWtLpm
F4XSdXczIo7nOOtRBdC9kZ4TQLom8Co19NIJWT6XDVoK4q8P6/nhvUQnGsET
l1zoimkWNK1sme2tyKuTA+qK5NNFQ89rGr1psqnHrWrdtf0ojUJO63myqV23
aluj3SQuj4W2aQuR9gJn/RYpLsTDLOniOqXW7rCsHnoxrC4uTrFESbWa0zni
GrTaQatjRQYLxl+d5//a18ed5/0ZbbBodjSvveq0Ke/soligI3mU5D1KFM6S
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
NTuIgFnSLERmwLxeLIyXomqKtG0UFwzAXQCeltDOiDl7G8mfjg8AcrorYQDp
wjy9XFPTi/24CNll6SHbj8dwKFQtWwnF08A0k1TOMlV/QNmLI/OiH5kIO/dC
TGfEJILDtoA3iBJMyYN0B+vonINGFKLKoiMK4SsUiW3rLnLbawmHv5ws/ef6
o66dr2eZhHbuSC9rTxrtqBgcCAGL7mfSLd0tj8sg8zwHaasa5RyRN+3n1yu2
ndf19goNzZFOIvq93O2f9puIeIpZYtvn2dnPJ8f4+udnJ+8eH30bq/wNzDMv
j9afsbYmjT1FO19cHq03G+gsBgdTZt9nX172Wwj+Jrli+nzhJmhOE+kMdtC0
KVazrHYBezzt1mjz5xWVvClTNRh/0kKM/YhdCbQfjythCrpC2GztA6Kozge6
d1lCaljsFzos59l/cptoYVR6Hvk4aBQNmGc0oK6yDYiVRIio+lgFKCLczVvs
sYlHG6bTlJ5M9uNpdOKj2sYNqgJfwzxfi9svxqwuR2PSwi5dlho2fcSaEu4Q
hThgMqZVZ8yG9P7hfeJTNxbtjkUKDrCEdqhj2ifHtCgM0C5t0mjOWLVJszZr
bq0wK8cpTEjjsx5VC48bJQS0+rQ5ygFFbYm/y0cnLMA2lu3WaZ6S9Wr7jNWc
QcZ9y/kpY8UBtxW3mwjLNF+pGQ+1V0P4Goj3qL4J4F2JBLO2ng3otXCw5AQK
AaNgmzjrsaqxtg+rORzcD0rrzVgoveyvhGy2wG21seD76Rg2Av73uFkEGHh9
f8huDcLmITv96oW9Qqqfjm9tcKz7gVguAjriL+u2iKjH40Cz7IgTeIk0gd2P
t6knUJ+zKuN6fYlK2o2lIIHcpEF4aXDP8pph9z62cN9r/Oe08yf8MzbRhNGf
Mklof2pZqP61Ny1iEV5jQLIxwLEaXVjTJbKO9WWnplF3qxYMsm8zHcezuL+Z
xi3CDQEyYef5ZpomYuu0662FgkXTyvv1/KJRMe2i38R243i4mhiKhJGwsMYd
pZlmxUdpTYpjcHNxJK0fjVIM+bJtHPAwoO+Y1vkK2vkj93vxr9jI+IC6c9Go
3PMaSir5Cuc8/IyC7kv7KyspU2Zr1qYmNgLOV7DBZL/naRzZFCW91rILJN8U
0zHSGnqQrjFzgZbfpmbjlPkl0ekvXoP/6lN8/CzfcIlaHcXhDeoUsSUe219N
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
vhMWv1oqi7YmGdA4s+mGAV16AU6IUBxVxBuLHKywa/OsyGCPAztJRYYM7XA1
/ur+8GEp2w6HqB6cTBTFnW0Qi22vJTggIMrSQNHY45wdWLLpvnon1EMopomk
2xbu9w9mSzwiJ7IYBOx8UFgnL2eRYB+RM+pfvdwp55mdyuDI8dIjUspz+CmE
zWfdGt5/1wnXvQblhqgsJPQRjgw/AyMzO8cVriA9SHKMl7cRH23Bvpwt/kfs
jQg/Nn2B1vn7VGqQBJ+6Q1eUBcpW41bnPP52MLS9nsAuxnFA1/VwEJmRjHau
7+aTB+WsyN1X+unYi53e861ObcXtJiPHrVIvFT0dNLG1Mz5/XjN2MlQqUM2o
QMLIXErzZtbjL0wZZZ9ZGB+Bc3bOTBuVRQsw/mzQ+uX581cH24NkrDJvjTD8
eXtwbhwA3t3Pc7yiZFL8CmfWSatcCnKqpRZ1EM9f7PbxG3Enfzzcf3OwRwDz
+jVTuYue53fvf33+PVK8X89Oke4hzv9wsK0sLV7uDhDtEeGVGGnZtRHq8Suw
bXFqFDSApfVhOnFQorAePbwmNQqSxCP7m+uq0ABYhRW+KZxDQbpNqPngp4w/
7gZrjuFwSY1Uy2fP4exzQmyKxs/KxOVWOlHw07+Y07gbCbwT5GgZpG9sRB9N
uPO6pMhamGQfeFHJhF5Kea6Qz5wr/7zh+Vzgkb0xBn3SleRRKxpCMEeQH9yL
91ejfOd3w6pyVBD9avLVc5SvrMzSHoKcrfgGfhvzXFL0tWdEy1BNms3bGrKt
QTR21mtSl1K8jXBn6raDR89RIxpEZg5K67hRvXi45dJ6oyuySFuIsdEosF/1
03ap65hnrbVkN2QAAT/SDYWbAaduOT0nhPfWAm6cMJjkAl1PGBcH01+j86zI
5wW7OfLIDuF4xWM6qGR3cymssZHgxrxU/aIxtil+PfPss5s3aMv/Qzh//QP6
A5nnK5ZYpAIWWQ3Bwbq1SkPbvChdUM95RtuY07LzWuW2jfwO4YidzOl4P0XN
fIDejI//CshKjeJqvr0STvsWgeiI2UQifms9gfDL8tbEKLwguDVuO1syCfvj
0cGLne7+ZgpwV43Sq+CDgEzv2niUlaBMIufXn3VqONOzizq2J4IwcDh2KMLs
m4d7vyGRfPsOgfdph26DQEGdEAF/Q3dq9JEnIHx9sL21FmcX9L0EG1FuUmj/
ncyz6nYuTRnScFJSZgd42/VAEB+hvGgNEjRTU6o1+O25Kb26bCuOHTckM76E
v/zl+dnzrR41rqd0oJcB1QM4+YhbfTZo4mOqDA6nwDARR9gvTRjF8yH90ueB
V0Ioh159Vm7MX1mwiG3MIDKmYTKGu4E3cz+dYuV9yuhHIi1RykJ2s3MvWZ8y
/liTUwksFOWgpxJNK1wRpo6ou4SziT0heFJ0qyeb2pm8fhr3L6eL/0fQzhfR
jLZHTP9pT+OG65pNinI1Xphlz+p+PoXMFFlnKx562q2K1Mbgt9MnH358d4FV
fnvxEn8DeHzaawLPHFRytRVnkI4rv6FH1ULFsXOarjZ4Ydl42mn88uL57noS
O7FgGN3VsBrvxbLBXitMXNJ/+OzKj9Haux+jzhVw+AsKrg6okHOwfdKp0KTy
NgcPP2+WHjHPt0Z2nDig6Xs4y21SXDSF16VAxMa0P+vT8TWgPgIUlvdJp9xf
iZJcndSOq8WDfAY/wkMtJubdavLRK7Unz+j6A5hnIV0pCIDdlEmyySEWoVVH
KFz0cmPW/TbbiVNxQNDBGjWsilMG/+m8cpT/lx8/jkhSXgzUjSDSFsQ6xAGA
N6V5VV20CyLYfpnVr2vB/Wya6nyuq1RHOMedTxVNi+IDhfR+Yb0LkCxiGrlp
BvYLOX2ZLsG9VeGIMibDeAyoDED0zeEepX4CLm4+ciUET8TVB8V14Fjc28q0
WRrX++FIR3wta76AaGVrjfO2w9FUvoi9P+3UnvUayHd4h8f89THiIrxIY1mY
+TjvCTJ6WucsBJGn96fMK1LP6vpH8PlvcH0tleTR+xNG23QPChm6l1LLxRgG
w9vxBHlFcUMW11qSfkguGpaDzc49Ho8gh2IWmYrnHAPJDhIx5GtPuzXOfTx7
MhJIVDW4X2RS9fUP/x+o1CIM
            "], {{0, 35}, {1918, 0}}, {0, 255}, 
            ColorFunction -> RGBColor], 
           BoxForm`ImageTag[
           "Byte", ColorSpace -> "RGB", Interleaving -> True], Selectable -> 
           False], BaseStyle -> "ImageGraphics", ImageSizeRaw -> {1918, 35}, 
          PlotRange -> {{0, 1918}, {0, 35}}], TraditionalForm]], {0, 0}, {0, 
       0}, {1918, 35}], Background -> None, Background -> None, 
      GrayLevel[1], 
      InsetBox[
       FormBox[
        StyleBox[
        "\"  The Anatomy of Mathematica\"", FontFamily -> "Mathematica5", 
         FontSize -> 32, StripOnInput -> False], TraditionalForm], {0, 
       0}, {-1, -0.7175}], 
      RGBColor[0.318273, 0.00636301, 0.184527], 
      InsetBox[
       FormBox[
        StyleBox[
        "\"  The Anatomy of Mathematica\"", FontFamily -> "Mathematica5", 
         FontSize -> 32, StripOnInput -> False], TraditionalForm], {0, 
       0}, {-0.994, -0.75}], 
      GrayLevel[1], 
      InsetBox[
       FormBox[
        StyleBox[
        "\"                                                                   \
                                          Mathematica Summer School 2011\"", 
         FontFamily -> "Mathematica5", FontSize -> 32, StripOnInput -> False],
         TraditionalForm], {0, 0}, {-0.825, -0.7175}], 
      RGBColor[0.318273, 0.00636301, 0.184527], 
      InsetBox[
       FormBox[
        StyleBox[
        "\"                                                                   \
                                          Mathematica Summer School 2011\"", 
         FontFamily -> "Mathematica5", FontSize -> 32, StripOnInput -> False],
         TraditionalForm], {0, 0}, {-0.8225, -0.75}]}, 
     ImageSize -> {1918, 35}, PlotRange -> {{0, 1918}, {0, 35}}]], Background -> 
   None, "DockedCell", CellMargins -> {{0, 0}, {0, 0}}, CellFrameMargins -> 0,
    ImageMargins -> 0, Editable -> False]},
PrintingCopies->1,
PrintingStartingPageNumber->1,
PrintingPageRange->{1, Automatic},
PageHeaders->{{
   Cell[
    TextData[{
      StyleBox[
       CounterBox["Page"], "PageNumber", FontFamily -> "Verdana Italic", 
       FontSize -> 16, FontSlant -> "Plain"], " ", "|", " "}], "Header", 
    CellMargins -> {{0, Inherited}, {Inherited, Inherited}}], 
   Cell[
    TextData[
     StyleBox[
      RowBox[{"An", " ", "Introduction", " ", "to", " ", "Mathematica"}], 
      "Header", FontFamily -> "Verdana Italic", FontSize -> 16, FontSlant -> 
      "Plain"]], "Header"], None}, {None, 
   Cell[
    TextData[
     StyleBox[
      RowBox[{"An", " ", "Introduction", " ", "to", " ", "Mathematica"}], 
      "Header", FontFamily -> "Verdana Italic", FontSize -> 16, FontSlant -> 
      "Plain"]], "Header"], 
   Cell[
    TextData[{" ", "|", " ", 
      StyleBox[
       CounterBox["Page", CounterFunction :> Identity], "PageNumber", 
       FontFamily -> "Verdana Italic", FontSize -> 16, FontSlant -> 
       "Plain"]}], "Header", 
    CellMargins -> {{Inherited, 0}, {Inherited, Inherited}}]}},
PageFooters->{{None, None, 
   Cell[
    TextData[
     StyleBox[
      RowBox[{
       "Mathematica", " ", "School", " ", "2011", ",", " ", "Perimeter", " ", 
        "Institute", " ", "for", " ", "Theoretical", " ", "Physics"}], 
      FontFamily -> "Verdana Italic", FontSize -> 16, FontSlant -> "Plain"]], 
    "Footer", CellMargins -> {{Inherited, 0}, {Inherited, Inherited}}]}, {
  None, None, 
   Cell[
    TextData[
     StyleBox[
      RowBox[{
       "Mathematica", " ", "School", " ", "2011", ",", " ", "Perimeter", " ", 
        "Institute", " ", "for", " ", "Theoretical", " ", "Physics"}], 
      FontFamily -> "Verdana Italic", FontSize -> 16, FontSlant -> "Plain"]], 
    "Footer", CellMargins -> {{Inherited, 0}, {Inherited, Inherited}}]}},
PageHeaderLines->{True, True},
PageFooterLines->False,
PrintingOptions->{"FacingPages"->True,
"FirstPageFace"->Right,
"FirstPageFooter"->False,
"FirstPageHeader"->False,
"Magnification"->37,
"PaperOrientation"->"Portrait",
"PaperSize"->{1697.04, 2211.36}},
ShowSelection->True,
ScriptMinSize->12,
FontSize->18,
FrontEndVersion->"8.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (February 23, \
2011)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[
    StyleDefinitions -> 
     FrontEnd`FileName[{"Report"}, "StandardReport.nb", CharacterEncoding -> 
       "UTF-8"]]], 
   Cell[
    StyleData["Title"], CellFrame -> {{0, 0}, {3, 0}}, TextAlignment -> Left, 
    TextJustification -> 0., FontFamily -> "Palatino", FontSize -> 64, 
    FontWeight -> "Plain", FontSlant -> "Italic"], 
   Cell[
    StyleData["Section"], CellFrame -> {{0, 0}, {2, 0}}, 
    CellFrameMargins -> {{0, 4}, {4, 4}}, FontFamily -> "Palatino", FontSize -> 
    36, FontWeight -> "Bold", FontSlant -> "Italic", FontColor -> 
    RGBColor[0.39981689173723967`, 0.02606240939955749, 
      0.23938353551537347`]], 
   Cell[
    StyleData["Text"], PageWidth -> WindowWidth, FontFamily -> "Palatino", 
    FontSize -> 24, FontWeight -> "Plain", FontSlant -> "Plain"], 
   Cell[
    StyleData["Input"], FontFamily -> "Times", FontSize -> 18, FontWeight -> 
    "Bold", FontSlant -> "Plain"], 
   Cell[
    StyleData["Output"], PageWidth -> WindowWidth, CellHorizontalScrolling -> 
    True, PageBreakWithin -> True, FontFamily -> "Times", FontSize -> 18, 
    FontWeight -> "Plain", FontSlant -> "Plain"], 
   Cell[
    StyleData["Code"], InitializationCell -> False, FontFamily -> "Times", 
    FontSize -> 12, FontWeight -> "Bold", FontSlant -> "Plain", Background -> 
    GrayLevel[0.85]], 
   Cell[
    StyleData["Subsubsection"], CellFrame -> {{0, 0}, {0, 0.5}}, CellDingbat -> 
    "\[DiamondSuit]", FontFamily -> "Palatino", FontSize -> 24, FontWeight -> 
    "Plain", FontSlant -> "Plain"], 
   Cell[
    StyleData["Subsection"], CellDingbat -> "\[GrayCircle]", FontFamily -> 
    "Palatino", FontSize -> 24, FontWeight -> "Bold", FontSlant -> "Plain"], 
   Cell[
    StyleData["Item"], CellMargins -> {{100, 10}, {4, 4}}, FontFamily -> 
    "Palatino", FontSize -> 24, FontWeight -> "Plain", FontSlant -> "Plain"], 
   
   Cell[
    CellGroupData[{
      Cell[
       BoxData[
        RowBox[{"?", "RandomInteger"}]], "Input", 
       CellChangeTimes -> {{3.520497464974527*^9, 3.520497469115362*^9}}], 
      Cell[
       BoxData[
        RowBox[{
          StyleBox[
          "\"\\!\\(\\*RowBox[{\\\"RandomInteger\\\", \\\"[\\\", RowBox[{\\\"{\
\\\", RowBox[{SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], \
StyleBox[\\\"min\\\", \\\"TI\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"max\\\", \
\\\"TI\\\"]]}], \\\"}\\\"}], \\\"]\\\"}]\\) gives a pseudorandom integer in \
the range \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], \\\"min\\\"], \
\\\",\\\", \\\"\[Ellipsis]\\\", \\\",\\\", SubscriptBox[StyleBox[\\\"i\\\", \
\\\"TI\\\"], \\\"max\\\"]}], \\\"}\\\"}]\\). \
\\n\\!\\(\\*RowBox[{\\\"RandomInteger\\\", \\\"[\\\", \
SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"max\\\", \
\\\"TI\\\"]], \\\"]\\\"}]\\) gives a pseudorandom integer in the range \\!\\(\
\\*RowBox[{\\\"{\\\", RowBox[{\\\"0\\\", \\\",\\\", \\\"\[Ellipsis]\\\", \
\\\",\\\", SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], \\\"max\\\"]}], \
\\\"}\\\"}]\\). \\n\\!\\(\\*RowBox[{\\\"RandomInteger\\\", \\\"[\\\", \\\"]\\\
\"}]\\) pseudorandomly gives 0 or 1. \
\\n\\!\\(\\*RowBox[{\\\"RandomInteger\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"range\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"n\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) gives a list of \\!\\(\\*StyleBox[\\\"n\\\", \\\
\"TI\\\"]\\) pseudorandom integers. \
\\n\\!\\(\\*RowBox[{\\\"RandomInteger\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"range\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\
\"TR\\\"]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) gives an \
\\!\\(\\*RowBox[{SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], \\\"1\\\"], \\\
\"\[Cross]\\\", SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], \\\"2\\\"], \
\\\"\[Cross]\\\", \\\"\[Ellipsis]\\\", \\\" \\\"}]\\) array of pseudorandom \
integers. \"", "MSG"], "\[NonBreakingSpace]", 
          ButtonBox[
           StyleBox["\[RightSkeleton]", "SR"], Active -> True, BaseStyle -> 
           "Link", ButtonData -> "paclet:ref/RandomInteger"]}]], "Print", 
       "PrintUsage", CellChangeTimes -> {3.520497469612527*^9}, CellTags -> 
       "Info3520483069-3467679"]}, Open]], 
   Cell[
    StyleData["Message"], MenuSortingValue -> 10000, FontFamily -> 
    "Lucida Grande", FontSize -> 18, FontWeight -> "Plain", FontSlant -> 
    "Plain"], 
   Cell[
    StyleData["MSG"], MenuSortingValue -> 10000, FontFamily -> 
    "Lucida Grande", FontSize -> 18, FontWeight -> "Plain", FontSlant -> 
    "Plain"], 
   Cell[
    StyleData["Subtitle"], CellFrame -> {{0, 0}, {3, 0}}, 
    CellMargins -> {{27, Inherited}, {5, 15}}, 
    CellGroupingRules -> {"SectionGrouping", 20}, TextAlignment -> Left, 
    TextJustification -> 0.25, FontFamily -> "Palatino", FontSize -> 36, 
    FontWeight -> "Bold", FontSlant -> "Plain", 
    FontVariations -> {"Underline" -> False}, FontColor -> 
    RGBColor[0.13723964293888763`, 0.3137254901960784, 
      0.36470588235294116`]]}, Visible -> False, FrontEndVersion -> 
  "8.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (February 23, 2011)", 
  StyleDefinitions -> "PrivateStylesheetFormatting.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "Info3521187954-8024692"->{
  Cell[58672, 1853, 389, 10, 61, "Print",
   CellTags->"Info3521187954-8024692"],
  Cell[59064, 1865, 521, 15, 26, "Print",
   CellTags->"Info3521187954-8024692"]},
 "Info3521188831-8024692"->{
  Cell[93278, 2978, 472, 11, 69, "Print",
   CellTags->"Info3521188831-8024692"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"Info3521187954-8024692", 249362, 6022},
 {"Info3521188831-8024692", 249556, 6027}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[579, 22, 499, 11, 112, "Title"],
Cell[CellGroupData[{
Cell[1103, 37, 458, 9, 71, "Subtitle"],
Cell[CellGroupData[{
Cell[1586, 50, 303, 7, 88, "Section"],
Cell[CellGroupData[{
Cell[1914, 61, 272, 8, 35, "Subsection"],
Cell[2189, 71, 567, 16, 131, "Text"],
Cell[CellGroupData[{
Cell[2781, 91, 283, 7, 43, "Subsubsection"],
Cell[CellGroupData[{
Cell[3089, 102, 221, 5, 42, "Input"],
Cell[3313, 109, 77, 1, 42, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[3439, 116, 349, 12, 43, "Subsubsection"],
Cell[CellGroupData[{
Cell[3813, 132, 244, 6, 42, "Input"],
Cell[4060, 140, 77, 1, 42, "Output"]
}, Open  ]],
Cell[4152, 144, 104, 1, 41, "Text"],
Cell[CellGroupData[{
Cell[4281, 149, 285, 6, 42, "Input"],
Cell[4569, 157, 77, 1, 42, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[4695, 164, 285, 12, 43, "Subsubsection"],
Cell[CellGroupData[{
Cell[5005, 180, 441, 9, 135, "Input"],
Cell[5449, 191, 99, 1, 42, "Output"],
Cell[5551, 194, 100, 1, 42, "Output"],
Cell[5654, 197, 97, 1, 42, "Output"],
Cell[5754, 200, 101, 1, 42, "Output"],
Cell[5858, 203, 100, 1, 42, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[6007, 210, 270, 7, 43, "Subsubsection"],
Cell[CellGroupData[{
Cell[6302, 221, 287, 8, 50, "Input"],
Cell[6592, 231, 539, 18, 42, "Output"]
}, Open  ]],
Cell[7146, 252, 373, 12, 71, "Text"],
Cell[CellGroupData[{
Cell[7544, 268, 1778, 56, 89, "Input"],
Cell[9325, 326, 224, 7, 45, "Output"],
Cell[9552, 335, 258, 8, 45, "Output"],
Cell[9813, 345, 81, 1, 42, "Output"]
}, Open  ]],
Cell[9909, 349, 303, 9, 41, "Text"],
Cell[10215, 360, 198, 6, 41, "Text"],
Cell[CellGroupData[{
Cell[10438, 370, 221, 7, 50, "Input"],
Cell[10662, 379, 9469, 259, 331, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[20168, 643, 507, 15, 80, "Input"],
Cell[20678, 660, 100, 1, 42, "Output"],
Cell[20781, 663, 565, 18, 42, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[21395, 687, 273, 6, 71, "Subsubsection"],
Cell[CellGroupData[{
Cell[21693, 697, 222, 7, 50, "Input"],
Cell[21918, 706, 73, 1, 42, "Output"]
}, Open  ]],
Cell[22006, 710, 436, 15, 71, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[22479, 730, 299, 10, 43, "Subsubsection"],
Cell[CellGroupData[{
Cell[22803, 744, 73, 2, 42, "Input"],
Cell[22879, 748, 98, 2, 42, "Output"]
}, Open  ]],
Cell[22992, 753, 462, 12, 71, "Text"],
Cell[23457, 767, 262, 9, 41, "Text"],
Cell[CellGroupData[{
Cell[23744, 780, 109, 3, 42, "Input"],
Cell[23856, 785, 276, 9, 42, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[24169, 799, 246, 6, 42, "Input"],
Cell[24418, 807, 5733, 101, 252, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[30212, 915, 460, 10, 35, "Subsection"],
Cell[30675, 927, 496, 8, 71, "Text"],
Cell[31174, 937, 175, 4, 41, "Text"],
Cell[31352, 943, 788, 27, 131, "Text"],
Cell[CellGroupData[{
Cell[32165, 974, 209, 9, 43, "Subsubsection"],
Cell[CellGroupData[{
Cell[32399, 987, 291, 6, 35, "Item"],
Cell[32693, 995, 136, 2, 35, "Item"]
}, Open  ]],
Cell[32844, 1000, 320, 5, 41, "Text"],
Cell[CellGroupData[{
Cell[33189, 1009, 405, 10, 89, "Input"],
Cell[33597, 1021, 164, 3, 42, "Output"],
Cell[33764, 1026, 405, 13, 42, "Output"],
Cell[34172, 1041, 159, 3, 42, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[34380, 1050, 243, 11, 43, "Subsubsection"],
Cell[34626, 1063, 312, 11, 35, "Item"],
Cell[34941, 1076, 442, 10, 101, "Text"],
Cell[35386, 1088, 155, 4, 41, "Text"],
Cell[CellGroupData[{
Cell[35566, 1096, 261, 8, 35, "Item"],
Cell[35830, 1106, 315, 11, 35, "Item"],
Cell[36148, 1119, 262, 8, 35, "Item"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[36459, 1133, 327, 14, 43, "Subsubsection"],
Cell[36789, 1149, 142, 2, 35, "Item"],
Cell[36934, 1153, 281, 6, 41, "Text"],
Cell[CellGroupData[{
Cell[37240, 1163, 367, 7, 89, "Input"],
Cell[37610, 1172, 153, 3, 42, "Output"],
Cell[37766, 1177, 303, 10, 42, "Output"],
Cell[38072, 1189, 150, 3, 42, "Output"]
}, Open  ]],
Cell[38237, 1195, 95, 1, 41, "Text"],
Cell[CellGroupData[{
Cell[38357, 1200, 220, 4, 42, "Input"],
Cell[38580, 1206, 99, 2, 42, "Output"]
}, Open  ]],
Cell[38694, 1211, 355, 8, 71, "Text"],
Cell[39052, 1221, 332, 13, 41, "Text"],
Cell[CellGroupData[{
Cell[39409, 1238, 816, 23, 89, "Input"],
Cell[40228, 1263, 127, 2, 42, "Output"],
Cell[40358, 1267, 127, 2, 42, "Output"],
Cell[40488, 1271, 6654, 182, 407, "Output"]
}, Open  ]],
Cell[47157, 1456, 144, 2, 35, "Item"],
Cell[47304, 1460, 415, 11, 71, "Text"],
Cell[CellGroupData[{
Cell[47744, 1475, 142, 3, 42, "Input"],
Cell[47889, 1480, 98, 1, 42, "Output"]
}, Open  ]],
Cell[48002, 1484, 309, 9, 41, "Text"],
Cell[CellGroupData[{
Cell[48336, 1497, 203, 4, 66, "Input"],
Cell[48542, 1503, 99, 1, 42, "Output"],
Cell[48644, 1506, 98, 1, 42, "Output"]
}, Open  ]],
Cell[48757, 1510, 344, 10, 41, "Text"],
Cell[CellGroupData[{
Cell[49126, 1524, 209, 4, 66, "Input"],
Cell[49338, 1530, 76, 1, 42, "Output"],
Cell[49417, 1533, 75, 1, 42, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[49529, 1539, 249, 5, 66, "Input"],
Cell[49781, 1546, 97, 1, 42, "Output"],
Cell[49881, 1549, 215, 7, 42, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[50133, 1561, 141, 2, 35, "Item"],
Cell[50277, 1565, 144, 2, 35, "Item"]
}, Open  ]],
Cell[CellGroupData[{
Cell[50458, 1572, 188, 3, 66, "Input"],
Cell[50649, 1577, 127, 2, 42, "Output"],
Cell[50779, 1581, 284, 9, 42, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[51100, 1595, 138, 2, 35, "Item"],
Cell[51241, 1599, 188, 3, 35, "Item"]
}, Open  ]],
Cell[51444, 1605, 315, 5, 112, "Input"],
Cell[CellGroupData[{
Cell[51784, 1614, 334, 8, 66, "Input"],
Cell[52121, 1624, 198, 5, 42, "Output"],
Cell[52322, 1631, 422, 14, 42, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[52781, 1650, 304, 8, 66, "Input"],
Cell[53088, 1660, 398, 13, 42, "Output"],
Cell[53489, 1675, 96, 1, 42, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[53634, 1682, 190, 6, 43, "Subsubsection"],
Cell[53827, 1690, 144, 2, 35, "Item"],
Cell[CellGroupData[{
Cell[53996, 1696, 367, 8, 66, "Input"],
Cell[54366, 1706, 130, 1, 42, "Output"],
Cell[54499, 1709, 385, 12, 42, "Output"]
}, Open  ]],
Cell[54899, 1724, 143, 2, 35, "Item"],
Cell[55045, 1728, 218, 6, 41, "Text"],
Cell[55266, 1736, 382, 11, 71, "Text"],
Cell[CellGroupData[{
Cell[55673, 1751, 743, 20, 69, "Input"],
Cell[56419, 1773, 231, 6, 42, "Output"],
Cell[56653, 1781, 233, 6, 42, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[56947, 1794, 91, 1, 35, "Subsection"],
Cell[CellGroupData[{
Cell[57063, 1799, 320, 9, 43, "Subsubsection"],
Cell[CellGroupData[{
Cell[57408, 1812, 384, 7, 89, "Input"],
Cell[57795, 1821, 159, 3, 42, "Output"],
Cell[57957, 1826, 292, 9, 42, "Output"],
Cell[58252, 1837, 199, 4, 42, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[58488, 1846, 159, 3, 42, "Input"],
Cell[CellGroupData[{
Cell[58672, 1853, 389, 10, 61, "Print",
 CellTags->"Info3521187954-8024692"],
Cell[59064, 1865, 521, 15, 26, "Print",
 CellTags->"Info3521187954-8024692"]
}, Open  ]]
}, Open  ]],
Cell[59612, 1884, 218, 6, 41, "Text"],
Cell[CellGroupData[{
Cell[59855, 1894, 231, 6, 91, "Input"],
Cell[60089, 1902, 257, 7, 42, "Output"],
Cell[60349, 1911, 414, 13, 42, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[60812, 1930, 164, 3, 43, "Subsubsection"],
Cell[60979, 1935, 768, 24, 131, "Text"],
Cell[61750, 1961, 397, 10, 71, "Text"],
Cell[CellGroupData[{
Cell[62172, 1975, 303, 9, 66, "Input"],
Cell[62478, 1986, 185, 5, 63, "Output"],
Cell[62666, 1993, 7929, 216, 307, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[70632, 2214, 410, 14, 66, "Input"],
Cell[71045, 2230, 74, 1, 42, "Output"],
Cell[71122, 2233, 76, 1, 42, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[71235, 2239, 969, 31, 112, "Input"],
Cell[72207, 2272, 90, 2, 63, "Output"],
Cell[72300, 2276, 140, 3, 42, "Output"],
Cell[72443, 2281, 86, 1, 42, "Output"],
Cell[72532, 2284, 102, 2, 42, "Output"]
}, Open  ]],
Cell[72649, 2289, 239, 7, 41, "Text"],
Cell[CellGroupData[{
Cell[72913, 2300, 269, 7, 42, "Input"],
Cell[73185, 2309, 7927, 216, 346, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[81149, 2530, 298, 9, 42, "Input"],
Cell[81450, 2541, 278, 8, 42, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[81765, 2554, 606, 19, 89, "Input"],
Cell[82374, 2575, 70, 1, 42, "Output"],
Cell[82447, 2578, 70, 1, 42, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[82578, 2586, 121, 3, 35, "Subsection"],
Cell[CellGroupData[{
Cell[82724, 2593, 210, 7, 43, "Subsubsection"],
Cell[CellGroupData[{
Cell[82959, 2604, 230, 4, 66, "Input"],
Cell[83192, 2610, 97, 2, 42, "Output"],
Cell[83292, 2614, 222, 8, 42, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[83563, 2628, 187, 7, 43, "Subsubsection"],
Cell[CellGroupData[{
Cell[83775, 2639, 169, 3, 42, "Input"],
Cell[83947, 2644, 97, 2, 42, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[84081, 2651, 228, 6, 42, "Input"],
Cell[84312, 2659, 125, 3, 42, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[84486, 2668, 262, 7, 71, "Subsubsection"],
Cell[CellGroupData[{
Cell[84773, 2679, 585, 16, 89, "Input"],
Cell[85361, 2697, 174, 3, 42, "Output"],
Cell[85538, 2702, 176, 3, 42, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[85763, 2711, 298, 7, 99, "Subsubsection"],
Cell[CellGroupData[{
Cell[86086, 2722, 583, 18, 66, "Input"],
Cell[86672, 2742, 267, 7, 42, "Output"],
Cell[86942, 2751, 262, 7, 42, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[87253, 2764, 320, 10, 71, "Subsubsection"],
Cell[CellGroupData[{
Cell[87598, 2778, 309, 7, 42, "Input"],
Cell[87910, 2787, 406, 10, 42, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[88353, 2802, 341, 10, 42, "Input"],
Cell[88697, 2814, 950, 27, 66, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[89684, 2846, 206, 5, 42, "Input"],
Cell[89893, 2853, 187, 4, 42, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[90117, 2862, 830, 27, 89, "Input"],
Cell[90950, 2891, 345, 10, 42, "Output"],
Cell[91298, 2903, 293, 8, 42, "Output"],
Cell[91594, 2913, 291, 8, 42, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[91922, 2926, 227, 6, 42, "Input"],
Cell[92152, 2934, 290, 8, 42, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[92479, 2947, 147, 3, 42, "Input"],
Cell[92629, 2952, 290, 8, 42, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[92956, 2965, 61, 1, 42, "Input"],
Cell[93020, 2968, 98, 1, 42, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[93155, 2974, 120, 2, 42, "Input"],
Cell[93278, 2978, 472, 11, 69, "Print",
 CellTags->"Info3521188831-8024692"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[93823, 2997, 289, 5, 88, "Section"],
Cell[CellGroupData[{
Cell[94137, 3006, 154, 2, 35, "Subsection"],
Cell[CellGroupData[{
Cell[94316, 3012, 363, 12, 43, "Subsubsection"],
Cell[CellGroupData[{
Cell[94704, 3028, 2674, 69, 184, "Input"],
Cell[97381, 3099, 1996, 53, 112, "Output"],
Cell[99380, 3154, 1139, 25, 66, "Output"],
Cell[100522, 3181, 1864, 53, 112, "Output"],
Cell[102389, 3236, 1593, 40, 130, "Output"]
}, Open  ]],
Cell[103997, 3279, 887, 24, 116, "Input"]
}, Open  ]],
Cell[104899, 3306, 406, 12, 43, "Subsubsection"],
Cell[105308, 3320, 415, 13, 43, "Subsubsection"],
Cell[CellGroupData[{
Cell[105748, 3337, 275, 8, 43, "Subsubsection"],
Cell[106026, 3347, 247, 6, 47, "Input"],
Cell[CellGroupData[{
Cell[106298, 3357, 129, 2, 42, "Input"],
Cell[106430, 3361, 96, 1, 42, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[106575, 3368, 276, 9, 43, "Subsubsection"],
Cell[CellGroupData[{
Cell[106876, 3381, 212, 5, 44, "Input"],
Cell[107091, 3388, 1137, 25, 66, "Output"]
}, Open  ]],
Cell[108243, 3416, 440, 11, 68, "Input"],
Cell[CellGroupData[{
Cell[108708, 3431, 248, 8, 44, "Input"],
Cell[108959, 3441, 283, 7, 42, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[109303, 3455, 104, 1, 35, "Subsection"],
Cell[CellGroupData[{
Cell[109432, 3460, 189, 3, 43, "Subsubsection"],
Cell[109624, 3465, 213, 4, 41, "Text"],
Cell[CellGroupData[{
Cell[109862, 3473, 377, 10, 42, "Input"],
Cell[110242, 3485, 96, 1, 42, "Output"]
}, Open  ]],
Cell[110353, 3489, 155, 2, 41, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[110545, 3496, 350, 8, 71, "Subsubsection"],
Cell[CellGroupData[{
Cell[110920, 3508, 524, 16, 50, "Input"],
Cell[111447, 3526, 256, 7, 51, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[111764, 3540, 106, 1, 35, "Subsection"],
Cell[111873, 3543, 257, 8, 43, "Subsubsection"],
Cell[112133, 3553, 139, 2, 43, "Subsubsection"],
Cell[CellGroupData[{
Cell[112297, 3559, 137, 2, 43, "Subsubsection"],
Cell[112437, 3563, 182, 3, 42, "Input"],
Cell[112622, 3568, 671, 17, 90, "Input"]
}, Open  ]],
Cell[113308, 3588, 158, 2, 43, "Subsubsection"]
}, Open  ]],
Cell[CellGroupData[{
Cell[113503, 3595, 657, 18, 35, "Subsection"],
Cell[CellGroupData[{
Cell[114185, 3617, 288, 4, 43, "Subsubsection"],
Cell[114476, 3623, 326, 7, 66, "Input"],
Cell[114805, 3632, 333, 8, 66, "Input"],
Cell[115141, 3642, 237, 6, 41, "Text"],
Cell[115381, 3650, 292, 7, 71, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[115710, 3662, 289, 4, 71, "Subsubsection"],
Cell[116002, 3668, 331, 8, 71, "Text"],
Cell[CellGroupData[{
Cell[116358, 3680, 326, 7, 66, "Input"],
Cell[116687, 3689, 71, 1, 42, "Output"],
Cell[116761, 3692, 93, 1, 42, "Output"]
}, Open  ]],
Cell[116869, 3696, 375, 11, 71, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[117281, 3712, 216, 6, 43, "Subsubsection"],
Cell[CellGroupData[{
Cell[117522, 3722, 270, 4, 35, "Item"],
Cell[117795, 3728, 270, 4, 35, "Item"],
Cell[118068, 3734, 272, 4, 35, "Item"],
Cell[118343, 3740, 276, 4, 35, "Item"],
Cell[118622, 3746, 88, 1, 35, "Item"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[118771, 3754, 224, 4, 35, "Subsection"],
Cell[118998, 3760, 277, 8, 43, "Subsubsection"],
Cell[119278, 3770, 140, 2, 43, "Subsubsection"],
Cell[119421, 3774, 140, 2, 43, "Subsubsection"],
Cell[119564, 3778, 204, 3, 43, "Subsubsection"],
Cell[119771, 3783, 138, 2, 43, "Subsubsection"],
Cell[119912, 3787, 258, 10, 43, "Subsubsection"],
Cell[120173, 3799, 157, 2, 43, "Subsubsection"],
Cell[120333, 3803, 141, 2, 43, "Subsubsection"],
Cell[CellGroupData[{
Cell[120499, 3809, 135, 2, 43, "Subsubsection"],
Cell[120637, 3813, 183, 3, 66, "Input"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[120869, 3822, 218, 3, 35, "Subsection"],
Cell[CellGroupData[{
Cell[121112, 3829, 137, 2, 43, "Subsubsection"],
Cell[121252, 3833, 409, 14, 71, "Text"]
}, Closed]],
Cell[121676, 3850, 208, 7, 43, "Subsubsection"],
Cell[121887, 3859, 137, 2, 43, "Subsubsection"],
Cell[122027, 3863, 136, 2, 43, "Subsubsection"],
Cell[122166, 3867, 136, 2, 43, "Subsubsection"],
Cell[122305, 3871, 144, 2, 43, "Subsubsection"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
